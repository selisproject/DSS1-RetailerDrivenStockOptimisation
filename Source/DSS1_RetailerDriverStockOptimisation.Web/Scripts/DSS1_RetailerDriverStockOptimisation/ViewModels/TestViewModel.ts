// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
namespace DSS1_RetailerDriverStockOptimisation.ViewModels.Test {
export class TestViewModel extends DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Item:
true,BusinessUnitId:
true,CategoryId:
true,SubCategoryId:
true,BaseUnitId:
                true
            }
        } else {
            this._members["Item"] = true;
            this._members["BusinessUnitId"] = true;
            this._members["CategoryId"] = true;
            this._members["SubCategoryId"] = true;
            this._members["BaseUnitId"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: TestViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): TestViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        TestViewModel = new TestViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateTestViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateTestViewModel(original: TestViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Item !== undefined) this.Item = original.Item;
        if(original.BusinessUnitId !== undefined) this.BusinessUnitId = original.BusinessUnitId;
        if(original.CategoryId !== undefined) this.CategoryId = original.CategoryId;
        if(original.SubCategoryId !== undefined) this.SubCategoryId = original.SubCategoryId;
        if(original.BaseUnitId !== undefined) this.BaseUnitId = original.BaseUnitId;
        if (original.DropdownBox__InitialSelection !== undefined) this.DropdownBox__InitialSelection = original.DropdownBox__InitialSelection;
        if (original.DropdownBox1__InitialSelection !== undefined) this.DropdownBox1__InitialSelection = original.DropdownBox1__InitialSelection;
        if (original.DropdownBox2__InitialSelection !== undefined) this.DropdownBox2__InitialSelection = original.DropdownBox2__InitialSelection;
        this.DropdownBoxSelectedItemKeys = original.DropdownBoxSelectedItemKeys;
        this.DropdownBox1SelectedItemKeys = original.DropdownBox1SelectedItemKeys;
        this.DropdownBox2SelectedItemKeys = original.DropdownBox2SelectedItemKeys;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = TestViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            TestViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): TestViewModel {
        var reduced = TestViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        TestViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: TestViewModel) {
        if (reduced == null) return;

        delete reduced.DropdownBox__InitialSelection;
        delete reduced.DropdownBox1__InitialSelection;
        delete reduced.DropdownBox2__InitialSelection;

        DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Item:
    any;
public BusinessUnitId:
    any;
public CategoryId:
    any;
public SubCategoryId:
    any;
public BaseUnitId:
    any;
public DropdownBox__InitialSelection:
    any;
public DropdownBox1__InitialSelection:
    any;
public DropdownBox2__InitialSelection:
    any;
public DropdownBoxSelectedItemKeys:
    any[];
public DropdownBox1SelectedItemKeys:
    any[];
public DropdownBox2SelectedItemKeys:
    any[];
}

}
