var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
var DSS1_RetailerDriverStockOptimisation;
(function (DSS1_RetailerDriverStockOptimisation) {
    var ViewModels;
    (function (ViewModels) {
        var AgreementForm;
        (function (AgreementForm) {
            var AgreementFormViewModel = /** @class */ (function (_super) {
                __extends(AgreementFormViewModel, _super);
                function AgreementFormViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Agreement: true, DeliverySchedules: true, Items: true, InventoryItems: true
                        };
                    }
                    else {
                        _this._members["Agreement"] = true;
                        _this._members["DeliverySchedules"] = true;
                        _this._members["Items"] = true;
                        _this._members["InventoryItems"] = true;
                    }
                    _this.DeliverySchedules = new Array();
                    _this.Items = new Array();
                    _this.InventoryItems = new Array();
                    return _this;
                }
                AgreementFormViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Agreement != null)
                        instance.Agreement = Agreement_AgreementViewModel._lightCast(instance.Agreement);
                    if (instance.DeliverySchedules != null) {
                        for (var i = 0; i < instance.DeliverySchedules.length; i++) {
                            instance.DeliverySchedules[i] = DeliverySchedules_DeliveryScheduleViewModel._lightCast(instance.DeliverySchedules[i]);
                        }
                    }
                    if (instance.Items != null) {
                        for (var i = 0; i < instance.Items.length; i++) {
                            instance.Items[i] = Items_ItemViewModel._lightCast(instance.Items[i]);
                        }
                    }
                    if (instance.InventoryItems != null) {
                        for (var i = 0; i < instance.InventoryItems.length; i++) {
                            instance.InventoryItems[i] = InventoryItems_InventoryItemViewModel._lightCast(instance.InventoryItems[i]);
                        }
                    }
                    return instance;
                };
                AgreementFormViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new AgreementFormViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreementFormViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                AgreementFormViewModel.prototype._hydrateAgreementFormViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Agreement !== undefined)
                        this.Agreement = Agreement_AgreementViewModel._initializeFrom(original.Agreement, ignoreReadOnlyProperties, context);
                    if (original.DeliverySchedules != null) {
                        for (var i = 0; i < original.DeliverySchedules.length; i++) {
                            this.DeliverySchedules.push(DeliverySchedules_DeliveryScheduleViewModel._initializeFrom(original.DeliverySchedules[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.Items != null) {
                        for (var i = 0; i < original.Items.length; i++) {
                            this.Items.push(Items_ItemViewModel._initializeFrom(original.Items[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.InventoryItems != null) {
                        for (var i = 0; i < original.InventoryItems.length; i++) {
                            this.InventoryItems.push(InventoryItems_InventoryItemViewModel._initializeFrom(original.InventoryItems[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this.txtStatusSelectedItemKeys = original.txtStatusSelectedItemKeys;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = AgreementFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        AgreementFormViewModel._deleteDropDownInitialValues(reduced);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                AgreementFormViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = AgreementFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    AgreementFormViewModel._deleteDropDownInitialValues(reduced);
                    return reduced;
                };
                AgreementFormViewModel._deleteDropDownInitialValues = function (reduced) {
                    if (reduced == null)
                        return;
                    DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
                };
                AgreementFormViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return AgreementFormViewModel;
            }(DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel));
            AgreementForm.AgreementFormViewModel = AgreementFormViewModel;
            var Agreement_AgreementViewModel = /** @class */ (function (_super) {
                __extends(Agreement_AgreementViewModel, _super);
                function Agreement_AgreementViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AgreementDocument: true, DateCreated: true, Id: true, Profile: true, TargetInventoryDays: true, Supplier: true, TransportUnCaps: true
                        };
                    }
                    else {
                        _this._members["AgreementDocument"] = true;
                        _this._members["DateCreated"] = true;
                        _this._members["Id"] = true;
                        _this._members["Profile"] = true;
                        _this._members["TargetInventoryDays"] = true;
                        _this._members["Supplier"] = true;
                        _this._members["TransportUnCaps"] = true;
                    }
                    _this.TransportUnCaps = new Array();
                    return _this;
                }
                Agreement_AgreementViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DateCreated != null)
                        instance.DateCreated = new Date(instance.DateCreated);
                    if (instance.Supplier != null)
                        instance.Supplier = Agreement_Agreement_Supplier_SupplierViewModel._lightCast(instance.Supplier);
                    if (instance.TransportUnCaps != null) {
                        for (var i = 0; i < instance.TransportUnCaps.length; i++) {
                            instance.TransportUnCaps[i] = Agreement_Agreement_TransportUnCaps_TransportUnCapViewModel._lightCast(instance.TransportUnCaps[i]);
                        }
                    }
                    return instance;
                };
                Agreement_AgreementViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreement_AgreementViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreement_AgreementViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreement_AgreementViewModel.prototype._hydrateAgreement_AgreementViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.AgreementDocument !== undefined)
                        this.AgreementDocument = original.AgreementDocument;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DateCreated))
                        this.DateCreated = new Date(original.DateCreated);
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Profile !== undefined)
                        this.Profile = original.Profile;
                    if (original.TargetInventoryDays !== undefined)
                        this.TargetInventoryDays = original.TargetInventoryDays;
                    if (original.Supplier !== undefined)
                        this.Supplier = Agreement_Agreement_Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);
                    if (original.TransportUnCaps != null) {
                        for (var i = 0; i < original.TransportUnCaps.length; i++) {
                            this.TransportUnCaps.push(Agreement_Agreement_TransportUnCaps_TransportUnCapViewModel._initializeFrom(original.TransportUnCaps[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreement_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreement_AgreementViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreement_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreement_AgreementViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreement_AgreementViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.Agreement_AgreementViewModel = Agreement_AgreementViewModel;
            var Agreement_Agreement_Supplier_SupplierViewModel = /** @class */ (function (_super) {
                __extends(Agreement_Agreement_Supplier_SupplierViewModel, _super);
                function Agreement_Agreement_Supplier_SupplierViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Code: true, Id: true, Name: true
                        };
                    }
                    else {
                        _this._members["Code"] = true;
                        _this._members["Id"] = true;
                        _this._members["Name"] = true;
                    }
                    return _this;
                }
                Agreement_Agreement_Supplier_SupplierViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Agreement_Agreement_Supplier_SupplierViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreement_Agreement_Supplier_SupplierViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreement_Agreement_Supplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreement_Agreement_Supplier_SupplierViewModel.prototype._hydrateAgreement_Agreement_Supplier_SupplierViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Code !== undefined)
                        this.Code = original.Code;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreement_Agreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreement_Agreement_Supplier_SupplierViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreement_Agreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreement_Agreement_Supplier_SupplierViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreement_Agreement_Supplier_SupplierViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.Agreement_Agreement_Supplier_SupplierViewModel = Agreement_Agreement_Supplier_SupplierViewModel;
            var Agreement_Agreement_TransportUnCaps_TransportUnCapViewModel = /** @class */ (function (_super) {
                __extends(Agreement_Agreement_TransportUnCaps_TransportUnCapViewModel, _super);
                function Agreement_Agreement_TransportUnCaps_TransportUnCapViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, PercRound: true, Status: true, Tuc1: true, UOP: true, Warehouse: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["PercRound"] = true;
                        _this._members["Status"] = true;
                        _this._members["Tuc1"] = true;
                        _this._members["UOP"] = true;
                        _this._members["Warehouse"] = true;
                    }
                    return _this;
                }
                Agreement_Agreement_TransportUnCaps_TransportUnCapViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Warehouse != null)
                        instance.Warehouse = Agreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel._lightCast(instance.Warehouse);
                    return instance;
                };
                Agreement_Agreement_TransportUnCaps_TransportUnCapViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreement_Agreement_TransportUnCaps_TransportUnCapViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreement_Agreement_TransportUnCaps_TransportUnCapViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreement_Agreement_TransportUnCaps_TransportUnCapViewModel.prototype._hydrateAgreement_Agreement_TransportUnCaps_TransportUnCapViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.PercRound !== undefined)
                        this.PercRound = original.PercRound;
                    if (original.Status !== undefined)
                        this.Status = original.Status;
                    if (original.Tuc1 !== undefined)
                        this.Tuc1 = original.Tuc1;
                    if (original.UOP !== undefined)
                        this.UOP = original.UOP;
                    if (original.Warehouse !== undefined)
                        this.Warehouse = Agreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel._initializeFrom(original.Warehouse, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreement_Agreement_TransportUnCaps_TransportUnCapViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreement_Agreement_TransportUnCaps_TransportUnCapViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreement_Agreement_TransportUnCaps_TransportUnCapViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreement_Agreement_TransportUnCaps_TransportUnCapViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreement_Agreement_TransportUnCaps_TransportUnCapViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.Agreement_Agreement_TransportUnCaps_TransportUnCapViewModel = Agreement_Agreement_TransportUnCaps_TransportUnCapViewModel;
            var Agreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel = /** @class */ (function (_super) {
                __extends(Agreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel, _super);
                function Agreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, Id: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Agreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Agreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel.prototype._hydrateAgreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.Agreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel = Agreement_Agreement_TransportUnCaps_TransportUnCap_Warehouse_WarehouseViewModel;
            var DeliverySchedules_DeliveryScheduleViewModel = /** @class */ (function (_super) {
                __extends(DeliverySchedules_DeliveryScheduleViewModel, _super);
                function DeliverySchedules_DeliveryScheduleViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, LeadTime: true, NameOfDay: true, Warehouse: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["LeadTime"] = true;
                        _this._members["NameOfDay"] = true;
                        _this._members["Warehouse"] = true;
                    }
                    return _this;
                }
                DeliverySchedules_DeliveryScheduleViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Warehouse != null)
                        instance.Warehouse = DeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel._lightCast(instance.Warehouse);
                    return instance;
                };
                DeliverySchedules_DeliveryScheduleViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new DeliverySchedules_DeliveryScheduleViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateDeliverySchedules_DeliveryScheduleViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                DeliverySchedules_DeliveryScheduleViewModel.prototype._hydrateDeliverySchedules_DeliveryScheduleViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.LeadTime !== undefined)
                        this.LeadTime = original.LeadTime;
                    if (original.NameOfDay !== undefined)
                        this.NameOfDay = original.NameOfDay;
                    if (original.Warehouse !== undefined)
                        this.Warehouse = DeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel._initializeFrom(original.Warehouse, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = DeliverySchedules_DeliveryScheduleViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                DeliverySchedules_DeliveryScheduleViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = DeliverySchedules_DeliveryScheduleViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                DeliverySchedules_DeliveryScheduleViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return DeliverySchedules_DeliveryScheduleViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.DeliverySchedules_DeliveryScheduleViewModel = DeliverySchedules_DeliveryScheduleViewModel;
            var DeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel = /** @class */ (function (_super) {
                __extends(DeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel, _super);
                function DeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, Id: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                DeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                DeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new DeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateDeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                DeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel.prototype._hydrateDeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = DeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                DeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = DeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                DeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return DeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.DeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel = DeliverySchedules_DeliverySchedule_Warehouse_WarehouseViewModel;
            var Items_ItemViewModel = /** @class */ (function (_super) {
                __extends(Items_ItemViewModel, _super);
                function Items_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            CoverageDays: true, Description: true, SKU: true, BusinessUnit: true, Category: true, SubCategory: true, BaseUnit: true
                        };
                    }
                    else {
                        _this._members["CoverageDays"] = true;
                        _this._members["Description"] = true;
                        _this._members["SKU"] = true;
                        _this._members["BusinessUnit"] = true;
                        _this._members["Category"] = true;
                        _this._members["SubCategory"] = true;
                        _this._members["BaseUnit"] = true;
                    }
                    return _this;
                }
                Items_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.BusinessUnit != null)
                        instance.BusinessUnit = Items_Item_BusinessUnit_BusinessUnitViewModel._lightCast(instance.BusinessUnit);
                    if (instance.Category != null)
                        instance.Category = Items_Item_Category_CategoryViewModel._lightCast(instance.Category);
                    if (instance.SubCategory != null)
                        instance.SubCategory = Items_Item_SubCategory_SubCategoryViewModel._lightCast(instance.SubCategory);
                    if (instance.BaseUnit != null)
                        instance.BaseUnit = Items_Item_BaseUnit_BaseUnitViewModel._lightCast(instance.BaseUnit);
                    return instance;
                };
                Items_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Items_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItems_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Items_ItemViewModel.prototype._hydrateItems_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.CoverageDays !== undefined)
                        this.CoverageDays = original.CoverageDays;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.BusinessUnit !== undefined)
                        this.BusinessUnit = Items_Item_BusinessUnit_BusinessUnitViewModel._initializeFrom(original.BusinessUnit, ignoreReadOnlyProperties, context);
                    if (original.Category !== undefined)
                        this.Category = Items_Item_Category_CategoryViewModel._initializeFrom(original.Category, ignoreReadOnlyProperties, context);
                    if (original.SubCategory !== undefined)
                        this.SubCategory = Items_Item_SubCategory_SubCategoryViewModel._initializeFrom(original.SubCategory, ignoreReadOnlyProperties, context);
                    if (original.BaseUnit !== undefined)
                        this.BaseUnit = Items_Item_BaseUnit_BaseUnitViewModel._initializeFrom(original.BaseUnit, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Items_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Items_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Items_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Items_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Items_ItemViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.Items_ItemViewModel = Items_ItemViewModel;
            var Items_Item_BusinessUnit_BusinessUnitViewModel = /** @class */ (function (_super) {
                __extends(Items_Item_BusinessUnit_BusinessUnitViewModel, _super);
                function Items_Item_BusinessUnit_BusinessUnitViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, Id: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Items_Item_BusinessUnit_BusinessUnitViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Items_Item_BusinessUnit_BusinessUnitViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Items_Item_BusinessUnit_BusinessUnitViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItems_Item_BusinessUnit_BusinessUnitViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Items_Item_BusinessUnit_BusinessUnitViewModel.prototype._hydrateItems_Item_BusinessUnit_BusinessUnitViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Items_Item_BusinessUnit_BusinessUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Items_Item_BusinessUnit_BusinessUnitViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Items_Item_BusinessUnit_BusinessUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Items_Item_BusinessUnit_BusinessUnitViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Items_Item_BusinessUnit_BusinessUnitViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.Items_Item_BusinessUnit_BusinessUnitViewModel = Items_Item_BusinessUnit_BusinessUnitViewModel;
            var Items_Item_Category_CategoryViewModel = /** @class */ (function (_super) {
                __extends(Items_Item_Category_CategoryViewModel, _super);
                function Items_Item_Category_CategoryViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, Id: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Items_Item_Category_CategoryViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Items_Item_Category_CategoryViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Items_Item_Category_CategoryViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItems_Item_Category_CategoryViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Items_Item_Category_CategoryViewModel.prototype._hydrateItems_Item_Category_CategoryViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Items_Item_Category_CategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Items_Item_Category_CategoryViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Items_Item_Category_CategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Items_Item_Category_CategoryViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Items_Item_Category_CategoryViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.Items_Item_Category_CategoryViewModel = Items_Item_Category_CategoryViewModel;
            var Items_Item_SubCategory_SubCategoryViewModel = /** @class */ (function (_super) {
                __extends(Items_Item_SubCategory_SubCategoryViewModel, _super);
                function Items_Item_SubCategory_SubCategoryViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, Id: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Items_Item_SubCategory_SubCategoryViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Items_Item_SubCategory_SubCategoryViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Items_Item_SubCategory_SubCategoryViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItems_Item_SubCategory_SubCategoryViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Items_Item_SubCategory_SubCategoryViewModel.prototype._hydrateItems_Item_SubCategory_SubCategoryViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Items_Item_SubCategory_SubCategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Items_Item_SubCategory_SubCategoryViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Items_Item_SubCategory_SubCategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Items_Item_SubCategory_SubCategoryViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Items_Item_SubCategory_SubCategoryViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.Items_Item_SubCategory_SubCategoryViewModel = Items_Item_SubCategory_SubCategoryViewModel;
            var Items_Item_BaseUnit_BaseUnitViewModel = /** @class */ (function (_super) {
                __extends(Items_Item_BaseUnit_BaseUnitViewModel, _super);
                function Items_Item_BaseUnit_BaseUnitViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, Id: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Items_Item_BaseUnit_BaseUnitViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Items_Item_BaseUnit_BaseUnitViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Items_Item_BaseUnit_BaseUnitViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItems_Item_BaseUnit_BaseUnitViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Items_Item_BaseUnit_BaseUnitViewModel.prototype._hydrateItems_Item_BaseUnit_BaseUnitViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Items_Item_BaseUnit_BaseUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Items_Item_BaseUnit_BaseUnitViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Items_Item_BaseUnit_BaseUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Items_Item_BaseUnit_BaseUnitViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Items_Item_BaseUnit_BaseUnitViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.Items_Item_BaseUnit_BaseUnitViewModel = Items_Item_BaseUnit_BaseUnitViewModel;
            var InventoryItems_InventoryItemViewModel = /** @class */ (function (_super) {
                __extends(InventoryItems_InventoryItemViewModel, _super);
                function InventoryItems_InventoryItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, CoverageDays: true, SafetyStock: true, Status: true, Item: true, Warehouse: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["CoverageDays"] = true;
                        _this._members["SafetyStock"] = true;
                        _this._members["Status"] = true;
                        _this._members["Item"] = true;
                        _this._members["Warehouse"] = true;
                    }
                    return _this;
                }
                InventoryItems_InventoryItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Item != null)
                        instance.Item = InventoryItems_InventoryItem_Item_ItemViewModel._lightCast(instance.Item);
                    if (instance.Warehouse != null)
                        instance.Warehouse = InventoryItems_InventoryItem_Warehouse_WarehouseViewModel._lightCast(instance.Warehouse);
                    return instance;
                };
                InventoryItems_InventoryItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new InventoryItems_InventoryItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateInventoryItems_InventoryItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                InventoryItems_InventoryItemViewModel.prototype._hydrateInventoryItems_InventoryItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.CoverageDays !== undefined)
                        this.CoverageDays = original.CoverageDays;
                    if (original.SafetyStock !== undefined)
                        this.SafetyStock = original.SafetyStock;
                    if (original.Status !== undefined)
                        this.Status = original.Status;
                    if (original.Item !== undefined)
                        this.Item = InventoryItems_InventoryItem_Item_ItemViewModel._initializeFrom(original.Item, ignoreReadOnlyProperties, context);
                    if (original.Warehouse !== undefined)
                        this.Warehouse = InventoryItems_InventoryItem_Warehouse_WarehouseViewModel._initializeFrom(original.Warehouse, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = InventoryItems_InventoryItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                InventoryItems_InventoryItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = InventoryItems_InventoryItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                InventoryItems_InventoryItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return InventoryItems_InventoryItemViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.InventoryItems_InventoryItemViewModel = InventoryItems_InventoryItemViewModel;
            var InventoryItems_InventoryItem_Item_ItemViewModel = /** @class */ (function (_super) {
                __extends(InventoryItems_InventoryItem_Item_ItemViewModel, _super);
                function InventoryItems_InventoryItem_Item_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            SKU: true, Description: true, UPC: true, AvgDailyDemand: true, CoverageDays: true, PalletSize: true, SupplierPackSize: true, InnerPackSize: true, PalletType: true, PalTI: true, PalHI: true, UOM: true, BusinessUnit: true, Category: true, SubCategory: true, BaseUnit: true
                        };
                    }
                    else {
                        _this._members["SKU"] = true;
                        _this._members["Description"] = true;
                        _this._members["UPC"] = true;
                        _this._members["AvgDailyDemand"] = true;
                        _this._members["CoverageDays"] = true;
                        _this._members["PalletSize"] = true;
                        _this._members["SupplierPackSize"] = true;
                        _this._members["InnerPackSize"] = true;
                        _this._members["PalletType"] = true;
                        _this._members["PalTI"] = true;
                        _this._members["PalHI"] = true;
                        _this._members["UOM"] = true;
                        _this._members["BusinessUnit"] = true;
                        _this._members["Category"] = true;
                        _this._members["SubCategory"] = true;
                        _this._members["BaseUnit"] = true;
                    }
                    return _this;
                }
                InventoryItems_InventoryItem_Item_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.BusinessUnit != null)
                        instance.BusinessUnit = InventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel._lightCast(instance.BusinessUnit);
                    if (instance.Category != null)
                        instance.Category = InventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel._lightCast(instance.Category);
                    if (instance.SubCategory != null)
                        instance.SubCategory = InventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel._lightCast(instance.SubCategory);
                    if (instance.BaseUnit != null)
                        instance.BaseUnit = InventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel._lightCast(instance.BaseUnit);
                    return instance;
                };
                InventoryItems_InventoryItem_Item_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new InventoryItems_InventoryItem_Item_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateInventoryItems_InventoryItem_Item_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                InventoryItems_InventoryItem_Item_ItemViewModel.prototype._hydrateInventoryItems_InventoryItem_Item_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.UPC !== undefined)
                        this.UPC = original.UPC;
                    if (original.AvgDailyDemand !== undefined)
                        this.AvgDailyDemand = original.AvgDailyDemand;
                    if (original.CoverageDays !== undefined)
                        this.CoverageDays = original.CoverageDays;
                    if (original.PalletSize !== undefined)
                        this.PalletSize = original.PalletSize;
                    if (original.SupplierPackSize !== undefined)
                        this.SupplierPackSize = original.SupplierPackSize;
                    if (original.InnerPackSize !== undefined)
                        this.InnerPackSize = original.InnerPackSize;
                    if (original.PalletType !== undefined)
                        this.PalletType = original.PalletType;
                    if (original.PalTI !== undefined)
                        this.PalTI = original.PalTI;
                    if (original.PalHI !== undefined)
                        this.PalHI = original.PalHI;
                    if (original.UOM !== undefined)
                        this.UOM = original.UOM;
                    if (original.BusinessUnit !== undefined)
                        this.BusinessUnit = InventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel._initializeFrom(original.BusinessUnit, ignoreReadOnlyProperties, context);
                    if (original.Category !== undefined)
                        this.Category = InventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel._initializeFrom(original.Category, ignoreReadOnlyProperties, context);
                    if (original.SubCategory !== undefined)
                        this.SubCategory = InventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel._initializeFrom(original.SubCategory, ignoreReadOnlyProperties, context);
                    if (original.BaseUnit !== undefined)
                        this.BaseUnit = InventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel._initializeFrom(original.BaseUnit, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = InventoryItems_InventoryItem_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                InventoryItems_InventoryItem_Item_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = InventoryItems_InventoryItem_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                InventoryItems_InventoryItem_Item_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return InventoryItems_InventoryItem_Item_ItemViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.InventoryItems_InventoryItem_Item_ItemViewModel = InventoryItems_InventoryItem_Item_ItemViewModel;
            var InventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel = /** @class */ (function (_super) {
                __extends(InventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel, _super);
                function InventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, Number: true, Description: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["Number"] = true;
                        _this._members["Description"] = true;
                    }
                    return _this;
                }
                InventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                InventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new InventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateInventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                InventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel.prototype._hydrateInventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Number !== undefined)
                        this.Number = original.Number;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = InventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                InventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = InventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                InventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return InventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.InventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel = InventoryItems_InventoryItem_Item_Item_BusinessUnit_BusinessUnitViewModel;
            var InventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel = /** @class */ (function (_super) {
                __extends(InventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel, _super);
                function InventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, Number: true, Description: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["Number"] = true;
                        _this._members["Description"] = true;
                    }
                    return _this;
                }
                InventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                InventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new InventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateInventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                InventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel.prototype._hydrateInventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Number !== undefined)
                        this.Number = original.Number;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = InventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                InventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = InventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                InventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return InventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.InventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel = InventoryItems_InventoryItem_Item_Item_Category_CategoryViewModel;
            var InventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel = /** @class */ (function (_super) {
                __extends(InventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel, _super);
                function InventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, Number: true, Description: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["Number"] = true;
                        _this._members["Description"] = true;
                    }
                    return _this;
                }
                InventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                InventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new InventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateInventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                InventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel.prototype._hydrateInventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Number !== undefined)
                        this.Number = original.Number;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = InventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                InventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = InventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                InventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return InventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.InventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel = InventoryItems_InventoryItem_Item_Item_SubCategory_SubCategoryViewModel;
            var InventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel = /** @class */ (function (_super) {
                __extends(InventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel, _super);
                function InventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, Number: true, Description: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["Number"] = true;
                        _this._members["Description"] = true;
                    }
                    return _this;
                }
                InventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                InventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new InventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateInventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                InventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel.prototype._hydrateInventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Number !== undefined)
                        this.Number = original.Number;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = InventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                InventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = InventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                InventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return InventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.InventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel = InventoryItems_InventoryItem_Item_Item_BaseUnit_BaseUnitViewModel;
            var InventoryItems_InventoryItem_Warehouse_WarehouseViewModel = /** @class */ (function (_super) {
                __extends(InventoryItems_InventoryItem_Warehouse_WarehouseViewModel, _super);
                function InventoryItems_InventoryItem_Warehouse_WarehouseViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, Code: true, Description: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["Code"] = true;
                        _this._members["Description"] = true;
                    }
                    return _this;
                }
                InventoryItems_InventoryItem_Warehouse_WarehouseViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                InventoryItems_InventoryItem_Warehouse_WarehouseViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new InventoryItems_InventoryItem_Warehouse_WarehouseViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateInventoryItems_InventoryItem_Warehouse_WarehouseViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                InventoryItems_InventoryItem_Warehouse_WarehouseViewModel.prototype._hydrateInventoryItems_InventoryItem_Warehouse_WarehouseViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Code !== undefined)
                        this.Code = original.Code;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = InventoryItems_InventoryItem_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                InventoryItems_InventoryItem_Warehouse_WarehouseViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = InventoryItems_InventoryItem_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                InventoryItems_InventoryItem_Warehouse_WarehouseViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return InventoryItems_InventoryItem_Warehouse_WarehouseViewModel;
            }(BaseClass.ViewModel));
            AgreementForm.InventoryItems_InventoryItem_Warehouse_WarehouseViewModel = InventoryItems_InventoryItem_Warehouse_WarehouseViewModel;
        })(AgreementForm = ViewModels.AgreementForm || (ViewModels.AgreementForm = {}));
    })(ViewModels = DSS1_RetailerDriverStockOptimisation.ViewModels || (DSS1_RetailerDriverStockOptimisation.ViewModels = {}));
})(DSS1_RetailerDriverStockOptimisation || (DSS1_RetailerDriverStockOptimisation = {}));
