var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
var DSS1_RetailerDriverStockOptimisation;
(function (DSS1_RetailerDriverStockOptimisation) {
    var ViewModels;
    (function (ViewModels) {
        var StockManagerView;
        (function (StockManagerView) {
            var StockManagerViewViewModel = /** @class */ (function (_super) {
                __extends(StockManagerViewViewModel, _super);
                function StockManagerViewViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            SelectedForecast: true, ItemsInSelectedForecast: true, ToDate: true, FromDate: true, SelectedSKUs: true, SelectedSKU: true, CollapseLeftColumn: true, CollapseRightColumn: true, ShowAlerts: true, ShowRecommendations: true, FilterList: true, SupplierParameters: true, FlowType: true, ItemsInForecast: true
                        };
                    }
                    else {
                        _this._members["SelectedForecast"] = true;
                        _this._members["ItemsInSelectedForecast"] = true;
                        _this._members["ToDate"] = true;
                        _this._members["FromDate"] = true;
                        _this._members["SelectedSKUs"] = true;
                        _this._members["SelectedSKU"] = true;
                        _this._members["CollapseLeftColumn"] = true;
                        _this._members["CollapseRightColumn"] = true;
                        _this._members["ShowAlerts"] = true;
                        _this._members["ShowRecommendations"] = true;
                        _this._members["FilterList"] = true;
                        _this._members["SupplierParameters"] = true;
                        _this._members["FlowType"] = true;
                        _this._members["ItemsInForecast"] = true;
                    }
                    _this.ItemsInSelectedForecast = new Array();
                    _this.SelectedSKUs = new Array();
                    _this.SupplierParameters = new Array();
                    _this.ItemsInForecast = new Array();
                    return _this;
                }
                StockManagerViewViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.SelectedForecast != null)
                        instance.SelectedForecast = SelectedForecast_OrderForecastViewModel._lightCast(instance.SelectedForecast);
                    if (instance.ItemsInSelectedForecast != null) {
                        for (var i = 0; i < instance.ItemsInSelectedForecast.length; i++) {
                            instance.ItemsInSelectedForecast[i] = ItemsInSelectedForecast_ItemParameterViewModel._lightCast(instance.ItemsInSelectedForecast[i]);
                        }
                    }
                    if (instance.ToDate != null)
                        instance.ToDate = new Date(instance.ToDate);
                    if (instance.FromDate != null)
                        instance.FromDate = new Date(instance.FromDate);
                    if (instance.SelectedSKUs != null) {
                        for (var i = 0; i < instance.SelectedSKUs.length; i++) {
                            instance.SelectedSKUs[i] = SelectedSKUs_ItemViewModel._lightCast(instance.SelectedSKUs[i]);
                        }
                    }
                    if (instance.SelectedSKU != null)
                        instance.SelectedSKU = SelectedSKU_ItemViewModel._lightCast(instance.SelectedSKU);
                    if (instance.SupplierParameters != null) {
                        for (var i = 0; i < instance.SupplierParameters.length; i++) {
                            instance.SupplierParameters[i] = SupplierParameters_SupplierParameterViewModel._lightCast(instance.SupplierParameters[i]);
                        }
                    }
                    if (instance.ItemsInForecast != null) {
                        for (var i = 0; i < instance.ItemsInForecast.length; i++) {
                            instance.ItemsInForecast[i] = ItemsInForecast_ItemViewModel._lightCast(instance.ItemsInForecast[i]);
                        }
                    }
                    return instance;
                };
                StockManagerViewViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new StockManagerViewViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateStockManagerViewViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                StockManagerViewViewModel.prototype._hydrateStockManagerViewViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.SelectedForecast !== undefined)
                        this.SelectedForecast = SelectedForecast_OrderForecastViewModel._initializeFrom(original.SelectedForecast, ignoreReadOnlyProperties, context);
                    if (original.ItemsInSelectedForecast != null) {
                        for (var i = 0; i < original.ItemsInSelectedForecast.length; i++) {
                            this.ItemsInSelectedForecast.push(ItemsInSelectedForecast_ItemParameterViewModel._initializeFrom(original.ItemsInSelectedForecast[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.ToDate))
                        this.ToDate = new Date(original.ToDate);
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.FromDate))
                        this.FromDate = new Date(original.FromDate);
                    if (original.SelectedSKUs != null) {
                        for (var i = 0; i < original.SelectedSKUs.length; i++) {
                            this.SelectedSKUs.push(SelectedSKUs_ItemViewModel._initializeFrom(original.SelectedSKUs[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.SelectedSKU !== undefined)
                        this.SelectedSKU = SelectedSKU_ItemViewModel._initializeFrom(original.SelectedSKU, ignoreReadOnlyProperties, context);
                    if (original.CollapseLeftColumn !== undefined)
                        this.CollapseLeftColumn = original.CollapseLeftColumn;
                    if (original.CollapseRightColumn !== undefined)
                        this.CollapseRightColumn = original.CollapseRightColumn;
                    if (original.ShowAlerts !== undefined)
                        this.ShowAlerts = original.ShowAlerts;
                    if (original.ShowRecommendations !== undefined)
                        this.ShowRecommendations = original.ShowRecommendations;
                    if (original.FilterList !== undefined)
                        this.FilterList = original.FilterList;
                    if (original.SupplierParameters != null) {
                        for (var i = 0; i < original.SupplierParameters.length; i++) {
                            this.SupplierParameters.push(SupplierParameters_SupplierParameterViewModel._initializeFrom(original.SupplierParameters[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.FlowType !== undefined)
                        this.FlowType = original.FlowType;
                    if (original.ItemsInForecast != null) {
                        for (var i = 0; i < original.ItemsInForecast.length; i++) {
                            this.ItemsInForecast.push(ItemsInForecast_ItemViewModel._initializeFrom(original.ItemsInForecast[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.ddlSKUs__InitialSelection !== undefined)
                        this.ddlSKUs__InitialSelection = original.ddlSKUs__InitialSelection;
                    this.listSuppliersSelectedItemKeys = original.listSuppliersSelectedItemKeys;
                    this.listWarehousesSelectedItemKeys = original.listWarehousesSelectedItemKeys;
                    this.listBusinessUnitsSelectedItemKeys = original.listBusinessUnitsSelectedItemKeys;
                    this.listCategoriesSelectedItemKeys = original.listCategoriesSelectedItemKeys;
                    this.listSubcategoriesSelectedItemKeys = original.listSubcategoriesSelectedItemKeys;
                    this.ddlSubcategorySelectedItemKeys = original.ddlSubcategorySelectedItemKeys;
                    this.listBaseUnitsSelectedItemKeys = original.listBaseUnitsSelectedItemKeys;
                    this.listSKUsSelectedItemKeys = original.listSKUsSelectedItemKeys;
                    this.ddlSKUsSelectedItemKeys = original.ddlSKUsSelectedItemKeys;
                    this.DropdownBoxSelectedItemKeys = original.DropdownBoxSelectedItemKeys;
                    this.lstOrderForecastsSelectedItemKeys = original.lstOrderForecastsSelectedItemKeys;
                    this.chartOrderForecastSelectedItemKeys = original.chartOrderForecastSelectedItemKeys;
                    this.chartStockLevelsSelectedItemKeys = original.chartStockLevelsSelectedItemKeys;
                    this.OptionButtonSelectedItemKeys = original.OptionButtonSelectedItemKeys;
                    this.listOrderForecastDetailsSelectedItemKeys = original.listOrderForecastDetailsSelectedItemKeys;
                    this.Table1SelectedItemKeys = original.Table1SelectedItemKeys;
                    this.Table2SelectedItemKeys = original.Table2SelectedItemKeys;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = StockManagerViewViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        StockManagerViewViewModel._deleteDropDownInitialValues(reduced);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                StockManagerViewViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = StockManagerViewViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    StockManagerViewViewModel._deleteDropDownInitialValues(reduced);
                    return reduced;
                };
                StockManagerViewViewModel._deleteDropDownInitialValues = function (reduced) {
                    if (reduced == null)
                        return;
                    delete reduced.ddlSKUs__InitialSelection;
                    DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
                };
                StockManagerViewViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return StockManagerViewViewModel;
            }(DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel));
            StockManagerView.StockManagerViewViewModel = StockManagerViewViewModel;
            var SelectedForecast_OrderForecastViewModel = /** @class */ (function (_super) {
                __extends(SelectedForecast_OrderForecastViewModel, _super);
                function SelectedForecast_OrderForecastViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            CreatedBy: true, CreatedOn: true, EndDate: true, Id: true, StartDate: true, State: true, Status: true
                        };
                    }
                    else {
                        _this._members["CreatedBy"] = true;
                        _this._members["CreatedOn"] = true;
                        _this._members["EndDate"] = true;
                        _this._members["Id"] = true;
                        _this._members["StartDate"] = true;
                        _this._members["State"] = true;
                        _this._members["Status"] = true;
                    }
                    return _this;
                }
                SelectedForecast_OrderForecastViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.CreatedOn != null)
                        instance.CreatedOn = new Date(instance.CreatedOn);
                    if (instance.EndDate != null)
                        instance.EndDate = new Date(instance.EndDate);
                    if (instance.StartDate != null)
                        instance.StartDate = new Date(instance.StartDate);
                    return instance;
                };
                SelectedForecast_OrderForecastViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SelectedForecast_OrderForecastViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSelectedForecast_OrderForecastViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SelectedForecast_OrderForecastViewModel.prototype._hydrateSelectedForecast_OrderForecastViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.CreatedBy !== undefined)
                        this.CreatedBy = original.CreatedBy;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.CreatedOn))
                        this.CreatedOn = new Date(original.CreatedOn);
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.EndDate))
                        this.EndDate = new Date(original.EndDate);
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.StartDate))
                        this.StartDate = new Date(original.StartDate);
                    if (original.State !== undefined)
                        this.State = original.State;
                    if (original.Status !== undefined)
                        this.Status = original.Status;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SelectedForecast_OrderForecastViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SelectedForecast_OrderForecastViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SelectedForecast_OrderForecastViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SelectedForecast_OrderForecastViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SelectedForecast_OrderForecastViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.SelectedForecast_OrderForecastViewModel = SelectedForecast_OrderForecastViewModel;
            var ItemsInSelectedForecast_ItemParameterViewModel = /** @class */ (function (_super) {
                __extends(ItemsInSelectedForecast_ItemParameterViewModel, _super);
                function ItemsInSelectedForecast_ItemParameterViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            CoverageDays: true, Id: true, SupplierCanDeliver: true, SupplierComments: true, SupplierQuantity: true, Item: true
                        };
                    }
                    else {
                        _this._members["CoverageDays"] = true;
                        _this._members["Id"] = true;
                        _this._members["SupplierCanDeliver"] = true;
                        _this._members["SupplierComments"] = true;
                        _this._members["SupplierQuantity"] = true;
                        _this._members["Item"] = true;
                    }
                    return _this;
                }
                ItemsInSelectedForecast_ItemParameterViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Item != null)
                        instance.Item = ItemsInSelectedForecast_ItemParameter_Item_ItemViewModel._lightCast(instance.Item);
                    return instance;
                };
                ItemsInSelectedForecast_ItemParameterViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInSelectedForecast_ItemParameterViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInSelectedForecast_ItemParameterViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInSelectedForecast_ItemParameterViewModel.prototype._hydrateItemsInSelectedForecast_ItemParameterViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.CoverageDays !== undefined)
                        this.CoverageDays = original.CoverageDays;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.SupplierCanDeliver !== undefined)
                        this.SupplierCanDeliver = original.SupplierCanDeliver;
                    if (original.SupplierComments !== undefined)
                        this.SupplierComments = original.SupplierComments;
                    if (original.SupplierQuantity !== undefined)
                        this.SupplierQuantity = original.SupplierQuantity;
                    if (original.Item !== undefined)
                        this.Item = ItemsInSelectedForecast_ItemParameter_Item_ItemViewModel._initializeFrom(original.Item, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInSelectedForecast_ItemParameterViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInSelectedForecast_ItemParameterViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInSelectedForecast_ItemParameterViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInSelectedForecast_ItemParameterViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInSelectedForecast_ItemParameterViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInSelectedForecast_ItemParameterViewModel = ItemsInSelectedForecast_ItemParameterViewModel;
            var ItemsInSelectedForecast_ItemParameter_Item_ItemViewModel = /** @class */ (function (_super) {
                __extends(ItemsInSelectedForecast_ItemParameter_Item_ItemViewModel, _super);
                function ItemsInSelectedForecast_ItemParameter_Item_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AvgDailyDemand: true, CoverageDays: true, Description: true, InnerPackSize: true, PalHI: true, PalletSize: true, PalletType: true, PalTI: true, SKU: true, SupplierPackSize: true, UOM: true, UPC: true
                        };
                    }
                    else {
                        _this._members["AvgDailyDemand"] = true;
                        _this._members["CoverageDays"] = true;
                        _this._members["Description"] = true;
                        _this._members["InnerPackSize"] = true;
                        _this._members["PalHI"] = true;
                        _this._members["PalletSize"] = true;
                        _this._members["PalletType"] = true;
                        _this._members["PalTI"] = true;
                        _this._members["SKU"] = true;
                        _this._members["SupplierPackSize"] = true;
                        _this._members["UOM"] = true;
                        _this._members["UPC"] = true;
                    }
                    return _this;
                }
                ItemsInSelectedForecast_ItemParameter_Item_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                ItemsInSelectedForecast_ItemParameter_Item_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInSelectedForecast_ItemParameter_Item_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInSelectedForecast_ItemParameter_Item_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInSelectedForecast_ItemParameter_Item_ItemViewModel.prototype._hydrateItemsInSelectedForecast_ItemParameter_Item_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.AvgDailyDemand !== undefined)
                        this.AvgDailyDemand = original.AvgDailyDemand;
                    if (original.CoverageDays !== undefined)
                        this.CoverageDays = original.CoverageDays;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.InnerPackSize !== undefined)
                        this.InnerPackSize = original.InnerPackSize;
                    if (original.PalHI !== undefined)
                        this.PalHI = original.PalHI;
                    if (original.PalletSize !== undefined)
                        this.PalletSize = original.PalletSize;
                    if (original.PalletType !== undefined)
                        this.PalletType = original.PalletType;
                    if (original.PalTI !== undefined)
                        this.PalTI = original.PalTI;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.SupplierPackSize !== undefined)
                        this.SupplierPackSize = original.SupplierPackSize;
                    if (original.UOM !== undefined)
                        this.UOM = original.UOM;
                    if (original.UPC !== undefined)
                        this.UPC = original.UPC;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInSelectedForecast_ItemParameter_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInSelectedForecast_ItemParameter_Item_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInSelectedForecast_ItemParameter_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInSelectedForecast_ItemParameter_Item_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInSelectedForecast_ItemParameter_Item_ItemViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInSelectedForecast_ItemParameter_Item_ItemViewModel = ItemsInSelectedForecast_ItemParameter_Item_ItemViewModel;
            var SelectedSKUs_ItemViewModel = /** @class */ (function (_super) {
                __extends(SelectedSKUs_ItemViewModel, _super);
                function SelectedSKUs_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, InnerPackSize: true, PalHI: true, PalletSize: true, PalletType: true, PalTI: true, SKU: true, SupplierPackSize: true, UOM: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["InnerPackSize"] = true;
                        _this._members["PalHI"] = true;
                        _this._members["PalletSize"] = true;
                        _this._members["PalletType"] = true;
                        _this._members["PalTI"] = true;
                        _this._members["SKU"] = true;
                        _this._members["SupplierPackSize"] = true;
                        _this._members["UOM"] = true;
                    }
                    return _this;
                }
                SelectedSKUs_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                SelectedSKUs_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SelectedSKUs_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSelectedSKUs_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SelectedSKUs_ItemViewModel.prototype._hydrateSelectedSKUs_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.InnerPackSize !== undefined)
                        this.InnerPackSize = original.InnerPackSize;
                    if (original.PalHI !== undefined)
                        this.PalHI = original.PalHI;
                    if (original.PalletSize !== undefined)
                        this.PalletSize = original.PalletSize;
                    if (original.PalletType !== undefined)
                        this.PalletType = original.PalletType;
                    if (original.PalTI !== undefined)
                        this.PalTI = original.PalTI;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.SupplierPackSize !== undefined)
                        this.SupplierPackSize = original.SupplierPackSize;
                    if (original.UOM !== undefined)
                        this.UOM = original.UOM;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SelectedSKUs_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SelectedSKUs_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SelectedSKUs_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SelectedSKUs_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SelectedSKUs_ItemViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.SelectedSKUs_ItemViewModel = SelectedSKUs_ItemViewModel;
            var SelectedSKU_ItemViewModel = /** @class */ (function (_super) {
                __extends(SelectedSKU_ItemViewModel, _super);
                function SelectedSKU_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, InnerPackSize: true, PalHI: true, PalletSize: true, PalletType: true, PalTI: true, SKU: true, SupplierPackSize: true, UOM: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["InnerPackSize"] = true;
                        _this._members["PalHI"] = true;
                        _this._members["PalletSize"] = true;
                        _this._members["PalletType"] = true;
                        _this._members["PalTI"] = true;
                        _this._members["SKU"] = true;
                        _this._members["SupplierPackSize"] = true;
                        _this._members["UOM"] = true;
                    }
                    return _this;
                }
                SelectedSKU_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                SelectedSKU_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SelectedSKU_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSelectedSKU_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SelectedSKU_ItemViewModel.prototype._hydrateSelectedSKU_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.InnerPackSize !== undefined)
                        this.InnerPackSize = original.InnerPackSize;
                    if (original.PalHI !== undefined)
                        this.PalHI = original.PalHI;
                    if (original.PalletSize !== undefined)
                        this.PalletSize = original.PalletSize;
                    if (original.PalletType !== undefined)
                        this.PalletType = original.PalletType;
                    if (original.PalTI !== undefined)
                        this.PalTI = original.PalTI;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.SupplierPackSize !== undefined)
                        this.SupplierPackSize = original.SupplierPackSize;
                    if (original.UOM !== undefined)
                        this.UOM = original.UOM;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SelectedSKU_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SelectedSKU_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SelectedSKU_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SelectedSKU_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SelectedSKU_ItemViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.SelectedSKU_ItemViewModel = SelectedSKU_ItemViewModel;
            var SupplierParameters_SupplierParameterViewModel = /** @class */ (function (_super) {
                __extends(SupplierParameters_SupplierParameterViewModel, _super);
                function SupplierParameters_SupplierParameterViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            CoverageDays: true, HasReplied: true, Id: true, SharesExcessStock: true, SupplierCanDeliverWholeForecast: true, SupplierComments: true, OrderForecast: true, Agreement: true
                        };
                    }
                    else {
                        _this._members["CoverageDays"] = true;
                        _this._members["HasReplied"] = true;
                        _this._members["Id"] = true;
                        _this._members["SharesExcessStock"] = true;
                        _this._members["SupplierCanDeliverWholeForecast"] = true;
                        _this._members["SupplierComments"] = true;
                        _this._members["OrderForecast"] = true;
                        _this._members["Agreement"] = true;
                    }
                    return _this;
                }
                SupplierParameters_SupplierParameterViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.OrderForecast != null)
                        instance.OrderForecast = SupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel._lightCast(instance.OrderForecast);
                    if (instance.Agreement != null)
                        instance.Agreement = SupplierParameters_SupplierParameter_Agreement_AgreementViewModel._lightCast(instance.Agreement);
                    return instance;
                };
                SupplierParameters_SupplierParameterViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SupplierParameters_SupplierParameterViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSupplierParameters_SupplierParameterViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SupplierParameters_SupplierParameterViewModel.prototype._hydrateSupplierParameters_SupplierParameterViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.CoverageDays !== undefined)
                        this.CoverageDays = original.CoverageDays;
                    if (original.HasReplied !== undefined)
                        this.HasReplied = original.HasReplied;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.SharesExcessStock !== undefined)
                        this.SharesExcessStock = original.SharesExcessStock;
                    if (original.SupplierCanDeliverWholeForecast !== undefined)
                        this.SupplierCanDeliverWholeForecast = original.SupplierCanDeliverWholeForecast;
                    if (original.SupplierComments !== undefined)
                        this.SupplierComments = original.SupplierComments;
                    if (original.OrderForecast !== undefined)
                        this.OrderForecast = SupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel._initializeFrom(original.OrderForecast, ignoreReadOnlyProperties, context);
                    if (original.Agreement !== undefined)
                        this.Agreement = SupplierParameters_SupplierParameter_Agreement_AgreementViewModel._initializeFrom(original.Agreement, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SupplierParameters_SupplierParameterViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SupplierParameters_SupplierParameterViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SupplierParameters_SupplierParameterViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SupplierParameters_SupplierParameterViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SupplierParameters_SupplierParameterViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.SupplierParameters_SupplierParameterViewModel = SupplierParameters_SupplierParameterViewModel;
            var SupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel = /** @class */ (function (_super) {
                __extends(SupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel, _super);
                function SupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            CreatedBy: true, CreatedOn: true, EndDate: true, Id: true, ImportId: true, StartDate: true, State: true, Status: true
                        };
                    }
                    else {
                        _this._members["CreatedBy"] = true;
                        _this._members["CreatedOn"] = true;
                        _this._members["EndDate"] = true;
                        _this._members["Id"] = true;
                        _this._members["ImportId"] = true;
                        _this._members["StartDate"] = true;
                        _this._members["State"] = true;
                        _this._members["Status"] = true;
                    }
                    return _this;
                }
                SupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.CreatedOn != null)
                        instance.CreatedOn = new Date(instance.CreatedOn);
                    if (instance.EndDate != null)
                        instance.EndDate = new Date(instance.EndDate);
                    if (instance.StartDate != null)
                        instance.StartDate = new Date(instance.StartDate);
                    return instance;
                };
                SupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel.prototype._hydrateSupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.CreatedBy !== undefined)
                        this.CreatedBy = original.CreatedBy;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.CreatedOn))
                        this.CreatedOn = new Date(original.CreatedOn);
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.EndDate))
                        this.EndDate = new Date(original.EndDate);
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.ImportId !== undefined)
                        this.ImportId = original.ImportId;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.StartDate))
                        this.StartDate = new Date(original.StartDate);
                    if (original.State !== undefined)
                        this.State = original.State;
                    if (original.Status !== undefined)
                        this.Status = original.Status;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.SupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel = SupplierParameters_SupplierParameter_OrderForecast_OrderForecastViewModel;
            var SupplierParameters_SupplierParameter_Agreement_AgreementViewModel = /** @class */ (function (_super) {
                __extends(SupplierParameters_SupplierParameter_Agreement_AgreementViewModel, _super);
                function SupplierParameters_SupplierParameter_Agreement_AgreementViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AgreementDocument: true, DateCreated: true, FullTruckLoad: true, Id: true, LeadTime: true, Profile: true, TargetInventoryDays: true, WDDeliveries: true, Supplier: true
                        };
                    }
                    else {
                        _this._members["AgreementDocument"] = true;
                        _this._members["DateCreated"] = true;
                        _this._members["FullTruckLoad"] = true;
                        _this._members["Id"] = true;
                        _this._members["LeadTime"] = true;
                        _this._members["Profile"] = true;
                        _this._members["TargetInventoryDays"] = true;
                        _this._members["WDDeliveries"] = true;
                        _this._members["Supplier"] = true;
                    }
                    return _this;
                }
                SupplierParameters_SupplierParameter_Agreement_AgreementViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DateCreated != null)
                        instance.DateCreated = new Date(instance.DateCreated);
                    if (instance.Supplier != null)
                        instance.Supplier = SupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel._lightCast(instance.Supplier);
                    return instance;
                };
                SupplierParameters_SupplierParameter_Agreement_AgreementViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SupplierParameters_SupplierParameter_Agreement_AgreementViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSupplierParameters_SupplierParameter_Agreement_AgreementViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SupplierParameters_SupplierParameter_Agreement_AgreementViewModel.prototype._hydrateSupplierParameters_SupplierParameter_Agreement_AgreementViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.AgreementDocument !== undefined)
                        this.AgreementDocument = original.AgreementDocument;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DateCreated))
                        this.DateCreated = new Date(original.DateCreated);
                    if (original.FullTruckLoad !== undefined)
                        this.FullTruckLoad = original.FullTruckLoad;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.LeadTime !== undefined)
                        this.LeadTime = original.LeadTime;
                    if (original.Profile !== undefined)
                        this.Profile = original.Profile;
                    if (original.TargetInventoryDays !== undefined)
                        this.TargetInventoryDays = original.TargetInventoryDays;
                    if (original.WDDeliveries !== undefined)
                        this.WDDeliveries = original.WDDeliveries;
                    if (original.Supplier !== undefined)
                        this.Supplier = SupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SupplierParameters_SupplierParameter_Agreement_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SupplierParameters_SupplierParameter_Agreement_AgreementViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SupplierParameters_SupplierParameter_Agreement_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SupplierParameters_SupplierParameter_Agreement_AgreementViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SupplierParameters_SupplierParameter_Agreement_AgreementViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.SupplierParameters_SupplierParameter_Agreement_AgreementViewModel = SupplierParameters_SupplierParameter_Agreement_AgreementViewModel;
            var SupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel = /** @class */ (function (_super) {
                __extends(SupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel, _super);
                function SupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Code: true, Id: true, Name: true
                        };
                    }
                    else {
                        _this._members["Code"] = true;
                        _this._members["Id"] = true;
                        _this._members["Name"] = true;
                    }
                    return _this;
                }
                SupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                SupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel.prototype._hydrateSupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Code !== undefined)
                        this.Code = original.Code;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.SupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel = SupplierParameters_SupplierParameter_Agreement_Agreement_Supplier_SupplierViewModel;
            var ItemsInForecast_ItemViewModel = /** @class */ (function (_super) {
                __extends(ItemsInForecast_ItemViewModel, _super);
                function ItemsInForecast_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            SKU: true, Description: true, UPC: true, AvgDailyDemand: true, CoverageDays: true, PalletSize: true, SupplierPackSize: true, InnerPackSize: true, PalletType: true, PalTI: true, PalHI: true, UOM: true, SupplierCapacities: true, Supplier: true, BusinessUnit: true, Category: true, SubCategory: true, BaseUnit: true, ItemsForecast: true, StocksOnHand: true, DeliverySchedules: true, MinimumQuantity: true, Agreements: true, Notifications: true, SLALeadTimes: true, SLADeliveries: true, PastOrders: true, InventoryItems: true
                        };
                    }
                    else {
                        _this._members["SKU"] = true;
                        _this._members["Description"] = true;
                        _this._members["UPC"] = true;
                        _this._members["AvgDailyDemand"] = true;
                        _this._members["CoverageDays"] = true;
                        _this._members["PalletSize"] = true;
                        _this._members["SupplierPackSize"] = true;
                        _this._members["InnerPackSize"] = true;
                        _this._members["PalletType"] = true;
                        _this._members["PalTI"] = true;
                        _this._members["PalHI"] = true;
                        _this._members["UOM"] = true;
                        _this._members["SupplierCapacities"] = true;
                        _this._members["Supplier"] = true;
                        _this._members["BusinessUnit"] = true;
                        _this._members["Category"] = true;
                        _this._members["SubCategory"] = true;
                        _this._members["BaseUnit"] = true;
                        _this._members["ItemsForecast"] = true;
                        _this._members["StocksOnHand"] = true;
                        _this._members["DeliverySchedules"] = true;
                        _this._members["MinimumQuantity"] = true;
                        _this._members["Agreements"] = true;
                        _this._members["Notifications"] = true;
                        _this._members["SLALeadTimes"] = true;
                        _this._members["SLADeliveries"] = true;
                        _this._members["PastOrders"] = true;
                        _this._members["InventoryItems"] = true;
                    }
                    _this.SupplierCapacities = new Array();
                    _this.ItemsForecast = new Array();
                    _this.StocksOnHand = new Array();
                    _this.DeliverySchedules = new Array();
                    _this.Agreements = new Array();
                    _this.Notifications = new Array();
                    _this.SLALeadTimes = new Array();
                    _this.SLADeliveries = new Array();
                    _this.PastOrders = new Array();
                    _this.InventoryItems = new Array();
                    return _this;
                }
                ItemsInForecast_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.SupplierCapacities != null) {
                        for (var i = 0; i < instance.SupplierCapacities.length; i++) {
                            instance.SupplierCapacities[i] = ItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel._lightCast(instance.SupplierCapacities[i]);
                        }
                    }
                    if (instance.Supplier != null)
                        instance.Supplier = ItemsInForecast_Item_Supplier_SupplierViewModel._lightCast(instance.Supplier);
                    if (instance.BusinessUnit != null)
                        instance.BusinessUnit = ItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel._lightCast(instance.BusinessUnit);
                    if (instance.Category != null)
                        instance.Category = ItemsInForecast_Item_Category_CategoryViewModel._lightCast(instance.Category);
                    if (instance.SubCategory != null)
                        instance.SubCategory = ItemsInForecast_Item_SubCategory_SubCategoryViewModel._lightCast(instance.SubCategory);
                    if (instance.BaseUnit != null)
                        instance.BaseUnit = ItemsInForecast_Item_BaseUnit_BaseUnitViewModel._lightCast(instance.BaseUnit);
                    if (instance.ItemsForecast != null) {
                        for (var i = 0; i < instance.ItemsForecast.length; i++) {
                            instance.ItemsForecast[i] = ItemsInForecast_Item_ItemsForecast_SalesViewModel._lightCast(instance.ItemsForecast[i]);
                        }
                    }
                    if (instance.StocksOnHand != null) {
                        for (var i = 0; i < instance.StocksOnHand.length; i++) {
                            instance.StocksOnHand[i] = ItemsInForecast_Item_StocksOnHand_StockOnHandViewModel._lightCast(instance.StocksOnHand[i]);
                        }
                    }
                    if (instance.DeliverySchedules != null) {
                        for (var i = 0; i < instance.DeliverySchedules.length; i++) {
                            instance.DeliverySchedules[i] = ItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel._lightCast(instance.DeliverySchedules[i]);
                        }
                    }
                    if (instance.MinimumQuantity != null)
                        instance.MinimumQuantity = ItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel._lightCast(instance.MinimumQuantity);
                    if (instance.Agreements != null) {
                        for (var i = 0; i < instance.Agreements.length; i++) {
                            instance.Agreements[i] = ItemsInForecast_Item_Agreements_AgreementViewModel._lightCast(instance.Agreements[i]);
                        }
                    }
                    if (instance.Notifications != null) {
                        for (var i = 0; i < instance.Notifications.length; i++) {
                            instance.Notifications[i] = ItemsInForecast_Item_Notifications_NotificationViewModel._lightCast(instance.Notifications[i]);
                        }
                    }
                    if (instance.SLALeadTimes != null) {
                        for (var i = 0; i < instance.SLALeadTimes.length; i++) {
                            instance.SLALeadTimes[i] = ItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel._lightCast(instance.SLALeadTimes[i]);
                        }
                    }
                    if (instance.SLADeliveries != null) {
                        for (var i = 0; i < instance.SLADeliveries.length; i++) {
                            instance.SLADeliveries[i] = ItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel._lightCast(instance.SLADeliveries[i]);
                        }
                    }
                    if (instance.PastOrders != null) {
                        for (var i = 0; i < instance.PastOrders.length; i++) {
                            instance.PastOrders[i] = ItemsInForecast_Item_PastOrders_PastOrderViewModel._lightCast(instance.PastOrders[i]);
                        }
                    }
                    if (instance.InventoryItems != null) {
                        for (var i = 0; i < instance.InventoryItems.length; i++) {
                            instance.InventoryItems[i] = ItemsInForecast_Item_InventoryItems_InventoryItemViewModel._lightCast(instance.InventoryItems[i]);
                        }
                    }
                    return instance;
                };
                ItemsInForecast_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInForecast_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInForecast_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInForecast_ItemViewModel.prototype._hydrateItemsInForecast_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.UPC !== undefined)
                        this.UPC = original.UPC;
                    if (original.AvgDailyDemand !== undefined)
                        this.AvgDailyDemand = original.AvgDailyDemand;
                    if (original.CoverageDays !== undefined)
                        this.CoverageDays = original.CoverageDays;
                    if (original.PalletSize !== undefined)
                        this.PalletSize = original.PalletSize;
                    if (original.SupplierPackSize !== undefined)
                        this.SupplierPackSize = original.SupplierPackSize;
                    if (original.InnerPackSize !== undefined)
                        this.InnerPackSize = original.InnerPackSize;
                    if (original.PalletType !== undefined)
                        this.PalletType = original.PalletType;
                    if (original.PalTI !== undefined)
                        this.PalTI = original.PalTI;
                    if (original.PalHI !== undefined)
                        this.PalHI = original.PalHI;
                    if (original.UOM !== undefined)
                        this.UOM = original.UOM;
                    if (original.SupplierCapacities != null) {
                        for (var i = 0; i < original.SupplierCapacities.length; i++) {
                            this.SupplierCapacities.push(ItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel._initializeFrom(original.SupplierCapacities[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.Supplier !== undefined)
                        this.Supplier = ItemsInForecast_Item_Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);
                    if (original.BusinessUnit !== undefined)
                        this.BusinessUnit = ItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel._initializeFrom(original.BusinessUnit, ignoreReadOnlyProperties, context);
                    if (original.Category !== undefined)
                        this.Category = ItemsInForecast_Item_Category_CategoryViewModel._initializeFrom(original.Category, ignoreReadOnlyProperties, context);
                    if (original.SubCategory !== undefined)
                        this.SubCategory = ItemsInForecast_Item_SubCategory_SubCategoryViewModel._initializeFrom(original.SubCategory, ignoreReadOnlyProperties, context);
                    if (original.BaseUnit !== undefined)
                        this.BaseUnit = ItemsInForecast_Item_BaseUnit_BaseUnitViewModel._initializeFrom(original.BaseUnit, ignoreReadOnlyProperties, context);
                    if (original.ItemsForecast != null) {
                        for (var i = 0; i < original.ItemsForecast.length; i++) {
                            this.ItemsForecast.push(ItemsInForecast_Item_ItemsForecast_SalesViewModel._initializeFrom(original.ItemsForecast[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.StocksOnHand != null) {
                        for (var i = 0; i < original.StocksOnHand.length; i++) {
                            this.StocksOnHand.push(ItemsInForecast_Item_StocksOnHand_StockOnHandViewModel._initializeFrom(original.StocksOnHand[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.DeliverySchedules != null) {
                        for (var i = 0; i < original.DeliverySchedules.length; i++) {
                            this.DeliverySchedules.push(ItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel._initializeFrom(original.DeliverySchedules[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.MinimumQuantity !== undefined)
                        this.MinimumQuantity = ItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel._initializeFrom(original.MinimumQuantity, ignoreReadOnlyProperties, context);
                    if (original.Agreements != null) {
                        for (var i = 0; i < original.Agreements.length; i++) {
                            this.Agreements.push(ItemsInForecast_Item_Agreements_AgreementViewModel._initializeFrom(original.Agreements[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.Notifications != null) {
                        for (var i = 0; i < original.Notifications.length; i++) {
                            this.Notifications.push(ItemsInForecast_Item_Notifications_NotificationViewModel._initializeFrom(original.Notifications[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.SLALeadTimes != null) {
                        for (var i = 0; i < original.SLALeadTimes.length; i++) {
                            this.SLALeadTimes.push(ItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel._initializeFrom(original.SLALeadTimes[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.SLADeliveries != null) {
                        for (var i = 0; i < original.SLADeliveries.length; i++) {
                            this.SLADeliveries.push(ItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel._initializeFrom(original.SLADeliveries[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.PastOrders != null) {
                        for (var i = 0; i < original.PastOrders.length; i++) {
                            this.PastOrders.push(ItemsInForecast_Item_PastOrders_PastOrderViewModel._initializeFrom(original.PastOrders[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.InventoryItems != null) {
                        for (var i = 0; i < original.InventoryItems.length; i++) {
                            this.InventoryItems.push(ItemsInForecast_Item_InventoryItems_InventoryItemViewModel._initializeFrom(original.InventoryItems[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInForecast_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInForecast_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInForecast_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInForecast_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInForecast_ItemViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInForecast_ItemViewModel = ItemsInForecast_ItemViewModel;
            var ItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel = /** @class */ (function (_super) {
                __extends(ItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel, _super);
                function ItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, DateOfStockUpdate: true, DailyProduction: true, Stock: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["DateOfStockUpdate"] = true;
                        _this._members["DailyProduction"] = true;
                        _this._members["Stock"] = true;
                    }
                    return _this;
                }
                ItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DateOfStockUpdate != null)
                        instance.DateOfStockUpdate = new Date(instance.DateOfStockUpdate);
                    return instance;
                };
                ItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel.prototype._hydrateItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DateOfStockUpdate))
                        this.DateOfStockUpdate = new Date(original.DateOfStockUpdate);
                    if (original.DailyProduction !== undefined)
                        this.DailyProduction = original.DailyProduction;
                    if (original.Stock !== undefined)
                        this.Stock = original.Stock;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel = ItemsInForecast_Item_SupplierCapacities_SupplierCapacityViewModel;
            var ItemsInForecast_Item_Supplier_SupplierViewModel = /** @class */ (function (_super) {
                __extends(ItemsInForecast_Item_Supplier_SupplierViewModel, _super);
                function ItemsInForecast_Item_Supplier_SupplierViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, Code: true, Name: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["Code"] = true;
                        _this._members["Name"] = true;
                    }
                    return _this;
                }
                ItemsInForecast_Item_Supplier_SupplierViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                ItemsInForecast_Item_Supplier_SupplierViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInForecast_Item_Supplier_SupplierViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInForecast_Item_Supplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInForecast_Item_Supplier_SupplierViewModel.prototype._hydrateItemsInForecast_Item_Supplier_SupplierViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Code !== undefined)
                        this.Code = original.Code;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInForecast_Item_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInForecast_Item_Supplier_SupplierViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInForecast_Item_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInForecast_Item_Supplier_SupplierViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInForecast_Item_Supplier_SupplierViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInForecast_Item_Supplier_SupplierViewModel = ItemsInForecast_Item_Supplier_SupplierViewModel;
            var ItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel = /** @class */ (function (_super) {
                __extends(ItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel, _super);
                function ItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, Number: true, Description: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["Number"] = true;
                        _this._members["Description"] = true;
                    }
                    return _this;
                }
                ItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                ItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel.prototype._hydrateItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Number !== undefined)
                        this.Number = original.Number;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel = ItemsInForecast_Item_BusinessUnit_BusinessUnitViewModel;
            var ItemsInForecast_Item_Category_CategoryViewModel = /** @class */ (function (_super) {
                __extends(ItemsInForecast_Item_Category_CategoryViewModel, _super);
                function ItemsInForecast_Item_Category_CategoryViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, Number: true, Description: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["Number"] = true;
                        _this._members["Description"] = true;
                    }
                    return _this;
                }
                ItemsInForecast_Item_Category_CategoryViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                ItemsInForecast_Item_Category_CategoryViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInForecast_Item_Category_CategoryViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInForecast_Item_Category_CategoryViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInForecast_Item_Category_CategoryViewModel.prototype._hydrateItemsInForecast_Item_Category_CategoryViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Number !== undefined)
                        this.Number = original.Number;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInForecast_Item_Category_CategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInForecast_Item_Category_CategoryViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInForecast_Item_Category_CategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInForecast_Item_Category_CategoryViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInForecast_Item_Category_CategoryViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInForecast_Item_Category_CategoryViewModel = ItemsInForecast_Item_Category_CategoryViewModel;
            var ItemsInForecast_Item_SubCategory_SubCategoryViewModel = /** @class */ (function (_super) {
                __extends(ItemsInForecast_Item_SubCategory_SubCategoryViewModel, _super);
                function ItemsInForecast_Item_SubCategory_SubCategoryViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, Number: true, Description: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["Number"] = true;
                        _this._members["Description"] = true;
                    }
                    return _this;
                }
                ItemsInForecast_Item_SubCategory_SubCategoryViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                ItemsInForecast_Item_SubCategory_SubCategoryViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInForecast_Item_SubCategory_SubCategoryViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInForecast_Item_SubCategory_SubCategoryViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInForecast_Item_SubCategory_SubCategoryViewModel.prototype._hydrateItemsInForecast_Item_SubCategory_SubCategoryViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Number !== undefined)
                        this.Number = original.Number;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInForecast_Item_SubCategory_SubCategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInForecast_Item_SubCategory_SubCategoryViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInForecast_Item_SubCategory_SubCategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInForecast_Item_SubCategory_SubCategoryViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInForecast_Item_SubCategory_SubCategoryViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInForecast_Item_SubCategory_SubCategoryViewModel = ItemsInForecast_Item_SubCategory_SubCategoryViewModel;
            var ItemsInForecast_Item_BaseUnit_BaseUnitViewModel = /** @class */ (function (_super) {
                __extends(ItemsInForecast_Item_BaseUnit_BaseUnitViewModel, _super);
                function ItemsInForecast_Item_BaseUnit_BaseUnitViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, Number: true, Description: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["Number"] = true;
                        _this._members["Description"] = true;
                    }
                    return _this;
                }
                ItemsInForecast_Item_BaseUnit_BaseUnitViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                ItemsInForecast_Item_BaseUnit_BaseUnitViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInForecast_Item_BaseUnit_BaseUnitViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInForecast_Item_BaseUnit_BaseUnitViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInForecast_Item_BaseUnit_BaseUnitViewModel.prototype._hydrateItemsInForecast_Item_BaseUnit_BaseUnitViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Number !== undefined)
                        this.Number = original.Number;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInForecast_Item_BaseUnit_BaseUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInForecast_Item_BaseUnit_BaseUnitViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInForecast_Item_BaseUnit_BaseUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInForecast_Item_BaseUnit_BaseUnitViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInForecast_Item_BaseUnit_BaseUnitViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInForecast_Item_BaseUnit_BaseUnitViewModel = ItemsInForecast_Item_BaseUnit_BaseUnitViewModel;
            var ItemsInForecast_Item_ItemsForecast_SalesViewModel = /** @class */ (function (_super) {
                __extends(ItemsInForecast_Item_ItemsForecast_SalesViewModel, _super);
                function ItemsInForecast_Item_ItemsForecast_SalesViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, ForecastDate: true, Units: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["ForecastDate"] = true;
                        _this._members["Units"] = true;
                    }
                    return _this;
                }
                ItemsInForecast_Item_ItemsForecast_SalesViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.ForecastDate != null)
                        instance.ForecastDate = new Date(instance.ForecastDate);
                    return instance;
                };
                ItemsInForecast_Item_ItemsForecast_SalesViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInForecast_Item_ItemsForecast_SalesViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInForecast_Item_ItemsForecast_SalesViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInForecast_Item_ItemsForecast_SalesViewModel.prototype._hydrateItemsInForecast_Item_ItemsForecast_SalesViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.ForecastDate))
                        this.ForecastDate = new Date(original.ForecastDate);
                    if (original.Units !== undefined)
                        this.Units = original.Units;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInForecast_Item_ItemsForecast_SalesViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInForecast_Item_ItemsForecast_SalesViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInForecast_Item_ItemsForecast_SalesViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInForecast_Item_ItemsForecast_SalesViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInForecast_Item_ItemsForecast_SalesViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInForecast_Item_ItemsForecast_SalesViewModel = ItemsInForecast_Item_ItemsForecast_SalesViewModel;
            var ItemsInForecast_Item_StocksOnHand_StockOnHandViewModel = /** @class */ (function (_super) {
                __extends(ItemsInForecast_Item_StocksOnHand_StockOnHandViewModel, _super);
                function ItemsInForecast_Item_StocksOnHand_StockOnHandViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, Units: true, CurrentInventoryDays: true, StockOnHandDate: true, LeadTime: true, TargetInventoryDays: true, FullTrackLoad: true, WDDays: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["Units"] = true;
                        _this._members["CurrentInventoryDays"] = true;
                        _this._members["StockOnHandDate"] = true;
                        _this._members["LeadTime"] = true;
                        _this._members["TargetInventoryDays"] = true;
                        _this._members["FullTrackLoad"] = true;
                        _this._members["WDDays"] = true;
                    }
                    return _this;
                }
                ItemsInForecast_Item_StocksOnHand_StockOnHandViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.StockOnHandDate != null)
                        instance.StockOnHandDate = new Date(instance.StockOnHandDate);
                    return instance;
                };
                ItemsInForecast_Item_StocksOnHand_StockOnHandViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInForecast_Item_StocksOnHand_StockOnHandViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInForecast_Item_StocksOnHand_StockOnHandViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInForecast_Item_StocksOnHand_StockOnHandViewModel.prototype._hydrateItemsInForecast_Item_StocksOnHand_StockOnHandViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Units !== undefined)
                        this.Units = original.Units;
                    if (original.CurrentInventoryDays !== undefined)
                        this.CurrentInventoryDays = original.CurrentInventoryDays;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.StockOnHandDate))
                        this.StockOnHandDate = new Date(original.StockOnHandDate);
                    if (original.LeadTime !== undefined)
                        this.LeadTime = original.LeadTime;
                    if (original.TargetInventoryDays !== undefined)
                        this.TargetInventoryDays = original.TargetInventoryDays;
                    if (original.FullTrackLoad !== undefined)
                        this.FullTrackLoad = original.FullTrackLoad;
                    if (original.WDDays !== undefined)
                        this.WDDays = original.WDDays;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInForecast_Item_StocksOnHand_StockOnHandViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInForecast_Item_StocksOnHand_StockOnHandViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInForecast_Item_StocksOnHand_StockOnHandViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInForecast_Item_StocksOnHand_StockOnHandViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInForecast_Item_StocksOnHand_StockOnHandViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInForecast_Item_StocksOnHand_StockOnHandViewModel = ItemsInForecast_Item_StocksOnHand_StockOnHandViewModel;
            var ItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel = /** @class */ (function (_super) {
                __extends(ItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel, _super);
                function ItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, LeadTime: true, Weekday: true, NameOfDay: true, DBWeekday: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["LeadTime"] = true;
                        _this._members["Weekday"] = true;
                        _this._members["NameOfDay"] = true;
                        _this._members["DBWeekday"] = true;
                    }
                    return _this;
                }
                ItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                ItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel.prototype._hydrateItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.LeadTime !== undefined)
                        this.LeadTime = original.LeadTime;
                    if (original.Weekday !== undefined)
                        this.Weekday = original.Weekday;
                    if (original.NameOfDay !== undefined)
                        this.NameOfDay = original.NameOfDay;
                    if (original.DBWeekday !== undefined)
                        this.DBWeekday = original.DBWeekday;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel = ItemsInForecast_Item_DeliverySchedules_DeliveryScheduleViewModel;
            var ItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel = /** @class */ (function (_super) {
                __extends(ItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel, _super);
                function ItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, Country: true, Quantity: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["Country"] = true;
                        _this._members["Quantity"] = true;
                    }
                    return _this;
                }
                ItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                ItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel.prototype._hydrateItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Country !== undefined)
                        this.Country = original.Country;
                    if (original.Quantity !== undefined)
                        this.Quantity = original.Quantity;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel = ItemsInForecast_Item_MinimumQuantity_MinimumQuantityViewModel;
            var ItemsInForecast_Item_Agreements_AgreementViewModel = /** @class */ (function (_super) {
                __extends(ItemsInForecast_Item_Agreements_AgreementViewModel, _super);
                function ItemsInForecast_Item_Agreements_AgreementViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, FullTruckLoad: true, AgreementDocument: true, LeadTime: true, DateCreated: true, WDDeliveries: true, TargetInventoryDays: true, Profile: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["FullTruckLoad"] = true;
                        _this._members["AgreementDocument"] = true;
                        _this._members["LeadTime"] = true;
                        _this._members["DateCreated"] = true;
                        _this._members["WDDeliveries"] = true;
                        _this._members["TargetInventoryDays"] = true;
                        _this._members["Profile"] = true;
                    }
                    return _this;
                }
                ItemsInForecast_Item_Agreements_AgreementViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DateCreated != null)
                        instance.DateCreated = new Date(instance.DateCreated);
                    return instance;
                };
                ItemsInForecast_Item_Agreements_AgreementViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInForecast_Item_Agreements_AgreementViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInForecast_Item_Agreements_AgreementViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInForecast_Item_Agreements_AgreementViewModel.prototype._hydrateItemsInForecast_Item_Agreements_AgreementViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.FullTruckLoad !== undefined)
                        this.FullTruckLoad = original.FullTruckLoad;
                    if (original.AgreementDocument !== undefined)
                        this.AgreementDocument = original.AgreementDocument;
                    if (original.LeadTime !== undefined)
                        this.LeadTime = original.LeadTime;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DateCreated))
                        this.DateCreated = new Date(original.DateCreated);
                    if (original.WDDeliveries !== undefined)
                        this.WDDeliveries = original.WDDeliveries;
                    if (original.TargetInventoryDays !== undefined)
                        this.TargetInventoryDays = original.TargetInventoryDays;
                    if (original.Profile !== undefined)
                        this.Profile = original.Profile;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInForecast_Item_Agreements_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInForecast_Item_Agreements_AgreementViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInForecast_Item_Agreements_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInForecast_Item_Agreements_AgreementViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInForecast_Item_Agreements_AgreementViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInForecast_Item_Agreements_AgreementViewModel = ItemsInForecast_Item_Agreements_AgreementViewModel;
            var ItemsInForecast_Item_Notifications_NotificationViewModel = /** @class */ (function (_super) {
                __extends(ItemsInForecast_Item_Notifications_NotificationViewModel, _super);
                function ItemsInForecast_Item_Notifications_NotificationViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, Message: true, TotalSupplierStock: true, OrderForecastQuantity: true, Diff: true, SalesForecastDate: true, CreatedBy: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["Message"] = true;
                        _this._members["TotalSupplierStock"] = true;
                        _this._members["OrderForecastQuantity"] = true;
                        _this._members["Diff"] = true;
                        _this._members["SalesForecastDate"] = true;
                        _this._members["CreatedBy"] = true;
                    }
                    return _this;
                }
                ItemsInForecast_Item_Notifications_NotificationViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.SalesForecastDate != null)
                        instance.SalesForecastDate = new Date(instance.SalesForecastDate);
                    return instance;
                };
                ItemsInForecast_Item_Notifications_NotificationViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInForecast_Item_Notifications_NotificationViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInForecast_Item_Notifications_NotificationViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInForecast_Item_Notifications_NotificationViewModel.prototype._hydrateItemsInForecast_Item_Notifications_NotificationViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Message !== undefined)
                        this.Message = original.Message;
                    if (original.TotalSupplierStock !== undefined)
                        this.TotalSupplierStock = original.TotalSupplierStock;
                    if (original.OrderForecastQuantity !== undefined)
                        this.OrderForecastQuantity = original.OrderForecastQuantity;
                    if (original.Diff !== undefined)
                        this.Diff = original.Diff;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.SalesForecastDate))
                        this.SalesForecastDate = new Date(original.SalesForecastDate);
                    if (original.CreatedBy !== undefined)
                        this.CreatedBy = original.CreatedBy;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInForecast_Item_Notifications_NotificationViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInForecast_Item_Notifications_NotificationViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInForecast_Item_Notifications_NotificationViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInForecast_Item_Notifications_NotificationViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInForecast_Item_Notifications_NotificationViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInForecast_Item_Notifications_NotificationViewModel = ItemsInForecast_Item_Notifications_NotificationViewModel;
            var ItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel = /** @class */ (function (_super) {
                __extends(ItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel, _super);
                function ItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, AgreedLeadTime: true, RealLeadTime: true, Percentage: true, ItemDescription: true, DateFormatted: true, Threshold: true, SLALeadDate: true, Month: true, MonthlyDelayed: true, MontlhyOrders: true, MonthlyPercentage: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["AgreedLeadTime"] = true;
                        _this._members["RealLeadTime"] = true;
                        _this._members["Percentage"] = true;
                        _this._members["ItemDescription"] = true;
                        _this._members["DateFormatted"] = true;
                        _this._members["Threshold"] = true;
                        _this._members["SLALeadDate"] = true;
                        _this._members["Month"] = true;
                        _this._members["MonthlyDelayed"] = true;
                        _this._members["MontlhyOrders"] = true;
                        _this._members["MonthlyPercentage"] = true;
                    }
                    return _this;
                }
                ItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.SLALeadDate != null)
                        instance.SLALeadDate = new Date(instance.SLALeadDate);
                    return instance;
                };
                ItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel.prototype._hydrateItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.AgreedLeadTime !== undefined)
                        this.AgreedLeadTime = original.AgreedLeadTime;
                    if (original.RealLeadTime !== undefined)
                        this.RealLeadTime = original.RealLeadTime;
                    if (original.Percentage !== undefined)
                        this.Percentage = original.Percentage;
                    if (original.ItemDescription !== undefined)
                        this.ItemDescription = original.ItemDescription;
                    if (original.DateFormatted !== undefined)
                        this.DateFormatted = original.DateFormatted;
                    if (original.Threshold !== undefined)
                        this.Threshold = original.Threshold;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.SLALeadDate))
                        this.SLALeadDate = new Date(original.SLALeadDate);
                    if (original.Month !== undefined)
                        this.Month = original.Month;
                    if (original.MonthlyDelayed !== undefined)
                        this.MonthlyDelayed = original.MonthlyDelayed;
                    if (original.MontlhyOrders !== undefined)
                        this.MontlhyOrders = original.MontlhyOrders;
                    if (original.MonthlyPercentage !== undefined)
                        this.MonthlyPercentage = original.MonthlyPercentage;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel = ItemsInForecast_Item_SLALeadTimes_SLALeadTimeViewModel;
            var ItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel = /** @class */ (function (_super) {
                __extends(ItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel, _super);
                function ItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, OrderedQuantities: true, DeliveredQuantities: true, Percentage: true, ItemDescription: true, Threshold: true, SLADate: true, DateFormatted: true, Month: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["OrderedQuantities"] = true;
                        _this._members["DeliveredQuantities"] = true;
                        _this._members["Percentage"] = true;
                        _this._members["ItemDescription"] = true;
                        _this._members["Threshold"] = true;
                        _this._members["SLADate"] = true;
                        _this._members["DateFormatted"] = true;
                        _this._members["Month"] = true;
                    }
                    return _this;
                }
                ItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.SLADate != null)
                        instance.SLADate = new Date(instance.SLADate);
                    return instance;
                };
                ItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel.prototype._hydrateItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.OrderedQuantities !== undefined)
                        this.OrderedQuantities = original.OrderedQuantities;
                    if (original.DeliveredQuantities !== undefined)
                        this.DeliveredQuantities = original.DeliveredQuantities;
                    if (original.Percentage !== undefined)
                        this.Percentage = original.Percentage;
                    if (original.ItemDescription !== undefined)
                        this.ItemDescription = original.ItemDescription;
                    if (original.Threshold !== undefined)
                        this.Threshold = original.Threshold;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.SLADate))
                        this.SLADate = new Date(original.SLADate);
                    if (original.DateFormatted !== undefined)
                        this.DateFormatted = original.DateFormatted;
                    if (original.Month !== undefined)
                        this.Month = original.Month;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel = ItemsInForecast_Item_SLADeliveries_SLADeliveryViewModel;
            var ItemsInForecast_Item_PastOrders_PastOrderViewModel = /** @class */ (function (_super) {
                __extends(ItemsInForecast_Item_PastOrders_PastOrderViewModel, _super);
                function ItemsInForecast_Item_PastOrders_PastOrderViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, OrderNumber: true, WrittenDate: true, NotBeforeDate: true, QuantityOrdered: true, ReceiveDate: true, QuantityReceived: true, Caller: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["OrderNumber"] = true;
                        _this._members["WrittenDate"] = true;
                        _this._members["NotBeforeDate"] = true;
                        _this._members["QuantityOrdered"] = true;
                        _this._members["ReceiveDate"] = true;
                        _this._members["QuantityReceived"] = true;
                        _this._members["Caller"] = true;
                    }
                    return _this;
                }
                ItemsInForecast_Item_PastOrders_PastOrderViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.WrittenDate != null)
                        instance.WrittenDate = new Date(instance.WrittenDate);
                    if (instance.NotBeforeDate != null)
                        instance.NotBeforeDate = new Date(instance.NotBeforeDate);
                    if (instance.ReceiveDate != null)
                        instance.ReceiveDate = new Date(instance.ReceiveDate);
                    return instance;
                };
                ItemsInForecast_Item_PastOrders_PastOrderViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInForecast_Item_PastOrders_PastOrderViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInForecast_Item_PastOrders_PastOrderViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInForecast_Item_PastOrders_PastOrderViewModel.prototype._hydrateItemsInForecast_Item_PastOrders_PastOrderViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.OrderNumber !== undefined)
                        this.OrderNumber = original.OrderNumber;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.WrittenDate))
                        this.WrittenDate = new Date(original.WrittenDate);
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.NotBeforeDate))
                        this.NotBeforeDate = new Date(original.NotBeforeDate);
                    if (original.QuantityOrdered !== undefined)
                        this.QuantityOrdered = original.QuantityOrdered;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.ReceiveDate))
                        this.ReceiveDate = new Date(original.ReceiveDate);
                    if (original.QuantityReceived !== undefined)
                        this.QuantityReceived = original.QuantityReceived;
                    if (original.Caller !== undefined)
                        this.Caller = original.Caller;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInForecast_Item_PastOrders_PastOrderViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInForecast_Item_PastOrders_PastOrderViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInForecast_Item_PastOrders_PastOrderViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInForecast_Item_PastOrders_PastOrderViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInForecast_Item_PastOrders_PastOrderViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInForecast_Item_PastOrders_PastOrderViewModel = ItemsInForecast_Item_PastOrders_PastOrderViewModel;
            var ItemsInForecast_Item_InventoryItems_InventoryItemViewModel = /** @class */ (function (_super) {
                __extends(ItemsInForecast_Item_InventoryItems_InventoryItemViewModel, _super);
                function ItemsInForecast_Item_InventoryItems_InventoryItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, CoverageDays: true, SafetyStock: true, Status: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["CoverageDays"] = true;
                        _this._members["SafetyStock"] = true;
                        _this._members["Status"] = true;
                    }
                    return _this;
                }
                ItemsInForecast_Item_InventoryItems_InventoryItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                ItemsInForecast_Item_InventoryItems_InventoryItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInForecast_Item_InventoryItems_InventoryItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInForecast_Item_InventoryItems_InventoryItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInForecast_Item_InventoryItems_InventoryItemViewModel.prototype._hydrateItemsInForecast_Item_InventoryItems_InventoryItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.CoverageDays !== undefined)
                        this.CoverageDays = original.CoverageDays;
                    if (original.SafetyStock !== undefined)
                        this.SafetyStock = original.SafetyStock;
                    if (original.Status !== undefined)
                        this.Status = original.Status;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInForecast_Item_InventoryItems_InventoryItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInForecast_Item_InventoryItems_InventoryItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInForecast_Item_InventoryItems_InventoryItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInForecast_Item_InventoryItems_InventoryItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInForecast_Item_InventoryItems_InventoryItemViewModel;
            }(BaseClass.ViewModel));
            StockManagerView.ItemsInForecast_Item_InventoryItems_InventoryItemViewModel = ItemsInForecast_Item_InventoryItems_InventoryItemViewModel;
        })(StockManagerView = ViewModels.StockManagerView || (ViewModels.StockManagerView = {}));
    })(ViewModels = DSS1_RetailerDriverStockOptimisation.ViewModels || (DSS1_RetailerDriverStockOptimisation.ViewModels = {}));
})(DSS1_RetailerDriverStockOptimisation || (DSS1_RetailerDriverStockOptimisation = {}));
