var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
var DSS1_RetailerDriverStockOptimisation;
(function (DSS1_RetailerDriverStockOptimisation) {
    var ViewModels;
    (function (ViewModels) {
        var KPIDashboard;
        (function (KPIDashboard) {
            var KPIDashboardViewModel = /** @class */ (function (_super) {
                __extends(KPIDashboardViewModel, _super);
                function KPIDashboardViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            SuppliersInSelectedForecast: true, SelectedForecast: true, ItemsInSelectedForecast: true, ToDate: true, FromDate: true, SelectedSKUs: true, SelectedSKU: true, Supplier: true, FlowType: true
                        };
                    }
                    else {
                        _this._members["SuppliersInSelectedForecast"] = true;
                        _this._members["SelectedForecast"] = true;
                        _this._members["ItemsInSelectedForecast"] = true;
                        _this._members["ToDate"] = true;
                        _this._members["FromDate"] = true;
                        _this._members["SelectedSKUs"] = true;
                        _this._members["SelectedSKU"] = true;
                        _this._members["Supplier"] = true;
                        _this._members["FlowType"] = true;
                    }
                    _this.SuppliersInSelectedForecast = new Array();
                    _this.ItemsInSelectedForecast = new Array();
                    _this.SelectedSKUs = new Array();
                    return _this;
                }
                KPIDashboardViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.SuppliersInSelectedForecast != null) {
                        for (var i = 0; i < instance.SuppliersInSelectedForecast.length; i++) {
                            instance.SuppliersInSelectedForecast[i] = SuppliersInSelectedForecast_AgreementViewModel._lightCast(instance.SuppliersInSelectedForecast[i]);
                        }
                    }
                    if (instance.SelectedForecast != null)
                        instance.SelectedForecast = SelectedForecast_OrderForecastViewModel._lightCast(instance.SelectedForecast);
                    if (instance.ItemsInSelectedForecast != null) {
                        for (var i = 0; i < instance.ItemsInSelectedForecast.length; i++) {
                            instance.ItemsInSelectedForecast[i] = ItemsInSelectedForecast_ItemViewModel._lightCast(instance.ItemsInSelectedForecast[i]);
                        }
                    }
                    if (instance.ToDate != null)
                        instance.ToDate = new Date(instance.ToDate);
                    if (instance.FromDate != null)
                        instance.FromDate = new Date(instance.FromDate);
                    if (instance.SelectedSKUs != null) {
                        for (var i = 0; i < instance.SelectedSKUs.length; i++) {
                            instance.SelectedSKUs[i] = SelectedSKUs_ItemViewModel._lightCast(instance.SelectedSKUs[i]);
                        }
                    }
                    if (instance.SelectedSKU != null)
                        instance.SelectedSKU = SelectedSKU_ItemViewModel._lightCast(instance.SelectedSKU);
                    if (instance.Supplier != null)
                        instance.Supplier = Supplier_SupplierViewModel._lightCast(instance.Supplier);
                    return instance;
                };
                KPIDashboardViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new KPIDashboardViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateKPIDashboardViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                KPIDashboardViewModel.prototype._hydrateKPIDashboardViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.SuppliersInSelectedForecast != null) {
                        for (var i = 0; i < original.SuppliersInSelectedForecast.length; i++) {
                            this.SuppliersInSelectedForecast.push(SuppliersInSelectedForecast_AgreementViewModel._initializeFrom(original.SuppliersInSelectedForecast[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.SelectedForecast !== undefined)
                        this.SelectedForecast = SelectedForecast_OrderForecastViewModel._initializeFrom(original.SelectedForecast, ignoreReadOnlyProperties, context);
                    if (original.ItemsInSelectedForecast != null) {
                        for (var i = 0; i < original.ItemsInSelectedForecast.length; i++) {
                            this.ItemsInSelectedForecast.push(ItemsInSelectedForecast_ItemViewModel._initializeFrom(original.ItemsInSelectedForecast[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.ToDate))
                        this.ToDate = new Date(original.ToDate);
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.FromDate))
                        this.FromDate = new Date(original.FromDate);
                    if (original.SelectedSKUs != null) {
                        for (var i = 0; i < original.SelectedSKUs.length; i++) {
                            this.SelectedSKUs.push(SelectedSKUs_ItemViewModel._initializeFrom(original.SelectedSKUs[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.SelectedSKU !== undefined)
                        this.SelectedSKU = SelectedSKU_ItemViewModel._initializeFrom(original.SelectedSKU, ignoreReadOnlyProperties, context);
                    if (original.Supplier !== undefined)
                        this.Supplier = Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);
                    if (original.FlowType !== undefined)
                        this.FlowType = original.FlowType;
                    if (original.ddlSKUs__InitialSelection !== undefined)
                        this.ddlSKUs__InitialSelection = original.ddlSKUs__InitialSelection;
                    this.listSuppliersSelectedItemKeys = original.listSuppliersSelectedItemKeys;
                    this.listWarehousesSelectedItemKeys = original.listWarehousesSelectedItemKeys;
                    this.listBusinessUnitsSelectedItemKeys = original.listBusinessUnitsSelectedItemKeys;
                    this.listCategoriesSelectedItemKeys = original.listCategoriesSelectedItemKeys;
                    this.listSubcategoriesSelectedItemKeys = original.listSubcategoriesSelectedItemKeys;
                    this.ddlSubcategorySelectedItemKeys = original.ddlSubcategorySelectedItemKeys;
                    this.listBaseUnitsSelectedItemKeys = original.listBaseUnitsSelectedItemKeys;
                    this.listSKUsSelectedItemKeys = original.listSKUsSelectedItemKeys;
                    this.ddlSKUsSelectedItemKeys = original.ddlSKUsSelectedItemKeys;
                    this.chartStockLevelsInvDaysSelectedItemKeys = original.chartStockLevelsInvDaysSelectedItemKeys;
                    this.chartStockLevelsUnitsSelectedItemKeys = original.chartStockLevelsUnitsSelectedItemKeys;
                    this.chartSLALeadTimeSelectedItemKeys = original.chartSLALeadTimeSelectedItemKeys;
                    this.chartSLADeliverySelectedItemKeys = original.chartSLADeliverySelectedItemKeys;
                    this.chartWasteSelectedItemKeys = original.chartWasteSelectedItemKeys;
                    this.chartOrderForecastSelectedItemKeys = original.chartOrderForecastSelectedItemKeys;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = KPIDashboardViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        KPIDashboardViewModel._deleteDropDownInitialValues(reduced);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                KPIDashboardViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = KPIDashboardViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    KPIDashboardViewModel._deleteDropDownInitialValues(reduced);
                    return reduced;
                };
                KPIDashboardViewModel._deleteDropDownInitialValues = function (reduced) {
                    if (reduced == null)
                        return;
                    delete reduced.ddlSKUs__InitialSelection;
                    DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
                };
                KPIDashboardViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return KPIDashboardViewModel;
            }(DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel));
            KPIDashboard.KPIDashboardViewModel = KPIDashboardViewModel;
            var SuppliersInSelectedForecast_AgreementViewModel = /** @class */ (function (_super) {
                __extends(SuppliersInSelectedForecast_AgreementViewModel, _super);
                function SuppliersInSelectedForecast_AgreementViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, TargetInventoryDays: true, Supplier: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["TargetInventoryDays"] = true;
                        _this._members["Supplier"] = true;
                    }
                    return _this;
                }
                SuppliersInSelectedForecast_AgreementViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Supplier != null)
                        instance.Supplier = SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel._lightCast(instance.Supplier);
                    return instance;
                };
                SuppliersInSelectedForecast_AgreementViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SuppliersInSelectedForecast_AgreementViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSuppliersInSelectedForecast_AgreementViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SuppliersInSelectedForecast_AgreementViewModel.prototype._hydrateSuppliersInSelectedForecast_AgreementViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.TargetInventoryDays !== undefined)
                        this.TargetInventoryDays = original.TargetInventoryDays;
                    if (original.Supplier !== undefined)
                        this.Supplier = SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SuppliersInSelectedForecast_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SuppliersInSelectedForecast_AgreementViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SuppliersInSelectedForecast_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SuppliersInSelectedForecast_AgreementViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SuppliersInSelectedForecast_AgreementViewModel;
            }(BaseClass.ViewModel));
            KPIDashboard.SuppliersInSelectedForecast_AgreementViewModel = SuppliersInSelectedForecast_AgreementViewModel;
            var SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel = /** @class */ (function (_super) {
                __extends(SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel, _super);
                function SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, Name: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["Name"] = true;
                    }
                    return _this;
                }
                SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel.prototype._hydrateSuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel;
            }(BaseClass.ViewModel));
            KPIDashboard.SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel = SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel;
            var SelectedForecast_OrderForecastViewModel = /** @class */ (function (_super) {
                __extends(SelectedForecast_OrderForecastViewModel, _super);
                function SelectedForecast_OrderForecastViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            CreatedBy: true, CreatedOn: true, EndDate: true, Id: true, StartDate: true, State: true, Status: true
                        };
                    }
                    else {
                        _this._members["CreatedBy"] = true;
                        _this._members["CreatedOn"] = true;
                        _this._members["EndDate"] = true;
                        _this._members["Id"] = true;
                        _this._members["StartDate"] = true;
                        _this._members["State"] = true;
                        _this._members["Status"] = true;
                    }
                    return _this;
                }
                SelectedForecast_OrderForecastViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.CreatedOn != null)
                        instance.CreatedOn = new Date(instance.CreatedOn);
                    if (instance.EndDate != null)
                        instance.EndDate = new Date(instance.EndDate);
                    if (instance.StartDate != null)
                        instance.StartDate = new Date(instance.StartDate);
                    return instance;
                };
                SelectedForecast_OrderForecastViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SelectedForecast_OrderForecastViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSelectedForecast_OrderForecastViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SelectedForecast_OrderForecastViewModel.prototype._hydrateSelectedForecast_OrderForecastViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.CreatedBy !== undefined)
                        this.CreatedBy = original.CreatedBy;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.CreatedOn))
                        this.CreatedOn = new Date(original.CreatedOn);
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.EndDate))
                        this.EndDate = new Date(original.EndDate);
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.StartDate))
                        this.StartDate = new Date(original.StartDate);
                    if (original.State !== undefined)
                        this.State = original.State;
                    if (original.Status !== undefined)
                        this.Status = original.Status;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SelectedForecast_OrderForecastViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SelectedForecast_OrderForecastViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SelectedForecast_OrderForecastViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SelectedForecast_OrderForecastViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SelectedForecast_OrderForecastViewModel;
            }(BaseClass.ViewModel));
            KPIDashboard.SelectedForecast_OrderForecastViewModel = SelectedForecast_OrderForecastViewModel;
            var ItemsInSelectedForecast_ItemViewModel = /** @class */ (function (_super) {
                __extends(ItemsInSelectedForecast_ItemViewModel, _super);
                function ItemsInSelectedForecast_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            CoverageDays: true, Description: true, InnerPackSize: true, PalHI: true, PalletSize: true, PalletType: true, PalTI: true, SKU: true, SupplierPackSize: true, UOM: true
                        };
                    }
                    else {
                        _this._members["CoverageDays"] = true;
                        _this._members["Description"] = true;
                        _this._members["InnerPackSize"] = true;
                        _this._members["PalHI"] = true;
                        _this._members["PalletSize"] = true;
                        _this._members["PalletType"] = true;
                        _this._members["PalTI"] = true;
                        _this._members["SKU"] = true;
                        _this._members["SupplierPackSize"] = true;
                        _this._members["UOM"] = true;
                    }
                    return _this;
                }
                ItemsInSelectedForecast_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                ItemsInSelectedForecast_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInSelectedForecast_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInSelectedForecast_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInSelectedForecast_ItemViewModel.prototype._hydrateItemsInSelectedForecast_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.CoverageDays !== undefined)
                        this.CoverageDays = original.CoverageDays;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.InnerPackSize !== undefined)
                        this.InnerPackSize = original.InnerPackSize;
                    if (original.PalHI !== undefined)
                        this.PalHI = original.PalHI;
                    if (original.PalletSize !== undefined)
                        this.PalletSize = original.PalletSize;
                    if (original.PalletType !== undefined)
                        this.PalletType = original.PalletType;
                    if (original.PalTI !== undefined)
                        this.PalTI = original.PalTI;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.SupplierPackSize !== undefined)
                        this.SupplierPackSize = original.SupplierPackSize;
                    if (original.UOM !== undefined)
                        this.UOM = original.UOM;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInSelectedForecast_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInSelectedForecast_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInSelectedForecast_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInSelectedForecast_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInSelectedForecast_ItemViewModel;
            }(BaseClass.ViewModel));
            KPIDashboard.ItemsInSelectedForecast_ItemViewModel = ItemsInSelectedForecast_ItemViewModel;
            var SelectedSKUs_ItemViewModel = /** @class */ (function (_super) {
                __extends(SelectedSKUs_ItemViewModel, _super);
                function SelectedSKUs_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, InnerPackSize: true, PalHI: true, PalletSize: true, PalletType: true, PalTI: true, SKU: true, SupplierPackSize: true, UOM: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["InnerPackSize"] = true;
                        _this._members["PalHI"] = true;
                        _this._members["PalletSize"] = true;
                        _this._members["PalletType"] = true;
                        _this._members["PalTI"] = true;
                        _this._members["SKU"] = true;
                        _this._members["SupplierPackSize"] = true;
                        _this._members["UOM"] = true;
                    }
                    return _this;
                }
                SelectedSKUs_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                SelectedSKUs_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SelectedSKUs_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSelectedSKUs_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SelectedSKUs_ItemViewModel.prototype._hydrateSelectedSKUs_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.InnerPackSize !== undefined)
                        this.InnerPackSize = original.InnerPackSize;
                    if (original.PalHI !== undefined)
                        this.PalHI = original.PalHI;
                    if (original.PalletSize !== undefined)
                        this.PalletSize = original.PalletSize;
                    if (original.PalletType !== undefined)
                        this.PalletType = original.PalletType;
                    if (original.PalTI !== undefined)
                        this.PalTI = original.PalTI;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.SupplierPackSize !== undefined)
                        this.SupplierPackSize = original.SupplierPackSize;
                    if (original.UOM !== undefined)
                        this.UOM = original.UOM;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SelectedSKUs_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SelectedSKUs_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SelectedSKUs_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SelectedSKUs_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SelectedSKUs_ItemViewModel;
            }(BaseClass.ViewModel));
            KPIDashboard.SelectedSKUs_ItemViewModel = SelectedSKUs_ItemViewModel;
            var SelectedSKU_ItemViewModel = /** @class */ (function (_super) {
                __extends(SelectedSKU_ItemViewModel, _super);
                function SelectedSKU_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, InnerPackSize: true, PalHI: true, PalletSize: true, PalletType: true, PalTI: true, SKU: true, SupplierPackSize: true, UOM: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["InnerPackSize"] = true;
                        _this._members["PalHI"] = true;
                        _this._members["PalletSize"] = true;
                        _this._members["PalletType"] = true;
                        _this._members["PalTI"] = true;
                        _this._members["SKU"] = true;
                        _this._members["SupplierPackSize"] = true;
                        _this._members["UOM"] = true;
                    }
                    return _this;
                }
                SelectedSKU_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                SelectedSKU_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SelectedSKU_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSelectedSKU_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SelectedSKU_ItemViewModel.prototype._hydrateSelectedSKU_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.InnerPackSize !== undefined)
                        this.InnerPackSize = original.InnerPackSize;
                    if (original.PalHI !== undefined)
                        this.PalHI = original.PalHI;
                    if (original.PalletSize !== undefined)
                        this.PalletSize = original.PalletSize;
                    if (original.PalletType !== undefined)
                        this.PalletType = original.PalletType;
                    if (original.PalTI !== undefined)
                        this.PalTI = original.PalTI;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.SupplierPackSize !== undefined)
                        this.SupplierPackSize = original.SupplierPackSize;
                    if (original.UOM !== undefined)
                        this.UOM = original.UOM;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SelectedSKU_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SelectedSKU_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SelectedSKU_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SelectedSKU_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SelectedSKU_ItemViewModel;
            }(BaseClass.ViewModel));
            KPIDashboard.SelectedSKU_ItemViewModel = SelectedSKU_ItemViewModel;
            var Supplier_SupplierViewModel = /** @class */ (function (_super) {
                __extends(Supplier_SupplierViewModel, _super);
                function Supplier_SupplierViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Code: true, Id: true, Name: true, BusinessUnit: true, Contacts: true
                        };
                    }
                    else {
                        _this._members["Code"] = true;
                        _this._members["Id"] = true;
                        _this._members["Name"] = true;
                        _this._members["BusinessUnit"] = true;
                        _this._members["Contacts"] = true;
                    }
                    _this.Contacts = new Array();
                    return _this;
                }
                Supplier_SupplierViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.BusinessUnit != null)
                        instance.BusinessUnit = Supplier_Supplier_BusinessUnit_BusinessUnitViewModel._lightCast(instance.BusinessUnit);
                    if (instance.Contacts != null) {
                        for (var i = 0; i < instance.Contacts.length; i++) {
                            instance.Contacts[i] = Supplier_Supplier_Contacts_ContactViewModel._lightCast(instance.Contacts[i]);
                        }
                    }
                    return instance;
                };
                Supplier_SupplierViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Supplier_SupplierViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSupplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Supplier_SupplierViewModel.prototype._hydrateSupplier_SupplierViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Code !== undefined)
                        this.Code = original.Code;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    if (original.BusinessUnit !== undefined)
                        this.BusinessUnit = Supplier_Supplier_BusinessUnit_BusinessUnitViewModel._initializeFrom(original.BusinessUnit, ignoreReadOnlyProperties, context);
                    if (original.Contacts != null) {
                        for (var i = 0; i < original.Contacts.length; i++) {
                            this.Contacts.push(Supplier_Supplier_Contacts_ContactViewModel._initializeFrom(original.Contacts[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Supplier_SupplierViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Supplier_SupplierViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Supplier_SupplierViewModel;
            }(BaseClass.ViewModel));
            KPIDashboard.Supplier_SupplierViewModel = Supplier_SupplierViewModel;
            var Supplier_Supplier_BusinessUnit_BusinessUnitViewModel = /** @class */ (function (_super) {
                __extends(Supplier_Supplier_BusinessUnit_BusinessUnitViewModel, _super);
                function Supplier_Supplier_BusinessUnit_BusinessUnitViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, Id: true, Number: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["Id"] = true;
                        _this._members["Number"] = true;
                    }
                    return _this;
                }
                Supplier_Supplier_BusinessUnit_BusinessUnitViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Supplier_Supplier_BusinessUnit_BusinessUnitViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Supplier_Supplier_BusinessUnit_BusinessUnitViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSupplier_Supplier_BusinessUnit_BusinessUnitViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Supplier_Supplier_BusinessUnit_BusinessUnitViewModel.prototype._hydrateSupplier_Supplier_BusinessUnit_BusinessUnitViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Number !== undefined)
                        this.Number = original.Number;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Supplier_Supplier_BusinessUnit_BusinessUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Supplier_Supplier_BusinessUnit_BusinessUnitViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Supplier_Supplier_BusinessUnit_BusinessUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Supplier_Supplier_BusinessUnit_BusinessUnitViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Supplier_Supplier_BusinessUnit_BusinessUnitViewModel;
            }(BaseClass.ViewModel));
            KPIDashboard.Supplier_Supplier_BusinessUnit_BusinessUnitViewModel = Supplier_Supplier_BusinessUnit_BusinessUnitViewModel;
            var Supplier_Supplier_Contacts_ContactViewModel = /** @class */ (function (_super) {
                __extends(Supplier_Supplier_Contacts_ContactViewModel, _super);
                function Supplier_Supplier_Contacts_ContactViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AccessFailedCount: true, Email: true, EmailConfirmed: true, Id: true, LockoutEnabled: true, LockoutEndDate: true, Name: true, PhoneNumber: true, PhoneNumberConfirmed: true, TwoFactorEnabled: true, UserName: true
                        };
                    }
                    else {
                        _this._members["AccessFailedCount"] = true;
                        _this._members["Email"] = true;
                        _this._members["EmailConfirmed"] = true;
                        _this._members["Id"] = true;
                        _this._members["LockoutEnabled"] = true;
                        _this._members["LockoutEndDate"] = true;
                        _this._members["Name"] = true;
                        _this._members["PhoneNumber"] = true;
                        _this._members["PhoneNumberConfirmed"] = true;
                        _this._members["TwoFactorEnabled"] = true;
                        _this._members["UserName"] = true;
                    }
                    return _this;
                }
                Supplier_Supplier_Contacts_ContactViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.LockoutEndDate != null)
                        instance.LockoutEndDate = new Date(instance.LockoutEndDate);
                    return instance;
                };
                Supplier_Supplier_Contacts_ContactViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Supplier_Supplier_Contacts_ContactViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSupplier_Supplier_Contacts_ContactViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Supplier_Supplier_Contacts_ContactViewModel.prototype._hydrateSupplier_Supplier_Contacts_ContactViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.AccessFailedCount !== undefined)
                        this.AccessFailedCount = original.AccessFailedCount;
                    if (original.Email !== undefined)
                        this.Email = original.Email;
                    if (original.EmailConfirmed !== undefined)
                        this.EmailConfirmed = original.EmailConfirmed;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.LockoutEnabled !== undefined)
                        this.LockoutEnabled = original.LockoutEnabled;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.LockoutEndDate))
                        this.LockoutEndDate = new Date(original.LockoutEndDate);
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    if (original.PhoneNumber !== undefined)
                        this.PhoneNumber = original.PhoneNumber;
                    if (original.PhoneNumberConfirmed !== undefined)
                        this.PhoneNumberConfirmed = original.PhoneNumberConfirmed;
                    if (original.TwoFactorEnabled !== undefined)
                        this.TwoFactorEnabled = original.TwoFactorEnabled;
                    if (original.UserName !== undefined)
                        this.UserName = original.UserName;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Supplier_Supplier_Contacts_ContactViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Supplier_Supplier_Contacts_ContactViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Supplier_Supplier_Contacts_ContactViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Supplier_Supplier_Contacts_ContactViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Supplier_Supplier_Contacts_ContactViewModel;
            }(BaseClass.ViewModel));
            KPIDashboard.Supplier_Supplier_Contacts_ContactViewModel = Supplier_Supplier_Contacts_ContactViewModel;
        })(KPIDashboard = ViewModels.KPIDashboard || (ViewModels.KPIDashboard = {}));
    })(ViewModels = DSS1_RetailerDriverStockOptimisation.ViewModels || (DSS1_RetailerDriverStockOptimisation.ViewModels = {}));
})(DSS1_RetailerDriverStockOptimisation || (DSS1_RetailerDriverStockOptimisation = {}));
