var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
var DSS1_RetailerDriverStockOptimisation;
(function (DSS1_RetailerDriverStockOptimisation) {
    var ViewModels;
    (function (ViewModels) {
        var AdminDashboard;
        (function (AdminDashboard) {
            var AdminDashboardViewModel = /** @class */ (function (_super) {
                __extends(AdminDashboardViewModel, _super);
                function AdminDashboardViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Agreements: true, OrderForecasts: true
                        };
                    }
                    else {
                        _this._members["Agreements"] = true;
                        _this._members["OrderForecasts"] = true;
                    }
                    _this.Agreements = new Array();
                    _this.OrderForecasts = new Array();
                    return _this;
                }
                AdminDashboardViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Agreements != null) {
                        for (var i = 0; i < instance.Agreements.length; i++) {
                            instance.Agreements[i] = Agreements_AgreementViewModel._lightCast(instance.Agreements[i]);
                        }
                    }
                    if (instance.OrderForecasts != null) {
                        for (var i = 0; i < instance.OrderForecasts.length; i++) {
                            instance.OrderForecasts[i] = OrderForecasts_OrderForecastDetailsViewModel._lightCast(instance.OrderForecasts[i]);
                        }
                    }
                    return instance;
                };
                AdminDashboardViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new AdminDashboardViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAdminDashboardViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                AdminDashboardViewModel.prototype._hydrateAdminDashboardViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Agreements != null) {
                        for (var i = 0; i < original.Agreements.length; i++) {
                            this.Agreements.push(Agreements_AgreementViewModel._initializeFrom(original.Agreements[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.OrderForecasts != null) {
                        for (var i = 0; i < original.OrderForecasts.length; i++) {
                            this.OrderForecasts.push(OrderForecasts_OrderForecastDetailsViewModel._initializeFrom(original.OrderForecasts[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = AdminDashboardViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        AdminDashboardViewModel._deleteDropDownInitialValues(reduced);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                AdminDashboardViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = AdminDashboardViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    AdminDashboardViewModel._deleteDropDownInitialValues(reduced);
                    return reduced;
                };
                AdminDashboardViewModel._deleteDropDownInitialValues = function (reduced) {
                    if (reduced == null)
                        return;
                    DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
                };
                AdminDashboardViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return AdminDashboardViewModel;
            }(DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel));
            AdminDashboard.AdminDashboardViewModel = AdminDashboardViewModel;
            var Agreements_AgreementViewModel = /** @class */ (function (_super) {
                __extends(Agreements_AgreementViewModel, _super);
                function Agreements_AgreementViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AgreementDocument: true, DateCreated: true, FullTruckLoad: true, Id: true, LeadTime: true, Profile: true, TargetInventoryDays: true, WDDeliveries: true, AgreementStatuses: true, Items: true, Supplier: true, Warehouses: true
                        };
                    }
                    else {
                        _this._members["AgreementDocument"] = true;
                        _this._members["DateCreated"] = true;
                        _this._members["FullTruckLoad"] = true;
                        _this._members["Id"] = true;
                        _this._members["LeadTime"] = true;
                        _this._members["Profile"] = true;
                        _this._members["TargetInventoryDays"] = true;
                        _this._members["WDDeliveries"] = true;
                        _this._members["AgreementStatuses"] = true;
                        _this._members["Items"] = true;
                        _this._members["Supplier"] = true;
                        _this._members["Warehouses"] = true;
                    }
                    _this.AgreementStatuses = new Array();
                    _this.Items = new Array();
                    _this.Warehouses = new Array();
                    return _this;
                }
                Agreements_AgreementViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DateCreated != null)
                        instance.DateCreated = new Date(instance.DateCreated);
                    if (instance.AgreementStatuses != null) {
                        for (var i = 0; i < instance.AgreementStatuses.length; i++) {
                            instance.AgreementStatuses[i] = Agreements_Agreement_AgreementStatuses_AgreementStatusViewModel._lightCast(instance.AgreementStatuses[i]);
                        }
                    }
                    if (instance.Items != null) {
                        for (var i = 0; i < instance.Items.length; i++) {
                            instance.Items[i] = Agreements_Agreement_Items_ItemViewModel._lightCast(instance.Items[i]);
                        }
                    }
                    if (instance.Supplier != null)
                        instance.Supplier = Agreements_Agreement_Supplier_SupplierViewModel._lightCast(instance.Supplier);
                    if (instance.Warehouses != null) {
                        for (var i = 0; i < instance.Warehouses.length; i++) {
                            instance.Warehouses[i] = Agreements_Agreement_Warehouses_WarehouseViewModel._lightCast(instance.Warehouses[i]);
                        }
                    }
                    return instance;
                };
                Agreements_AgreementViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreements_AgreementViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreements_AgreementViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreements_AgreementViewModel.prototype._hydrateAgreements_AgreementViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.AgreementDocument !== undefined)
                        this.AgreementDocument = original.AgreementDocument;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DateCreated))
                        this.DateCreated = new Date(original.DateCreated);
                    if (original.FullTruckLoad !== undefined)
                        this.FullTruckLoad = original.FullTruckLoad;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.LeadTime !== undefined)
                        this.LeadTime = original.LeadTime;
                    if (original.Profile !== undefined)
                        this.Profile = original.Profile;
                    if (original.TargetInventoryDays !== undefined)
                        this.TargetInventoryDays = original.TargetInventoryDays;
                    if (original.WDDeliveries !== undefined)
                        this.WDDeliveries = original.WDDeliveries;
                    if (original.AgreementStatuses != null) {
                        for (var i = 0; i < original.AgreementStatuses.length; i++) {
                            this.AgreementStatuses.push(Agreements_Agreement_AgreementStatuses_AgreementStatusViewModel._initializeFrom(original.AgreementStatuses[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.Items != null) {
                        for (var i = 0; i < original.Items.length; i++) {
                            this.Items.push(Agreements_Agreement_Items_ItemViewModel._initializeFrom(original.Items[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.Supplier !== undefined)
                        this.Supplier = Agreements_Agreement_Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);
                    if (original.Warehouses != null) {
                        for (var i = 0; i < original.Warehouses.length; i++) {
                            this.Warehouses.push(Agreements_Agreement_Warehouses_WarehouseViewModel._initializeFrom(original.Warehouses[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreements_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreements_AgreementViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreements_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreements_AgreementViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreements_AgreementViewModel;
            }(BaseClass.ViewModel));
            AdminDashboard.Agreements_AgreementViewModel = Agreements_AgreementViewModel;
            var Agreements_Agreement_AgreementStatuses_AgreementStatusViewModel = /** @class */ (function (_super) {
                __extends(Agreements_Agreement_AgreementStatuses_AgreementStatusViewModel, _super);
                function Agreements_Agreement_AgreementStatuses_AgreementStatusViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Active: true, ApprovedBySonae: true, ApprovedBySupplier: true, DateIssued: true, Id: true, InProgress: true, IssuedBy: true, Status: true, UnderRevision: true
                        };
                    }
                    else {
                        _this._members["Active"] = true;
                        _this._members["ApprovedBySonae"] = true;
                        _this._members["ApprovedBySupplier"] = true;
                        _this._members["DateIssued"] = true;
                        _this._members["Id"] = true;
                        _this._members["InProgress"] = true;
                        _this._members["IssuedBy"] = true;
                        _this._members["Status"] = true;
                        _this._members["UnderRevision"] = true;
                    }
                    return _this;
                }
                Agreements_Agreement_AgreementStatuses_AgreementStatusViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DateIssued != null)
                        instance.DateIssued = new Date(instance.DateIssued);
                    return instance;
                };
                Agreements_Agreement_AgreementStatuses_AgreementStatusViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreements_Agreement_AgreementStatuses_AgreementStatusViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreements_Agreement_AgreementStatuses_AgreementStatusViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreements_Agreement_AgreementStatuses_AgreementStatusViewModel.prototype._hydrateAgreements_Agreement_AgreementStatuses_AgreementStatusViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Active !== undefined)
                        this.Active = original.Active;
                    if (original.ApprovedBySonae !== undefined)
                        this.ApprovedBySonae = original.ApprovedBySonae;
                    if (original.ApprovedBySupplier !== undefined)
                        this.ApprovedBySupplier = original.ApprovedBySupplier;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DateIssued))
                        this.DateIssued = new Date(original.DateIssued);
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.InProgress !== undefined)
                        this.InProgress = original.InProgress;
                    if (original.IssuedBy !== undefined)
                        this.IssuedBy = original.IssuedBy;
                    if (original.Status !== undefined)
                        this.Status = original.Status;
                    if (original.UnderRevision !== undefined)
                        this.UnderRevision = original.UnderRevision;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreements_Agreement_AgreementStatuses_AgreementStatusViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreements_Agreement_AgreementStatuses_AgreementStatusViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreements_Agreement_AgreementStatuses_AgreementStatusViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreements_Agreement_AgreementStatuses_AgreementStatusViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreements_Agreement_AgreementStatuses_AgreementStatusViewModel;
            }(BaseClass.ViewModel));
            AdminDashboard.Agreements_Agreement_AgreementStatuses_AgreementStatusViewModel = Agreements_Agreement_AgreementStatuses_AgreementStatusViewModel;
            var Agreements_Agreement_Items_ItemViewModel = /** @class */ (function (_super) {
                __extends(Agreements_Agreement_Items_ItemViewModel, _super);
                function Agreements_Agreement_Items_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AvgDailyDemand: true, Description: true, SKU: true, UPC: true
                        };
                    }
                    else {
                        _this._members["AvgDailyDemand"] = true;
                        _this._members["Description"] = true;
                        _this._members["SKU"] = true;
                        _this._members["UPC"] = true;
                    }
                    return _this;
                }
                Agreements_Agreement_Items_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Agreements_Agreement_Items_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreements_Agreement_Items_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreements_Agreement_Items_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreements_Agreement_Items_ItemViewModel.prototype._hydrateAgreements_Agreement_Items_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.AvgDailyDemand !== undefined)
                        this.AvgDailyDemand = original.AvgDailyDemand;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.UPC !== undefined)
                        this.UPC = original.UPC;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreements_Agreement_Items_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreements_Agreement_Items_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreements_Agreement_Items_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreements_Agreement_Items_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreements_Agreement_Items_ItemViewModel;
            }(BaseClass.ViewModel));
            AdminDashboard.Agreements_Agreement_Items_ItemViewModel = Agreements_Agreement_Items_ItemViewModel;
            var Agreements_Agreement_Supplier_SupplierViewModel = /** @class */ (function (_super) {
                __extends(Agreements_Agreement_Supplier_SupplierViewModel, _super);
                function Agreements_Agreement_Supplier_SupplierViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Code: true, Id: true, Name: true
                        };
                    }
                    else {
                        _this._members["Code"] = true;
                        _this._members["Id"] = true;
                        _this._members["Name"] = true;
                    }
                    return _this;
                }
                Agreements_Agreement_Supplier_SupplierViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Agreements_Agreement_Supplier_SupplierViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreements_Agreement_Supplier_SupplierViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreements_Agreement_Supplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreements_Agreement_Supplier_SupplierViewModel.prototype._hydrateAgreements_Agreement_Supplier_SupplierViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Code !== undefined)
                        this.Code = original.Code;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreements_Agreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreements_Agreement_Supplier_SupplierViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreements_Agreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreements_Agreement_Supplier_SupplierViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreements_Agreement_Supplier_SupplierViewModel;
            }(BaseClass.ViewModel));
            AdminDashboard.Agreements_Agreement_Supplier_SupplierViewModel = Agreements_Agreement_Supplier_SupplierViewModel;
            var Agreements_Agreement_Warehouses_WarehouseViewModel = /** @class */ (function (_super) {
                __extends(Agreements_Agreement_Warehouses_WarehouseViewModel, _super);
                function Agreements_Agreement_Warehouses_WarehouseViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Code: true, Description: true, Id: true
                        };
                    }
                    else {
                        _this._members["Code"] = true;
                        _this._members["Description"] = true;
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Agreements_Agreement_Warehouses_WarehouseViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Agreements_Agreement_Warehouses_WarehouseViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Agreements_Agreement_Warehouses_WarehouseViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAgreements_Agreement_Warehouses_WarehouseViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Agreements_Agreement_Warehouses_WarehouseViewModel.prototype._hydrateAgreements_Agreement_Warehouses_WarehouseViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Code !== undefined)
                        this.Code = original.Code;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Agreements_Agreement_Warehouses_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Agreements_Agreement_Warehouses_WarehouseViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Agreements_Agreement_Warehouses_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Agreements_Agreement_Warehouses_WarehouseViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Agreements_Agreement_Warehouses_WarehouseViewModel;
            }(BaseClass.ViewModel));
            AdminDashboard.Agreements_Agreement_Warehouses_WarehouseViewModel = Agreements_Agreement_Warehouses_WarehouseViewModel;
            var OrderForecasts_OrderForecastDetailsViewModel = /** @class */ (function (_super) {
                __extends(OrderForecasts_OrderForecastDetailsViewModel, _super);
                function OrderForecasts_OrderForecastDetailsViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AutomatedForecast: true, Id: true, OrderInventoryDays: true, Quantity: true, RecommendedOrderDate: true, ReplenishmentCycle: true, RoundQuantity: true, SalesForecastDate: true, SupplierCanDeliver: true, SupplierMaxQuantity: true, Warehouse: true, Item: true
                        };
                    }
                    else {
                        _this._members["AutomatedForecast"] = true;
                        _this._members["Id"] = true;
                        _this._members["OrderInventoryDays"] = true;
                        _this._members["Quantity"] = true;
                        _this._members["RecommendedOrderDate"] = true;
                        _this._members["ReplenishmentCycle"] = true;
                        _this._members["RoundQuantity"] = true;
                        _this._members["SalesForecastDate"] = true;
                        _this._members["SupplierCanDeliver"] = true;
                        _this._members["SupplierMaxQuantity"] = true;
                        _this._members["Warehouse"] = true;
                        _this._members["Item"] = true;
                    }
                    return _this;
                }
                OrderForecasts_OrderForecastDetailsViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.RecommendedOrderDate != null)
                        instance.RecommendedOrderDate = new Date(instance.RecommendedOrderDate);
                    if (instance.SalesForecastDate != null)
                        instance.SalesForecastDate = new Date(instance.SalesForecastDate);
                    if (instance.Warehouse != null)
                        instance.Warehouse = OrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel._lightCast(instance.Warehouse);
                    if (instance.Item != null)
                        instance.Item = OrderForecasts_OrderForecastDetails_Item_ItemViewModel._lightCast(instance.Item);
                    return instance;
                };
                OrderForecasts_OrderForecastDetailsViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new OrderForecasts_OrderForecastDetailsViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateOrderForecasts_OrderForecastDetailsViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                OrderForecasts_OrderForecastDetailsViewModel.prototype._hydrateOrderForecasts_OrderForecastDetailsViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.AutomatedForecast !== undefined)
                        this.AutomatedForecast = original.AutomatedForecast;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.OrderInventoryDays !== undefined)
                        this.OrderInventoryDays = original.OrderInventoryDays;
                    if (original.Quantity !== undefined)
                        this.Quantity = original.Quantity;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.RecommendedOrderDate))
                        this.RecommendedOrderDate = new Date(original.RecommendedOrderDate);
                    if (original.ReplenishmentCycle !== undefined)
                        this.ReplenishmentCycle = original.ReplenishmentCycle;
                    if (original.RoundQuantity !== undefined)
                        this.RoundQuantity = original.RoundQuantity;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.SalesForecastDate))
                        this.SalesForecastDate = new Date(original.SalesForecastDate);
                    if (original.SupplierCanDeliver !== undefined)
                        this.SupplierCanDeliver = original.SupplierCanDeliver;
                    if (original.SupplierMaxQuantity !== undefined)
                        this.SupplierMaxQuantity = original.SupplierMaxQuantity;
                    if (original.Warehouse !== undefined)
                        this.Warehouse = OrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel._initializeFrom(original.Warehouse, ignoreReadOnlyProperties, context);
                    if (original.Item !== undefined)
                        this.Item = OrderForecasts_OrderForecastDetails_Item_ItemViewModel._initializeFrom(original.Item, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = OrderForecasts_OrderForecastDetailsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                OrderForecasts_OrderForecastDetailsViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = OrderForecasts_OrderForecastDetailsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                OrderForecasts_OrderForecastDetailsViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return OrderForecasts_OrderForecastDetailsViewModel;
            }(BaseClass.ViewModel));
            AdminDashboard.OrderForecasts_OrderForecastDetailsViewModel = OrderForecasts_OrderForecastDetailsViewModel;
            var OrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel = /** @class */ (function (_super) {
                __extends(OrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel, _super);
                function OrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Code: true, Description: true, Id: true
                        };
                    }
                    else {
                        _this._members["Code"] = true;
                        _this._members["Description"] = true;
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                OrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                OrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new OrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateOrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                OrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel.prototype._hydrateOrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Code !== undefined)
                        this.Code = original.Code;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = OrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                OrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = OrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                OrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return OrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel;
            }(BaseClass.ViewModel));
            AdminDashboard.OrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel = OrderForecasts_OrderForecastDetails_Warehouse_WarehouseViewModel;
            var OrderForecasts_OrderForecastDetails_Item_ItemViewModel = /** @class */ (function (_super) {
                __extends(OrderForecasts_OrderForecastDetails_Item_ItemViewModel, _super);
                function OrderForecasts_OrderForecastDetails_Item_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AvgDailyDemand: true, Description: true, SKU: true, UPC: true
                        };
                    }
                    else {
                        _this._members["AvgDailyDemand"] = true;
                        _this._members["Description"] = true;
                        _this._members["SKU"] = true;
                        _this._members["UPC"] = true;
                    }
                    return _this;
                }
                OrderForecasts_OrderForecastDetails_Item_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                OrderForecasts_OrderForecastDetails_Item_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new OrderForecasts_OrderForecastDetails_Item_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateOrderForecasts_OrderForecastDetails_Item_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                OrderForecasts_OrderForecastDetails_Item_ItemViewModel.prototype._hydrateOrderForecasts_OrderForecastDetails_Item_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.AvgDailyDemand !== undefined)
                        this.AvgDailyDemand = original.AvgDailyDemand;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.UPC !== undefined)
                        this.UPC = original.UPC;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = OrderForecasts_OrderForecastDetails_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                OrderForecasts_OrderForecastDetails_Item_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = OrderForecasts_OrderForecastDetails_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                OrderForecasts_OrderForecastDetails_Item_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return OrderForecasts_OrderForecastDetails_Item_ItemViewModel;
            }(BaseClass.ViewModel));
            AdminDashboard.OrderForecasts_OrderForecastDetails_Item_ItemViewModel = OrderForecasts_OrderForecastDetails_Item_ItemViewModel;
        })(AdminDashboard = ViewModels.AdminDashboard || (ViewModels.AdminDashboard = {}));
    })(ViewModels = DSS1_RetailerDriverStockOptimisation.ViewModels || (DSS1_RetailerDriverStockOptimisation.ViewModels = {}));
})(DSS1_RetailerDriverStockOptimisation || (DSS1_RetailerDriverStockOptimisation = {}));
