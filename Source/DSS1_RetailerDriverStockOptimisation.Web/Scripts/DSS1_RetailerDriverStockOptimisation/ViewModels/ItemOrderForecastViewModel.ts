// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
namespace DSS1_RetailerDriverStockOptimisation.ViewModels.ItemOrderForecast {
export class ItemOrderForecastViewModel extends DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
OrderProposals:
true,Item:
true,SupplierId:
true,SKU:
true,Supplier:
true,Chart107:
true,Chart105:
true,Chart108:
true,Chart104:
true,Chart1243:
true,Chart1284:
                true
            }
        } else {
            this._members["OrderProposals"] = true;
            this._members["Item"] = true;
            this._members["SupplierId"] = true;
            this._members["SKU"] = true;
            this._members["Supplier"] = true;
            this._members["Chart107"] = true;
            this._members["Chart105"] = true;
            this._members["Chart108"] = true;
            this._members["Chart104"] = true;
            this._members["Chart1243"] = true;
            this._members["Chart1284"] = true;
        }

        this.OrderProposals = new Array<any>();
        this.Chart107 = new Array<any>();
        this.Chart105 = new Array<any>();
        this.Chart108 = new Array<any>();
        this.Chart104 = new Array<any>();
        this.Chart1243 = new Array<any>();
        this.Chart1284 = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;


        if(instance.OrderProposals != null) {
            for(let i = 0; i < instance.OrderProposals.length; i++) {
                instance.OrderProposals[i] = OrderProposals_OrderForecastDetailsViewModel._lightCast(instance.OrderProposals[i]);

            }
        }
        if(instance.Item != null)
            instance.Item = Item_ItemViewModel._lightCast(instance.Item);
        if(instance.Supplier != null)
            instance.Supplier = Supplier_SupplierViewModel._lightCast(instance.Supplier);

        if(instance.Chart107 != null) {
            for(let i = 0; i < instance.Chart107.length; i++) {
                instance.Chart107[i] = Chart107_OrderForecastStatisticViewModel._lightCast(instance.Chart107[i]);

            }
        }

        if(instance.Chart105 != null) {
            for(let i = 0; i < instance.Chart105.length; i++) {
                instance.Chart105[i] = Chart105_OrderForecastStatisticViewModel._lightCast(instance.Chart105[i]);

            }
        }

        if(instance.Chart108 != null) {
            for(let i = 0; i < instance.Chart108.length; i++) {
                instance.Chart108[i] = Chart108_OrderForecastStatisticViewModel._lightCast(instance.Chart108[i]);

            }
        }

        if(instance.Chart104 != null) {
            for(let i = 0; i < instance.Chart104.length; i++) {
                instance.Chart104[i] = Chart104_OrderForecastStatisticViewModel._lightCast(instance.Chart104[i]);

            }
        }

        if(instance.Chart1243 != null) {
            for(let i = 0; i < instance.Chart1243.length; i++) {
                instance.Chart1243[i] = Chart1243_OrderForecastStatisticViewModel._lightCast(instance.Chart1243[i]);

            }
        }

        if(instance.Chart1284 != null) {
            for(let i = 0; i < instance.Chart1284.length; i++) {
                instance.Chart1284[i] = Chart1284_OrderForecastStatisticViewModel._lightCast(instance.Chart1284[i]);

            }
        }
        return instance;
    }

    public static _initializeFrom(original: ItemOrderForecastViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): ItemOrderForecastViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        ItemOrderForecastViewModel = new ItemOrderForecastViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateItemOrderForecastViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateItemOrderForecastViewModel(original: ItemOrderForecastViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;


        if(original.OrderProposals != null) {
            for(let i = 0; i < original.OrderProposals.length; i++) {
                this.OrderProposals.push(OrderProposals_OrderForecastDetailsViewModel._initializeFrom(original.OrderProposals[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.Item !== undefined) this.Item = Item_ItemViewModel._initializeFrom(original.Item, ignoreReadOnlyProperties, context);
        if(original.SupplierId !== undefined) this.SupplierId = original.SupplierId;
        if(original.SKU !== undefined) this.SKU = original.SKU;

        if(original.Supplier !== undefined) this.Supplier = Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);

        if(original.Chart107 != null) {
            for(let i = 0; i < original.Chart107.length; i++) {
                this.Chart107.push(Chart107_OrderForecastStatisticViewModel._initializeFrom(original.Chart107[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.Chart105 != null) {
            for(let i = 0; i < original.Chart105.length; i++) {
                this.Chart105.push(Chart105_OrderForecastStatisticViewModel._initializeFrom(original.Chart105[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.Chart108 != null) {
            for(let i = 0; i < original.Chart108.length; i++) {
                this.Chart108.push(Chart108_OrderForecastStatisticViewModel._initializeFrom(original.Chart108[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.Chart104 != null) {
            for(let i = 0; i < original.Chart104.length; i++) {
                this.Chart104.push(Chart104_OrderForecastStatisticViewModel._initializeFrom(original.Chart104[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.Chart1243 != null) {
            for(let i = 0; i < original.Chart1243.length; i++) {
                this.Chart1243.push(Chart1243_OrderForecastStatisticViewModel._initializeFrom(original.Chart1243[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.Chart1284 != null) {
            for(let i = 0; i < original.Chart1284.length; i++) {
                this.Chart1284.push(Chart1284_OrderForecastStatisticViewModel._initializeFrom(original.Chart1284[i], ignoreReadOnlyProperties, context));
            }
        }
        if (original.DropdownBox__InitialSelection !== undefined) this.DropdownBox__InitialSelection = original.DropdownBox__InitialSelection;
        if (original.DropdownBox1__InitialSelection !== undefined) this.DropdownBox1__InitialSelection = original.DropdownBox1__InitialSelection;
        this.DropdownBoxSelectedItemKeys = original.DropdownBoxSelectedItemKeys;
        this.DropdownBox1SelectedItemKeys = original.DropdownBox1SelectedItemKeys;
        this.Chart107SelectedItemKeys = original.Chart107SelectedItemKeys;
        this.Chart108SelectedItemKeys = original.Chart108SelectedItemKeys;
        this.Chart105SelectedItemKeys = original.Chart105SelectedItemKeys;
        this.Chart104SelectedItemKeys = original.Chart104SelectedItemKeys;
        this.Chart1243SelectedItemKeys = original.Chart1243SelectedItemKeys;
        this.Chart1284SelectedItemKeys = original.Chart1284SelectedItemKeys;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = ItemOrderForecastViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            ItemOrderForecastViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): ItemOrderForecastViewModel {
        var reduced = ItemOrderForecastViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        ItemOrderForecastViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: ItemOrderForecastViewModel) {
        if (reduced == null) return;

        delete reduced.DropdownBox__InitialSelection;
        delete reduced.DropdownBox1__InitialSelection;

        DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public OrderProposals:
    Array<any>;
public Item:
    any;
public SupplierId:
    any;
public SKU:
    any;
public Supplier:
    any;
public Chart107:
    Array<any>;
public Chart105:
    Array<any>;
public Chart108:
    Array<any>;
public Chart104:
    Array<any>;
public Chart1243:
    Array<any>;
public Chart1284:
    Array<any>;
public DropdownBox__InitialSelection:
    any;
public DropdownBox1__InitialSelection:
    any;
public DropdownBoxSelectedItemKeys:
    any[];
public DropdownBox1SelectedItemKeys:
    any[];
public Chart107SelectedItemKeys:
    any[];
public Chart108SelectedItemKeys:
    any[];
public Chart105SelectedItemKeys:
    any[];
public Chart104SelectedItemKeys:
    any[];
public Chart1243SelectedItemKeys:
    any[];
public Chart1284SelectedItemKeys:
    any[];
}

export class OrderProposals_OrderForecastDetailsViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,SupplierCanDeliver:
true,SupplierMaxQuantity:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["SupplierCanDeliver"] = true;
            this._members["SupplierMaxQuantity"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: OrderProposals_OrderForecastDetailsViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): OrderProposals_OrderForecastDetailsViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        OrderProposals_OrderForecastDetailsViewModel = new OrderProposals_OrderForecastDetailsViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateOrderProposals_OrderForecastDetailsViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateOrderProposals_OrderForecastDetailsViewModel(original: OrderProposals_OrderForecastDetailsViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Id !== undefined) this.Id = original.Id;
        if(original.SupplierCanDeliver !== undefined) this.SupplierCanDeliver = original.SupplierCanDeliver;
        if(original.SupplierMaxQuantity !== undefined) this.SupplierMaxQuantity = original.SupplierMaxQuantity;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = OrderProposals_OrderForecastDetailsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): OrderProposals_OrderForecastDetailsViewModel {
        var reduced = OrderProposals_OrderForecastDetailsViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public SupplierCanDeliver:
    any;
public SupplierMaxQuantity:
    any;
}

export class Item_ItemViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Description:
true,SKU:
                true
            }
        } else {
            this._members["Description"] = true;
            this._members["SKU"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Item_ItemViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Item_ItemViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Item_ItemViewModel = new Item_ItemViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateItem_ItemViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateItem_ItemViewModel(original: Item_ItemViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.SKU !== undefined) this.SKU = original.SKU;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Item_ItemViewModel {
        var reduced = Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Description:
    any;
public SKU:
    any;
    public _versionTimestamp?: string;
}

export class Supplier_SupplierViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Code:
true,Name:
true,Contacts:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Code"] = true;
            this._members["Name"] = true;
            this._members["Contacts"] = true;
        }

        this.Contacts = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;


        if(instance.Contacts != null) {
            for(let i = 0; i < instance.Contacts.length; i++) {
                instance.Contacts[i] = Supplier_Supplier_Contacts_ContactViewModel._lightCast(instance.Contacts[i]);

            }
        }
        return instance;
    }

    public static _initializeFrom(original: Supplier_SupplierViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_SupplierViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_SupplierViewModel = new Supplier_SupplierViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_SupplierViewModel(original: Supplier_SupplierViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Name !== undefined) this.Name = original.Name;

        if(original.Contacts != null) {
            for(let i = 0; i < original.Contacts.length; i++) {
                this.Contacts.push(Supplier_Supplier_Contacts_ContactViewModel._initializeFrom(original.Contacts[i], ignoreReadOnlyProperties, context));
            }
        }

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_SupplierViewModel {
        var reduced = Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Code:
    any;
public Name:
    any;
public Contacts:
    Array<any>;
}

export class Supplier_Supplier_Contacts_ContactViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
UserName:
true,EmailConfirmed:
true,LockoutEnabled:
true,PhoneNumberConfirmed:
true,TwoFactorEnabled:
true,AccessFailedCount:
true,Name:
true,Email:
true,PhoneNumber:
true,LockoutEndDate:
true,Id:
                true
            }
        } else {
            this._members["UserName"] = true;
            this._members["EmailConfirmed"] = true;
            this._members["LockoutEnabled"] = true;
            this._members["PhoneNumberConfirmed"] = true;
            this._members["TwoFactorEnabled"] = true;
            this._members["AccessFailedCount"] = true;
            this._members["Name"] = true;
            this._members["Email"] = true;
            this._members["PhoneNumber"] = true;
            this._members["LockoutEndDate"] = true;
            this._members["Id"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.LockoutEndDate != null) instance.LockoutEndDate = new Date(instance.LockoutEndDate);
        return instance;
    }

    public static _initializeFrom(original: Supplier_Supplier_Contacts_ContactViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Supplier_Supplier_Contacts_ContactViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Supplier_Supplier_Contacts_ContactViewModel = new Supplier_Supplier_Contacts_ContactViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSupplier_Supplier_Contacts_ContactViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSupplier_Supplier_Contacts_ContactViewModel(original: Supplier_Supplier_Contacts_ContactViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.UserName !== undefined) this.UserName = original.UserName;
        if(original.EmailConfirmed !== undefined) this.EmailConfirmed = original.EmailConfirmed;
        if(original.LockoutEnabled !== undefined) this.LockoutEnabled = original.LockoutEnabled;
        if(original.PhoneNumberConfirmed !== undefined) this.PhoneNumberConfirmed = original.PhoneNumberConfirmed;
        if(original.TwoFactorEnabled !== undefined) this.TwoFactorEnabled = original.TwoFactorEnabled;
        if(original.AccessFailedCount !== undefined) this.AccessFailedCount = original.AccessFailedCount;
        if(original.Name !== undefined) this.Name = original.Name;
        if(original.Email !== undefined) this.Email = original.Email;
        if(original.PhoneNumber !== undefined) this.PhoneNumber = original.PhoneNumber;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.LockoutEndDate)) this.LockoutEndDate = new Date(original.LockoutEndDate);
        if(original.Id !== undefined) this.Id = original.Id;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Supplier_Supplier_Contacts_ContactViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Supplier_Supplier_Contacts_ContactViewModel {
        var reduced = Supplier_Supplier_Contacts_ContactViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public UserName:
    any;
public EmailConfirmed:
    any;
public LockoutEnabled:
    any;
public PhoneNumberConfirmed:
    any;
public TwoFactorEnabled:
    any;
public AccessFailedCount:
    any;
public Name:
    any;
public Email:
    any;
public PhoneNumber:
    any;
public LockoutEndDate:
    any;
public Id:
    any;
}

export class Chart107_OrderForecastStatisticViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Quantity:
true,RoundQuantity:
true,OrderDate:
true,OrderDateFormatted:
true,Item:
true,Warehouse:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Quantity"] = true;
            this._members["RoundQuantity"] = true;
            this._members["OrderDate"] = true;
            this._members["OrderDateFormatted"] = true;
            this._members["Item"] = true;
            this._members["Warehouse"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.OrderDate != null) instance.OrderDate = new Date(instance.OrderDate);
        if(instance.Item != null)
            instance.Item = Chart107_OrderForecastStatistic_Item_ItemViewModel._lightCast(instance.Item);
        if(instance.Warehouse != null)
            instance.Warehouse = Chart107_OrderForecastStatistic_Warehouse_WarehouseViewModel._lightCast(instance.Warehouse);
        return instance;
    }

    public static _initializeFrom(original: Chart107_OrderForecastStatisticViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart107_OrderForecastStatisticViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart107_OrderForecastStatisticViewModel = new Chart107_OrderForecastStatisticViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart107_OrderForecastStatisticViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart107_OrderForecastStatisticViewModel(original: Chart107_OrderForecastStatisticViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Quantity !== undefined) this.Quantity = original.Quantity;
        if(original.RoundQuantity !== undefined) this.RoundQuantity = original.RoundQuantity;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.OrderDate)) this.OrderDate = new Date(original.OrderDate);
        if(original.OrderDateFormatted !== undefined) this.OrderDateFormatted = original.OrderDateFormatted;

        if(original.Item !== undefined) this.Item = Chart107_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(original.Item, ignoreReadOnlyProperties, context);

        if(original.Warehouse !== undefined) this.Warehouse = Chart107_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(original.Warehouse, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart107_OrderForecastStatisticViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart107_OrderForecastStatisticViewModel {
        var reduced = Chart107_OrderForecastStatisticViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Quantity:
    any;
public RoundQuantity:
    any;
public OrderDate:
    any;
public OrderDateFormatted:
    any;
public Item:
    any;
public Warehouse:
    any;
    public _versionTimestamp?: string;
}

export class Chart107_OrderForecastStatistic_Item_ItemViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
SKU:
true,Description:
true,UPC:
true,AvgDailyDemand:
                true
            }
        } else {
            this._members["SKU"] = true;
            this._members["Description"] = true;
            this._members["UPC"] = true;
            this._members["AvgDailyDemand"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Chart107_OrderForecastStatistic_Item_ItemViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart107_OrderForecastStatistic_Item_ItemViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart107_OrderForecastStatistic_Item_ItemViewModel = new Chart107_OrderForecastStatistic_Item_ItemViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart107_OrderForecastStatistic_Item_ItemViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart107_OrderForecastStatistic_Item_ItemViewModel(original: Chart107_OrderForecastStatistic_Item_ItemViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.SKU !== undefined) this.SKU = original.SKU;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.UPC !== undefined) this.UPC = original.UPC;
        if(original.AvgDailyDemand !== undefined) this.AvgDailyDemand = original.AvgDailyDemand;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart107_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart107_OrderForecastStatistic_Item_ItemViewModel {
        var reduced = Chart107_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public SKU:
    any;
public Description:
    any;
public UPC:
    any;
public AvgDailyDemand:
    any;
    public _versionTimestamp?: string;
}

export class Chart107_OrderForecastStatistic_Warehouse_WarehouseViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Code:
true,Description:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Code"] = true;
            this._members["Description"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Chart107_OrderForecastStatistic_Warehouse_WarehouseViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart107_OrderForecastStatistic_Warehouse_WarehouseViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart107_OrderForecastStatistic_Warehouse_WarehouseViewModel = new Chart107_OrderForecastStatistic_Warehouse_WarehouseViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart107_OrderForecastStatistic_Warehouse_WarehouseViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart107_OrderForecastStatistic_Warehouse_WarehouseViewModel(original: Chart107_OrderForecastStatistic_Warehouse_WarehouseViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Description !== undefined) this.Description = original.Description;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart107_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart107_OrderForecastStatistic_Warehouse_WarehouseViewModel {
        var reduced = Chart107_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Code:
    any;
public Description:
    any;
    public _versionTimestamp?: string;
}

export class Chart105_OrderForecastStatisticViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Quantity:
true,RoundQuantity:
true,OrderDate:
true,OrderDateFormatted:
true,Item:
true,Warehouse:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Quantity"] = true;
            this._members["RoundQuantity"] = true;
            this._members["OrderDate"] = true;
            this._members["OrderDateFormatted"] = true;
            this._members["Item"] = true;
            this._members["Warehouse"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.OrderDate != null) instance.OrderDate = new Date(instance.OrderDate);
        if(instance.Item != null)
            instance.Item = Chart105_OrderForecastStatistic_Item_ItemViewModel._lightCast(instance.Item);
        if(instance.Warehouse != null)
            instance.Warehouse = Chart105_OrderForecastStatistic_Warehouse_WarehouseViewModel._lightCast(instance.Warehouse);
        return instance;
    }

    public static _initializeFrom(original: Chart105_OrderForecastStatisticViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart105_OrderForecastStatisticViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart105_OrderForecastStatisticViewModel = new Chart105_OrderForecastStatisticViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart105_OrderForecastStatisticViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart105_OrderForecastStatisticViewModel(original: Chart105_OrderForecastStatisticViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Quantity !== undefined) this.Quantity = original.Quantity;
        if(original.RoundQuantity !== undefined) this.RoundQuantity = original.RoundQuantity;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.OrderDate)) this.OrderDate = new Date(original.OrderDate);
        if(original.OrderDateFormatted !== undefined) this.OrderDateFormatted = original.OrderDateFormatted;

        if(original.Item !== undefined) this.Item = Chart105_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(original.Item, ignoreReadOnlyProperties, context);

        if(original.Warehouse !== undefined) this.Warehouse = Chart105_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(original.Warehouse, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart105_OrderForecastStatisticViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart105_OrderForecastStatisticViewModel {
        var reduced = Chart105_OrderForecastStatisticViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Quantity:
    any;
public RoundQuantity:
    any;
public OrderDate:
    any;
public OrderDateFormatted:
    any;
public Item:
    any;
public Warehouse:
    any;
    public _versionTimestamp?: string;
}

export class Chart105_OrderForecastStatistic_Item_ItemViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
SKU:
true,Description:
true,UPC:
true,AvgDailyDemand:
                true
            }
        } else {
            this._members["SKU"] = true;
            this._members["Description"] = true;
            this._members["UPC"] = true;
            this._members["AvgDailyDemand"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Chart105_OrderForecastStatistic_Item_ItemViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart105_OrderForecastStatistic_Item_ItemViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart105_OrderForecastStatistic_Item_ItemViewModel = new Chart105_OrderForecastStatistic_Item_ItemViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart105_OrderForecastStatistic_Item_ItemViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart105_OrderForecastStatistic_Item_ItemViewModel(original: Chart105_OrderForecastStatistic_Item_ItemViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.SKU !== undefined) this.SKU = original.SKU;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.UPC !== undefined) this.UPC = original.UPC;
        if(original.AvgDailyDemand !== undefined) this.AvgDailyDemand = original.AvgDailyDemand;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart105_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart105_OrderForecastStatistic_Item_ItemViewModel {
        var reduced = Chart105_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public SKU:
    any;
public Description:
    any;
public UPC:
    any;
public AvgDailyDemand:
    any;
    public _versionTimestamp?: string;
}

export class Chart105_OrderForecastStatistic_Warehouse_WarehouseViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Code:
true,Description:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Code"] = true;
            this._members["Description"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Chart105_OrderForecastStatistic_Warehouse_WarehouseViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart105_OrderForecastStatistic_Warehouse_WarehouseViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart105_OrderForecastStatistic_Warehouse_WarehouseViewModel = new Chart105_OrderForecastStatistic_Warehouse_WarehouseViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart105_OrderForecastStatistic_Warehouse_WarehouseViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart105_OrderForecastStatistic_Warehouse_WarehouseViewModel(original: Chart105_OrderForecastStatistic_Warehouse_WarehouseViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Description !== undefined) this.Description = original.Description;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart105_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart105_OrderForecastStatistic_Warehouse_WarehouseViewModel {
        var reduced = Chart105_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Code:
    any;
public Description:
    any;
    public _versionTimestamp?: string;
}

export class Chart108_OrderForecastStatisticViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Quantity:
true,RoundQuantity:
true,OrderDate:
true,OrderDateFormatted:
true,Item:
true,Warehouse:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Quantity"] = true;
            this._members["RoundQuantity"] = true;
            this._members["OrderDate"] = true;
            this._members["OrderDateFormatted"] = true;
            this._members["Item"] = true;
            this._members["Warehouse"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.OrderDate != null) instance.OrderDate = new Date(instance.OrderDate);
        if(instance.Item != null)
            instance.Item = Chart108_OrderForecastStatistic_Item_ItemViewModel._lightCast(instance.Item);
        if(instance.Warehouse != null)
            instance.Warehouse = Chart108_OrderForecastStatistic_Warehouse_WarehouseViewModel._lightCast(instance.Warehouse);
        return instance;
    }

    public static _initializeFrom(original: Chart108_OrderForecastStatisticViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart108_OrderForecastStatisticViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart108_OrderForecastStatisticViewModel = new Chart108_OrderForecastStatisticViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart108_OrderForecastStatisticViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart108_OrderForecastStatisticViewModel(original: Chart108_OrderForecastStatisticViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Quantity !== undefined) this.Quantity = original.Quantity;
        if(original.RoundQuantity !== undefined) this.RoundQuantity = original.RoundQuantity;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.OrderDate)) this.OrderDate = new Date(original.OrderDate);
        if(original.OrderDateFormatted !== undefined) this.OrderDateFormatted = original.OrderDateFormatted;

        if(original.Item !== undefined) this.Item = Chart108_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(original.Item, ignoreReadOnlyProperties, context);

        if(original.Warehouse !== undefined) this.Warehouse = Chart108_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(original.Warehouse, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart108_OrderForecastStatisticViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart108_OrderForecastStatisticViewModel {
        var reduced = Chart108_OrderForecastStatisticViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Quantity:
    any;
public RoundQuantity:
    any;
public OrderDate:
    any;
public OrderDateFormatted:
    any;
public Item:
    any;
public Warehouse:
    any;
    public _versionTimestamp?: string;
}

export class Chart108_OrderForecastStatistic_Item_ItemViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
SKU:
true,Description:
true,UPC:
true,AvgDailyDemand:
                true
            }
        } else {
            this._members["SKU"] = true;
            this._members["Description"] = true;
            this._members["UPC"] = true;
            this._members["AvgDailyDemand"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Chart108_OrderForecastStatistic_Item_ItemViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart108_OrderForecastStatistic_Item_ItemViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart108_OrderForecastStatistic_Item_ItemViewModel = new Chart108_OrderForecastStatistic_Item_ItemViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart108_OrderForecastStatistic_Item_ItemViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart108_OrderForecastStatistic_Item_ItemViewModel(original: Chart108_OrderForecastStatistic_Item_ItemViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.SKU !== undefined) this.SKU = original.SKU;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.UPC !== undefined) this.UPC = original.UPC;
        if(original.AvgDailyDemand !== undefined) this.AvgDailyDemand = original.AvgDailyDemand;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart108_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart108_OrderForecastStatistic_Item_ItemViewModel {
        var reduced = Chart108_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public SKU:
    any;
public Description:
    any;
public UPC:
    any;
public AvgDailyDemand:
    any;
    public _versionTimestamp?: string;
}

export class Chart108_OrderForecastStatistic_Warehouse_WarehouseViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Code:
true,Description:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Code"] = true;
            this._members["Description"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Chart108_OrderForecastStatistic_Warehouse_WarehouseViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart108_OrderForecastStatistic_Warehouse_WarehouseViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart108_OrderForecastStatistic_Warehouse_WarehouseViewModel = new Chart108_OrderForecastStatistic_Warehouse_WarehouseViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart108_OrderForecastStatistic_Warehouse_WarehouseViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart108_OrderForecastStatistic_Warehouse_WarehouseViewModel(original: Chart108_OrderForecastStatistic_Warehouse_WarehouseViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Description !== undefined) this.Description = original.Description;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart108_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart108_OrderForecastStatistic_Warehouse_WarehouseViewModel {
        var reduced = Chart108_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Code:
    any;
public Description:
    any;
    public _versionTimestamp?: string;
}

export class Chart104_OrderForecastStatisticViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Quantity:
true,RoundQuantity:
true,OrderDate:
true,OrderDateFormatted:
true,Item:
true,Warehouse:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Quantity"] = true;
            this._members["RoundQuantity"] = true;
            this._members["OrderDate"] = true;
            this._members["OrderDateFormatted"] = true;
            this._members["Item"] = true;
            this._members["Warehouse"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.OrderDate != null) instance.OrderDate = new Date(instance.OrderDate);
        if(instance.Item != null)
            instance.Item = Chart104_OrderForecastStatistic_Item_ItemViewModel._lightCast(instance.Item);
        if(instance.Warehouse != null)
            instance.Warehouse = Chart104_OrderForecastStatistic_Warehouse_WarehouseViewModel._lightCast(instance.Warehouse);
        return instance;
    }

    public static _initializeFrom(original: Chart104_OrderForecastStatisticViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart104_OrderForecastStatisticViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart104_OrderForecastStatisticViewModel = new Chart104_OrderForecastStatisticViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart104_OrderForecastStatisticViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart104_OrderForecastStatisticViewModel(original: Chart104_OrderForecastStatisticViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Quantity !== undefined) this.Quantity = original.Quantity;
        if(original.RoundQuantity !== undefined) this.RoundQuantity = original.RoundQuantity;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.OrderDate)) this.OrderDate = new Date(original.OrderDate);
        if(original.OrderDateFormatted !== undefined) this.OrderDateFormatted = original.OrderDateFormatted;

        if(original.Item !== undefined) this.Item = Chart104_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(original.Item, ignoreReadOnlyProperties, context);

        if(original.Warehouse !== undefined) this.Warehouse = Chart104_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(original.Warehouse, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart104_OrderForecastStatisticViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart104_OrderForecastStatisticViewModel {
        var reduced = Chart104_OrderForecastStatisticViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Quantity:
    any;
public RoundQuantity:
    any;
public OrderDate:
    any;
public OrderDateFormatted:
    any;
public Item:
    any;
public Warehouse:
    any;
    public _versionTimestamp?: string;
}

export class Chart104_OrderForecastStatistic_Item_ItemViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
SKU:
true,Description:
true,UPC:
true,AvgDailyDemand:
                true
            }
        } else {
            this._members["SKU"] = true;
            this._members["Description"] = true;
            this._members["UPC"] = true;
            this._members["AvgDailyDemand"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Chart104_OrderForecastStatistic_Item_ItemViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart104_OrderForecastStatistic_Item_ItemViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart104_OrderForecastStatistic_Item_ItemViewModel = new Chart104_OrderForecastStatistic_Item_ItemViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart104_OrderForecastStatistic_Item_ItemViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart104_OrderForecastStatistic_Item_ItemViewModel(original: Chart104_OrderForecastStatistic_Item_ItemViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.SKU !== undefined) this.SKU = original.SKU;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.UPC !== undefined) this.UPC = original.UPC;
        if(original.AvgDailyDemand !== undefined) this.AvgDailyDemand = original.AvgDailyDemand;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart104_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart104_OrderForecastStatistic_Item_ItemViewModel {
        var reduced = Chart104_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public SKU:
    any;
public Description:
    any;
public UPC:
    any;
public AvgDailyDemand:
    any;
    public _versionTimestamp?: string;
}

export class Chart104_OrderForecastStatistic_Warehouse_WarehouseViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Code:
true,Description:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Code"] = true;
            this._members["Description"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Chart104_OrderForecastStatistic_Warehouse_WarehouseViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart104_OrderForecastStatistic_Warehouse_WarehouseViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart104_OrderForecastStatistic_Warehouse_WarehouseViewModel = new Chart104_OrderForecastStatistic_Warehouse_WarehouseViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart104_OrderForecastStatistic_Warehouse_WarehouseViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart104_OrderForecastStatistic_Warehouse_WarehouseViewModel(original: Chart104_OrderForecastStatistic_Warehouse_WarehouseViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Description !== undefined) this.Description = original.Description;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart104_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart104_OrderForecastStatistic_Warehouse_WarehouseViewModel {
        var reduced = Chart104_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Code:
    any;
public Description:
    any;
    public _versionTimestamp?: string;
}

export class Chart1243_OrderForecastStatisticViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Quantity:
true,RoundQuantity:
true,OrderDate:
true,OrderDateFormatted:
true,Item:
true,Warehouse:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Quantity"] = true;
            this._members["RoundQuantity"] = true;
            this._members["OrderDate"] = true;
            this._members["OrderDateFormatted"] = true;
            this._members["Item"] = true;
            this._members["Warehouse"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.OrderDate != null) instance.OrderDate = new Date(instance.OrderDate);
        if(instance.Item != null)
            instance.Item = Chart1243_OrderForecastStatistic_Item_ItemViewModel._lightCast(instance.Item);
        if(instance.Warehouse != null)
            instance.Warehouse = Chart1243_OrderForecastStatistic_Warehouse_WarehouseViewModel._lightCast(instance.Warehouse);
        return instance;
    }

    public static _initializeFrom(original: Chart1243_OrderForecastStatisticViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart1243_OrderForecastStatisticViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart1243_OrderForecastStatisticViewModel = new Chart1243_OrderForecastStatisticViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart1243_OrderForecastStatisticViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart1243_OrderForecastStatisticViewModel(original: Chart1243_OrderForecastStatisticViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Quantity !== undefined) this.Quantity = original.Quantity;
        if(original.RoundQuantity !== undefined) this.RoundQuantity = original.RoundQuantity;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.OrderDate)) this.OrderDate = new Date(original.OrderDate);
        if(original.OrderDateFormatted !== undefined) this.OrderDateFormatted = original.OrderDateFormatted;

        if(original.Item !== undefined) this.Item = Chart1243_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(original.Item, ignoreReadOnlyProperties, context);

        if(original.Warehouse !== undefined) this.Warehouse = Chart1243_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(original.Warehouse, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart1243_OrderForecastStatisticViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart1243_OrderForecastStatisticViewModel {
        var reduced = Chart1243_OrderForecastStatisticViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Quantity:
    any;
public RoundQuantity:
    any;
public OrderDate:
    any;
public OrderDateFormatted:
    any;
public Item:
    any;
public Warehouse:
    any;
    public _versionTimestamp?: string;
}

export class Chart1243_OrderForecastStatistic_Item_ItemViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
SKU:
true,Description:
true,UPC:
true,AvgDailyDemand:
                true
            }
        } else {
            this._members["SKU"] = true;
            this._members["Description"] = true;
            this._members["UPC"] = true;
            this._members["AvgDailyDemand"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Chart1243_OrderForecastStatistic_Item_ItemViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart1243_OrderForecastStatistic_Item_ItemViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart1243_OrderForecastStatistic_Item_ItemViewModel = new Chart1243_OrderForecastStatistic_Item_ItemViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart1243_OrderForecastStatistic_Item_ItemViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart1243_OrderForecastStatistic_Item_ItemViewModel(original: Chart1243_OrderForecastStatistic_Item_ItemViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.SKU !== undefined) this.SKU = original.SKU;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.UPC !== undefined) this.UPC = original.UPC;
        if(original.AvgDailyDemand !== undefined) this.AvgDailyDemand = original.AvgDailyDemand;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart1243_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart1243_OrderForecastStatistic_Item_ItemViewModel {
        var reduced = Chart1243_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public SKU:
    any;
public Description:
    any;
public UPC:
    any;
public AvgDailyDemand:
    any;
    public _versionTimestamp?: string;
}

export class Chart1243_OrderForecastStatistic_Warehouse_WarehouseViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Code:
true,Description:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Code"] = true;
            this._members["Description"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Chart1243_OrderForecastStatistic_Warehouse_WarehouseViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart1243_OrderForecastStatistic_Warehouse_WarehouseViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart1243_OrderForecastStatistic_Warehouse_WarehouseViewModel = new Chart1243_OrderForecastStatistic_Warehouse_WarehouseViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart1243_OrderForecastStatistic_Warehouse_WarehouseViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart1243_OrderForecastStatistic_Warehouse_WarehouseViewModel(original: Chart1243_OrderForecastStatistic_Warehouse_WarehouseViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Description !== undefined) this.Description = original.Description;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart1243_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart1243_OrderForecastStatistic_Warehouse_WarehouseViewModel {
        var reduced = Chart1243_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Code:
    any;
public Description:
    any;
    public _versionTimestamp?: string;
}

export class Chart1284_OrderForecastStatisticViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Quantity:
true,RoundQuantity:
true,OrderDate:
true,OrderDateFormatted:
true,Item:
true,Warehouse:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Quantity"] = true;
            this._members["RoundQuantity"] = true;
            this._members["OrderDate"] = true;
            this._members["OrderDateFormatted"] = true;
            this._members["Item"] = true;
            this._members["Warehouse"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.OrderDate != null) instance.OrderDate = new Date(instance.OrderDate);
        if(instance.Item != null)
            instance.Item = Chart1284_OrderForecastStatistic_Item_ItemViewModel._lightCast(instance.Item);
        if(instance.Warehouse != null)
            instance.Warehouse = Chart1284_OrderForecastStatistic_Warehouse_WarehouseViewModel._lightCast(instance.Warehouse);
        return instance;
    }

    public static _initializeFrom(original: Chart1284_OrderForecastStatisticViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart1284_OrderForecastStatisticViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart1284_OrderForecastStatisticViewModel = new Chart1284_OrderForecastStatisticViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart1284_OrderForecastStatisticViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart1284_OrderForecastStatisticViewModel(original: Chart1284_OrderForecastStatisticViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Quantity !== undefined) this.Quantity = original.Quantity;
        if(original.RoundQuantity !== undefined) this.RoundQuantity = original.RoundQuantity;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.OrderDate)) this.OrderDate = new Date(original.OrderDate);
        if(original.OrderDateFormatted !== undefined) this.OrderDateFormatted = original.OrderDateFormatted;

        if(original.Item !== undefined) this.Item = Chart1284_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(original.Item, ignoreReadOnlyProperties, context);

        if(original.Warehouse !== undefined) this.Warehouse = Chart1284_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(original.Warehouse, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart1284_OrderForecastStatisticViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart1284_OrderForecastStatisticViewModel {
        var reduced = Chart1284_OrderForecastStatisticViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Quantity:
    any;
public RoundQuantity:
    any;
public OrderDate:
    any;
public OrderDateFormatted:
    any;
public Item:
    any;
public Warehouse:
    any;
    public _versionTimestamp?: string;
}

export class Chart1284_OrderForecastStatistic_Item_ItemViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
SKU:
true,Description:
true,UPC:
true,AvgDailyDemand:
                true
            }
        } else {
            this._members["SKU"] = true;
            this._members["Description"] = true;
            this._members["UPC"] = true;
            this._members["AvgDailyDemand"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Chart1284_OrderForecastStatistic_Item_ItemViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart1284_OrderForecastStatistic_Item_ItemViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart1284_OrderForecastStatistic_Item_ItemViewModel = new Chart1284_OrderForecastStatistic_Item_ItemViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart1284_OrderForecastStatistic_Item_ItemViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart1284_OrderForecastStatistic_Item_ItemViewModel(original: Chart1284_OrderForecastStatistic_Item_ItemViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.SKU !== undefined) this.SKU = original.SKU;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.UPC !== undefined) this.UPC = original.UPC;
        if(original.AvgDailyDemand !== undefined) this.AvgDailyDemand = original.AvgDailyDemand;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart1284_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart1284_OrderForecastStatistic_Item_ItemViewModel {
        var reduced = Chart1284_OrderForecastStatistic_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public SKU:
    any;
public Description:
    any;
public UPC:
    any;
public AvgDailyDemand:
    any;
    public _versionTimestamp?: string;
}

export class Chart1284_OrderForecastStatistic_Warehouse_WarehouseViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,Code:
true,Description:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["Code"] = true;
            this._members["Description"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Chart1284_OrderForecastStatistic_Warehouse_WarehouseViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Chart1284_OrderForecastStatistic_Warehouse_WarehouseViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Chart1284_OrderForecastStatistic_Warehouse_WarehouseViewModel = new Chart1284_OrderForecastStatistic_Warehouse_WarehouseViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateChart1284_OrderForecastStatistic_Warehouse_WarehouseViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateChart1284_OrderForecastStatistic_Warehouse_WarehouseViewModel(original: Chart1284_OrderForecastStatistic_Warehouse_WarehouseViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Description !== undefined) this.Description = original.Description;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Chart1284_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Chart1284_OrderForecastStatistic_Warehouse_WarehouseViewModel {
        var reduced = Chart1284_OrderForecastStatistic_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public Code:
    any;
public Description:
    any;
    public _versionTimestamp?: string;
}

}
