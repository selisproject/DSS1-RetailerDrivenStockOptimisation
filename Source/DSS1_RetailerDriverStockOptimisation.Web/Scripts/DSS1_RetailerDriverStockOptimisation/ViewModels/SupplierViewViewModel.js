var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
var DSS1_RetailerDriverStockOptimisation;
(function (DSS1_RetailerDriverStockOptimisation) {
    var ViewModels;
    (function (ViewModels) {
        var SupplierView;
        (function (SupplierView) {
            var SupplierViewViewModel = /** @class */ (function (_super) {
                __extends(SupplierViewViewModel, _super);
                function SupplierViewViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            SuppliersInSelectedForecast: true, SelectedForecast: true, ItemsInSelectedForecast: true, ToDate: true, FromDate: true, SelectedSKUs: true, SelectedSKU: true, CollapseLeftColumn: true, CollapseRightColumn: true, Supplier: true, SelectedOrderFDetails: true, Recommendations: true, ShowAlerts: true, ShowRecommendations: true, FilterList: true, Alerts: true, AlertsCount: true, SupplierParameters: true, SupplierReplied: true, RecommendationsCount: true, FlowType: true
                        };
                    }
                    else {
                        _this._members["SuppliersInSelectedForecast"] = true;
                        _this._members["SelectedForecast"] = true;
                        _this._members["ItemsInSelectedForecast"] = true;
                        _this._members["ToDate"] = true;
                        _this._members["FromDate"] = true;
                        _this._members["SelectedSKUs"] = true;
                        _this._members["SelectedSKU"] = true;
                        _this._members["CollapseLeftColumn"] = true;
                        _this._members["CollapseRightColumn"] = true;
                        _this._members["Supplier"] = true;
                        _this._members["SelectedOrderFDetails"] = true;
                        _this._members["Recommendations"] = true;
                        _this._members["ShowAlerts"] = true;
                        _this._members["ShowRecommendations"] = true;
                        _this._members["FilterList"] = true;
                        _this._members["Alerts"] = true;
                        _this._members["AlertsCount"] = true;
                        _this._members["SupplierParameters"] = true;
                        _this._members["SupplierReplied"] = true;
                        _this._members["RecommendationsCount"] = true;
                        _this._members["FlowType"] = true;
                    }
                    _this.SuppliersInSelectedForecast = new Array();
                    _this.ItemsInSelectedForecast = new Array();
                    _this.SelectedSKUs = new Array();
                    _this.SelectedOrderFDetails = new Array();
                    _this.Recommendations = new Array();
                    _this.Alerts = new Array();
                    _this.SupplierParameters = new Array();
                    return _this;
                }
                SupplierViewViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.SuppliersInSelectedForecast != null) {
                        for (var i = 0; i < instance.SuppliersInSelectedForecast.length; i++) {
                            instance.SuppliersInSelectedForecast[i] = SuppliersInSelectedForecast_AgreementViewModel._lightCast(instance.SuppliersInSelectedForecast[i]);
                        }
                    }
                    if (instance.SelectedForecast != null)
                        instance.SelectedForecast = SelectedForecast_OrderForecastViewModel._lightCast(instance.SelectedForecast);
                    if (instance.ItemsInSelectedForecast != null) {
                        for (var i = 0; i < instance.ItemsInSelectedForecast.length; i++) {
                            instance.ItemsInSelectedForecast[i] = ItemsInSelectedForecast_ItemViewModel._lightCast(instance.ItemsInSelectedForecast[i]);
                        }
                    }
                    if (instance.ToDate != null)
                        instance.ToDate = new Date(instance.ToDate);
                    if (instance.FromDate != null)
                        instance.FromDate = new Date(instance.FromDate);
                    if (instance.SelectedSKUs != null) {
                        for (var i = 0; i < instance.SelectedSKUs.length; i++) {
                            instance.SelectedSKUs[i] = SelectedSKUs_ItemViewModel._lightCast(instance.SelectedSKUs[i]);
                        }
                    }
                    if (instance.SelectedSKU != null)
                        instance.SelectedSKU = SelectedSKU_ItemViewModel._lightCast(instance.SelectedSKU);
                    if (instance.Supplier != null)
                        instance.Supplier = Supplier_SupplierViewModel._lightCast(instance.Supplier);
                    if (instance.SelectedOrderFDetails != null) {
                        for (var i = 0; i < instance.SelectedOrderFDetails.length; i++) {
                            instance.SelectedOrderFDetails[i] = SelectedOrderFDetails_OrderForecastDetailsViewModel._lightCast(instance.SelectedOrderFDetails[i]);
                        }
                    }
                    if (instance.Recommendations != null) {
                        for (var i = 0; i < instance.Recommendations.length; i++) {
                            instance.Recommendations[i] = Recommendations_NotificationViewModel._lightCast(instance.Recommendations[i]);
                        }
                    }
                    if (instance.Alerts != null) {
                        for (var i = 0; i < instance.Alerts.length; i++) {
                            instance.Alerts[i] = Alerts_NotificationViewModel._lightCast(instance.Alerts[i]);
                        }
                    }
                    if (instance.SupplierParameters != null) {
                        for (var i = 0; i < instance.SupplierParameters.length; i++) {
                            instance.SupplierParameters[i] = SupplierParameters_SupplierParameterViewModel._lightCast(instance.SupplierParameters[i]);
                        }
                    }
                    return instance;
                };
                SupplierViewViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SupplierViewViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSupplierViewViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SupplierViewViewModel.prototype._hydrateSupplierViewViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.SuppliersInSelectedForecast != null) {
                        for (var i = 0; i < original.SuppliersInSelectedForecast.length; i++) {
                            this.SuppliersInSelectedForecast.push(SuppliersInSelectedForecast_AgreementViewModel._initializeFrom(original.SuppliersInSelectedForecast[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.SelectedForecast !== undefined)
                        this.SelectedForecast = SelectedForecast_OrderForecastViewModel._initializeFrom(original.SelectedForecast, ignoreReadOnlyProperties, context);
                    if (original.ItemsInSelectedForecast != null) {
                        for (var i = 0; i < original.ItemsInSelectedForecast.length; i++) {
                            this.ItemsInSelectedForecast.push(ItemsInSelectedForecast_ItemViewModel._initializeFrom(original.ItemsInSelectedForecast[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.ToDate))
                        this.ToDate = new Date(original.ToDate);
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.FromDate))
                        this.FromDate = new Date(original.FromDate);
                    if (original.SelectedSKUs != null) {
                        for (var i = 0; i < original.SelectedSKUs.length; i++) {
                            this.SelectedSKUs.push(SelectedSKUs_ItemViewModel._initializeFrom(original.SelectedSKUs[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.SelectedSKU !== undefined)
                        this.SelectedSKU = SelectedSKU_ItemViewModel._initializeFrom(original.SelectedSKU, ignoreReadOnlyProperties, context);
                    if (original.CollapseLeftColumn !== undefined)
                        this.CollapseLeftColumn = original.CollapseLeftColumn;
                    if (original.CollapseRightColumn !== undefined)
                        this.CollapseRightColumn = original.CollapseRightColumn;
                    if (original.Supplier !== undefined)
                        this.Supplier = Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);
                    if (original.SelectedOrderFDetails != null) {
                        for (var i = 0; i < original.SelectedOrderFDetails.length; i++) {
                            this.SelectedOrderFDetails.push(SelectedOrderFDetails_OrderForecastDetailsViewModel._initializeFrom(original.SelectedOrderFDetails[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.Recommendations != null) {
                        for (var i = 0; i < original.Recommendations.length; i++) {
                            this.Recommendations.push(Recommendations_NotificationViewModel._initializeFrom(original.Recommendations[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.ShowAlerts !== undefined)
                        this.ShowAlerts = original.ShowAlerts;
                    if (original.ShowRecommendations !== undefined)
                        this.ShowRecommendations = original.ShowRecommendations;
                    if (original.FilterList !== undefined)
                        this.FilterList = original.FilterList;
                    if (original.Alerts != null) {
                        for (var i = 0; i < original.Alerts.length; i++) {
                            this.Alerts.push(Alerts_NotificationViewModel._initializeFrom(original.Alerts[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.AlertsCount !== undefined)
                        this.AlertsCount = original.AlertsCount;
                    if (original.SupplierParameters != null) {
                        for (var i = 0; i < original.SupplierParameters.length; i++) {
                            this.SupplierParameters.push(SupplierParameters_SupplierParameterViewModel._initializeFrom(original.SupplierParameters[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.SupplierReplied !== undefined)
                        this.SupplierReplied = original.SupplierReplied;
                    if (original.RecommendationsCount !== undefined)
                        this.RecommendationsCount = original.RecommendationsCount;
                    if (original.FlowType !== undefined)
                        this.FlowType = original.FlowType;
                    if (original.ddlSKUs__InitialSelection !== undefined)
                        this.ddlSKUs__InitialSelection = original.ddlSKUs__InitialSelection;
                    this.listWarehousesSelectedItemKeys = original.listWarehousesSelectedItemKeys;
                    this.listSKUsSelectedItemKeys = original.listSKUsSelectedItemKeys;
                    this.ddlSKUsSelectedItemKeys = original.ddlSKUsSelectedItemKeys;
                    this.DropdownBoxSelectedItemKeys = original.DropdownBoxSelectedItemKeys;
                    this.lstOrderForecastsSelectedItemKeys = original.lstOrderForecastsSelectedItemKeys;
                    this.chartOrderForecastSelectedItemKeys = original.chartOrderForecastSelectedItemKeys;
                    this.chartStockLevelsSelectedItemKeys = original.chartStockLevelsSelectedItemKeys;
                    this.OptionButtonSelectedItemKeys = original.OptionButtonSelectedItemKeys;
                    this.listOrderForecastDetailsSelectedItemKeys = original.listOrderForecastDetailsSelectedItemKeys;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SupplierViewViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        SupplierViewViewModel._deleteDropDownInitialValues(reduced);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SupplierViewViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SupplierViewViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    SupplierViewViewModel._deleteDropDownInitialValues(reduced);
                    return reduced;
                };
                SupplierViewViewModel._deleteDropDownInitialValues = function (reduced) {
                    if (reduced == null)
                        return;
                    delete reduced.ddlSKUs__InitialSelection;
                    DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
                };
                SupplierViewViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SupplierViewViewModel;
            }(DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel));
            SupplierView.SupplierViewViewModel = SupplierViewViewModel;
            var SuppliersInSelectedForecast_AgreementViewModel = /** @class */ (function (_super) {
                __extends(SuppliersInSelectedForecast_AgreementViewModel, _super);
                function SuppliersInSelectedForecast_AgreementViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, TargetInventoryDays: true, Supplier: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["TargetInventoryDays"] = true;
                        _this._members["Supplier"] = true;
                    }
                    return _this;
                }
                SuppliersInSelectedForecast_AgreementViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Supplier != null)
                        instance.Supplier = SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel._lightCast(instance.Supplier);
                    return instance;
                };
                SuppliersInSelectedForecast_AgreementViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SuppliersInSelectedForecast_AgreementViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSuppliersInSelectedForecast_AgreementViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SuppliersInSelectedForecast_AgreementViewModel.prototype._hydrateSuppliersInSelectedForecast_AgreementViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.TargetInventoryDays !== undefined)
                        this.TargetInventoryDays = original.TargetInventoryDays;
                    if (original.Supplier !== undefined)
                        this.Supplier = SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SuppliersInSelectedForecast_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SuppliersInSelectedForecast_AgreementViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SuppliersInSelectedForecast_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SuppliersInSelectedForecast_AgreementViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SuppliersInSelectedForecast_AgreementViewModel;
            }(BaseClass.ViewModel));
            SupplierView.SuppliersInSelectedForecast_AgreementViewModel = SuppliersInSelectedForecast_AgreementViewModel;
            var SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel = /** @class */ (function (_super) {
                __extends(SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel, _super);
                function SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, Name: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["Name"] = true;
                    }
                    return _this;
                }
                SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel.prototype._hydrateSuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel;
            }(BaseClass.ViewModel));
            SupplierView.SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel = SuppliersInSelectedForecast_Agreement_Supplier_SupplierViewModel;
            var SelectedForecast_OrderForecastViewModel = /** @class */ (function (_super) {
                __extends(SelectedForecast_OrderForecastViewModel, _super);
                function SelectedForecast_OrderForecastViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            CreatedBy: true, CreatedOn: true, EndDate: true, Id: true, StartDate: true, State: true, Status: true
                        };
                    }
                    else {
                        _this._members["CreatedBy"] = true;
                        _this._members["CreatedOn"] = true;
                        _this._members["EndDate"] = true;
                        _this._members["Id"] = true;
                        _this._members["StartDate"] = true;
                        _this._members["State"] = true;
                        _this._members["Status"] = true;
                    }
                    return _this;
                }
                SelectedForecast_OrderForecastViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.CreatedOn != null)
                        instance.CreatedOn = new Date(instance.CreatedOn);
                    if (instance.EndDate != null)
                        instance.EndDate = new Date(instance.EndDate);
                    if (instance.StartDate != null)
                        instance.StartDate = new Date(instance.StartDate);
                    return instance;
                };
                SelectedForecast_OrderForecastViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SelectedForecast_OrderForecastViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSelectedForecast_OrderForecastViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SelectedForecast_OrderForecastViewModel.prototype._hydrateSelectedForecast_OrderForecastViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.CreatedBy !== undefined)
                        this.CreatedBy = original.CreatedBy;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.CreatedOn))
                        this.CreatedOn = new Date(original.CreatedOn);
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.EndDate))
                        this.EndDate = new Date(original.EndDate);
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.StartDate))
                        this.StartDate = new Date(original.StartDate);
                    if (original.State !== undefined)
                        this.State = original.State;
                    if (original.Status !== undefined)
                        this.Status = original.Status;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SelectedForecast_OrderForecastViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SelectedForecast_OrderForecastViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SelectedForecast_OrderForecastViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SelectedForecast_OrderForecastViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SelectedForecast_OrderForecastViewModel;
            }(BaseClass.ViewModel));
            SupplierView.SelectedForecast_OrderForecastViewModel = SelectedForecast_OrderForecastViewModel;
            var ItemsInSelectedForecast_ItemViewModel = /** @class */ (function (_super) {
                __extends(ItemsInSelectedForecast_ItemViewModel, _super);
                function ItemsInSelectedForecast_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            CoverageDays: true, Description: true, InnerPackSize: true, PalHI: true, PalletSize: true, PalletType: true, PalTI: true, SKU: true, SupplierPackSize: true, UOM: true
                        };
                    }
                    else {
                        _this._members["CoverageDays"] = true;
                        _this._members["Description"] = true;
                        _this._members["InnerPackSize"] = true;
                        _this._members["PalHI"] = true;
                        _this._members["PalletSize"] = true;
                        _this._members["PalletType"] = true;
                        _this._members["PalTI"] = true;
                        _this._members["SKU"] = true;
                        _this._members["SupplierPackSize"] = true;
                        _this._members["UOM"] = true;
                    }
                    return _this;
                }
                ItemsInSelectedForecast_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                ItemsInSelectedForecast_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ItemsInSelectedForecast_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItemsInSelectedForecast_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ItemsInSelectedForecast_ItemViewModel.prototype._hydrateItemsInSelectedForecast_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.CoverageDays !== undefined)
                        this.CoverageDays = original.CoverageDays;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.InnerPackSize !== undefined)
                        this.InnerPackSize = original.InnerPackSize;
                    if (original.PalHI !== undefined)
                        this.PalHI = original.PalHI;
                    if (original.PalletSize !== undefined)
                        this.PalletSize = original.PalletSize;
                    if (original.PalletType !== undefined)
                        this.PalletType = original.PalletType;
                    if (original.PalTI !== undefined)
                        this.PalTI = original.PalTI;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.SupplierPackSize !== undefined)
                        this.SupplierPackSize = original.SupplierPackSize;
                    if (original.UOM !== undefined)
                        this.UOM = original.UOM;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ItemsInSelectedForecast_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ItemsInSelectedForecast_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ItemsInSelectedForecast_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ItemsInSelectedForecast_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ItemsInSelectedForecast_ItemViewModel;
            }(BaseClass.ViewModel));
            SupplierView.ItemsInSelectedForecast_ItemViewModel = ItemsInSelectedForecast_ItemViewModel;
            var SelectedSKUs_ItemViewModel = /** @class */ (function (_super) {
                __extends(SelectedSKUs_ItemViewModel, _super);
                function SelectedSKUs_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            InnerPackSize: true, PalHI: true, PalletSize: true, PalletType: true, PalTI: true, SKU: true, SupplierPackSize: true, UOM: true
                        };
                    }
                    else {
                        _this._members["InnerPackSize"] = true;
                        _this._members["PalHI"] = true;
                        _this._members["PalletSize"] = true;
                        _this._members["PalletType"] = true;
                        _this._members["PalTI"] = true;
                        _this._members["SKU"] = true;
                        _this._members["SupplierPackSize"] = true;
                        _this._members["UOM"] = true;
                    }
                    return _this;
                }
                SelectedSKUs_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                SelectedSKUs_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SelectedSKUs_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSelectedSKUs_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SelectedSKUs_ItemViewModel.prototype._hydrateSelectedSKUs_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.InnerPackSize !== undefined)
                        this.InnerPackSize = original.InnerPackSize;
                    if (original.PalHI !== undefined)
                        this.PalHI = original.PalHI;
                    if (original.PalletSize !== undefined)
                        this.PalletSize = original.PalletSize;
                    if (original.PalletType !== undefined)
                        this.PalletType = original.PalletType;
                    if (original.PalTI !== undefined)
                        this.PalTI = original.PalTI;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.SupplierPackSize !== undefined)
                        this.SupplierPackSize = original.SupplierPackSize;
                    if (original.UOM !== undefined)
                        this.UOM = original.UOM;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SelectedSKUs_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SelectedSKUs_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SelectedSKUs_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SelectedSKUs_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SelectedSKUs_ItemViewModel;
            }(BaseClass.ViewModel));
            SupplierView.SelectedSKUs_ItemViewModel = SelectedSKUs_ItemViewModel;
            var SelectedSKU_ItemViewModel = /** @class */ (function (_super) {
                __extends(SelectedSKU_ItemViewModel, _super);
                function SelectedSKU_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            InnerPackSize: true, PalHI: true, PalletSize: true, PalletType: true, PalTI: true, SKU: true, SupplierPackSize: true, UOM: true
                        };
                    }
                    else {
                        _this._members["InnerPackSize"] = true;
                        _this._members["PalHI"] = true;
                        _this._members["PalletSize"] = true;
                        _this._members["PalletType"] = true;
                        _this._members["PalTI"] = true;
                        _this._members["SKU"] = true;
                        _this._members["SupplierPackSize"] = true;
                        _this._members["UOM"] = true;
                    }
                    return _this;
                }
                SelectedSKU_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                SelectedSKU_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SelectedSKU_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSelectedSKU_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SelectedSKU_ItemViewModel.prototype._hydrateSelectedSKU_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.InnerPackSize !== undefined)
                        this.InnerPackSize = original.InnerPackSize;
                    if (original.PalHI !== undefined)
                        this.PalHI = original.PalHI;
                    if (original.PalletSize !== undefined)
                        this.PalletSize = original.PalletSize;
                    if (original.PalletType !== undefined)
                        this.PalletType = original.PalletType;
                    if (original.PalTI !== undefined)
                        this.PalTI = original.PalTI;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.SupplierPackSize !== undefined)
                        this.SupplierPackSize = original.SupplierPackSize;
                    if (original.UOM !== undefined)
                        this.UOM = original.UOM;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SelectedSKU_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SelectedSKU_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SelectedSKU_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SelectedSKU_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SelectedSKU_ItemViewModel;
            }(BaseClass.ViewModel));
            SupplierView.SelectedSKU_ItemViewModel = SelectedSKU_ItemViewModel;
            var Supplier_SupplierViewModel = /** @class */ (function (_super) {
                __extends(Supplier_SupplierViewModel, _super);
                function Supplier_SupplierViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Code: true, Id: true, Name: true, BusinessUnit: true, Contacts: true
                        };
                    }
                    else {
                        _this._members["Code"] = true;
                        _this._members["Id"] = true;
                        _this._members["Name"] = true;
                        _this._members["BusinessUnit"] = true;
                        _this._members["Contacts"] = true;
                    }
                    _this.Contacts = new Array();
                    return _this;
                }
                Supplier_SupplierViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.BusinessUnit != null)
                        instance.BusinessUnit = Supplier_Supplier_BusinessUnit_BusinessUnitViewModel._lightCast(instance.BusinessUnit);
                    if (instance.Contacts != null) {
                        for (var i = 0; i < instance.Contacts.length; i++) {
                            instance.Contacts[i] = Supplier_Supplier_Contacts_ContactViewModel._lightCast(instance.Contacts[i]);
                        }
                    }
                    return instance;
                };
                Supplier_SupplierViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Supplier_SupplierViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSupplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Supplier_SupplierViewModel.prototype._hydrateSupplier_SupplierViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Code !== undefined)
                        this.Code = original.Code;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    if (original.BusinessUnit !== undefined)
                        this.BusinessUnit = Supplier_Supplier_BusinessUnit_BusinessUnitViewModel._initializeFrom(original.BusinessUnit, ignoreReadOnlyProperties, context);
                    if (original.Contacts != null) {
                        for (var i = 0; i < original.Contacts.length; i++) {
                            this.Contacts.push(Supplier_Supplier_Contacts_ContactViewModel._initializeFrom(original.Contacts[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Supplier_SupplierViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Supplier_SupplierViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Supplier_SupplierViewModel;
            }(BaseClass.ViewModel));
            SupplierView.Supplier_SupplierViewModel = Supplier_SupplierViewModel;
            var Supplier_Supplier_BusinessUnit_BusinessUnitViewModel = /** @class */ (function (_super) {
                __extends(Supplier_Supplier_BusinessUnit_BusinessUnitViewModel, _super);
                function Supplier_Supplier_BusinessUnit_BusinessUnitViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, Id: true, Number: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["Id"] = true;
                        _this._members["Number"] = true;
                    }
                    return _this;
                }
                Supplier_Supplier_BusinessUnit_BusinessUnitViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Supplier_Supplier_BusinessUnit_BusinessUnitViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Supplier_Supplier_BusinessUnit_BusinessUnitViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSupplier_Supplier_BusinessUnit_BusinessUnitViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Supplier_Supplier_BusinessUnit_BusinessUnitViewModel.prototype._hydrateSupplier_Supplier_BusinessUnit_BusinessUnitViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Number !== undefined)
                        this.Number = original.Number;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Supplier_Supplier_BusinessUnit_BusinessUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Supplier_Supplier_BusinessUnit_BusinessUnitViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Supplier_Supplier_BusinessUnit_BusinessUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Supplier_Supplier_BusinessUnit_BusinessUnitViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Supplier_Supplier_BusinessUnit_BusinessUnitViewModel;
            }(BaseClass.ViewModel));
            SupplierView.Supplier_Supplier_BusinessUnit_BusinessUnitViewModel = Supplier_Supplier_BusinessUnit_BusinessUnitViewModel;
            var Supplier_Supplier_Contacts_ContactViewModel = /** @class */ (function (_super) {
                __extends(Supplier_Supplier_Contacts_ContactViewModel, _super);
                function Supplier_Supplier_Contacts_ContactViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AccessFailedCount: true, Email: true, EmailConfirmed: true, Id: true, LockoutEnabled: true, LockoutEndDate: true, Name: true, PhoneNumber: true, PhoneNumberConfirmed: true, TwoFactorEnabled: true, UserName: true
                        };
                    }
                    else {
                        _this._members["AccessFailedCount"] = true;
                        _this._members["Email"] = true;
                        _this._members["EmailConfirmed"] = true;
                        _this._members["Id"] = true;
                        _this._members["LockoutEnabled"] = true;
                        _this._members["LockoutEndDate"] = true;
                        _this._members["Name"] = true;
                        _this._members["PhoneNumber"] = true;
                        _this._members["PhoneNumberConfirmed"] = true;
                        _this._members["TwoFactorEnabled"] = true;
                        _this._members["UserName"] = true;
                    }
                    return _this;
                }
                Supplier_Supplier_Contacts_ContactViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.LockoutEndDate != null)
                        instance.LockoutEndDate = new Date(instance.LockoutEndDate);
                    return instance;
                };
                Supplier_Supplier_Contacts_ContactViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Supplier_Supplier_Contacts_ContactViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSupplier_Supplier_Contacts_ContactViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Supplier_Supplier_Contacts_ContactViewModel.prototype._hydrateSupplier_Supplier_Contacts_ContactViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.AccessFailedCount !== undefined)
                        this.AccessFailedCount = original.AccessFailedCount;
                    if (original.Email !== undefined)
                        this.Email = original.Email;
                    if (original.EmailConfirmed !== undefined)
                        this.EmailConfirmed = original.EmailConfirmed;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.LockoutEnabled !== undefined)
                        this.LockoutEnabled = original.LockoutEnabled;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.LockoutEndDate))
                        this.LockoutEndDate = new Date(original.LockoutEndDate);
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    if (original.PhoneNumber !== undefined)
                        this.PhoneNumber = original.PhoneNumber;
                    if (original.PhoneNumberConfirmed !== undefined)
                        this.PhoneNumberConfirmed = original.PhoneNumberConfirmed;
                    if (original.TwoFactorEnabled !== undefined)
                        this.TwoFactorEnabled = original.TwoFactorEnabled;
                    if (original.UserName !== undefined)
                        this.UserName = original.UserName;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Supplier_Supplier_Contacts_ContactViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Supplier_Supplier_Contacts_ContactViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Supplier_Supplier_Contacts_ContactViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Supplier_Supplier_Contacts_ContactViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Supplier_Supplier_Contacts_ContactViewModel;
            }(BaseClass.ViewModel));
            SupplierView.Supplier_Supplier_Contacts_ContactViewModel = Supplier_Supplier_Contacts_ContactViewModel;
            var SelectedOrderFDetails_OrderForecastDetailsViewModel = /** @class */ (function (_super) {
                __extends(SelectedOrderFDetails_OrderForecastDetailsViewModel, _super);
                function SelectedOrderFDetails_OrderForecastDetailsViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AutomatedForecast: true, CreatedOn: true, Id: true, InitialStockLevel: true, ItemCoverageDays: true, OrderInventoryDays: true, Quantity: true, RecommendedOrderDate: true, ReplenishmentCycle: true, RoundQuantity: true, SalesForecastDate: true, Status: true, SupplierAvailableQuantity: true, SupplierCanDeliver: true, SupplierCoverageDays: true, SupplierMaxQuantity: true, SupplierSharesStock: true, Warehouse: true, Item: true, OrderForecast: true, Notification: true
                        };
                    }
                    else {
                        _this._members["AutomatedForecast"] = true;
                        _this._members["CreatedOn"] = true;
                        _this._members["Id"] = true;
                        _this._members["InitialStockLevel"] = true;
                        _this._members["ItemCoverageDays"] = true;
                        _this._members["OrderInventoryDays"] = true;
                        _this._members["Quantity"] = true;
                        _this._members["RecommendedOrderDate"] = true;
                        _this._members["ReplenishmentCycle"] = true;
                        _this._members["RoundQuantity"] = true;
                        _this._members["SalesForecastDate"] = true;
                        _this._members["Status"] = true;
                        _this._members["SupplierAvailableQuantity"] = true;
                        _this._members["SupplierCanDeliver"] = true;
                        _this._members["SupplierCoverageDays"] = true;
                        _this._members["SupplierMaxQuantity"] = true;
                        _this._members["SupplierSharesStock"] = true;
                        _this._members["Warehouse"] = true;
                        _this._members["Item"] = true;
                        _this._members["OrderForecast"] = true;
                        _this._members["Notification"] = true;
                    }
                    return _this;
                }
                SelectedOrderFDetails_OrderForecastDetailsViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.CreatedOn != null)
                        instance.CreatedOn = new Date(instance.CreatedOn);
                    if (instance.RecommendedOrderDate != null)
                        instance.RecommendedOrderDate = new Date(instance.RecommendedOrderDate);
                    if (instance.SalesForecastDate != null)
                        instance.SalesForecastDate = new Date(instance.SalesForecastDate);
                    if (instance.Warehouse != null)
                        instance.Warehouse = SelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel._lightCast(instance.Warehouse);
                    if (instance.Item != null)
                        instance.Item = SelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel._lightCast(instance.Item);
                    if (instance.OrderForecast != null)
                        instance.OrderForecast = SelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel._lightCast(instance.OrderForecast);
                    if (instance.Notification != null)
                        instance.Notification = SelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel._lightCast(instance.Notification);
                    return instance;
                };
                SelectedOrderFDetails_OrderForecastDetailsViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SelectedOrderFDetails_OrderForecastDetailsViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSelectedOrderFDetails_OrderForecastDetailsViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SelectedOrderFDetails_OrderForecastDetailsViewModel.prototype._hydrateSelectedOrderFDetails_OrderForecastDetailsViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.AutomatedForecast !== undefined)
                        this.AutomatedForecast = original.AutomatedForecast;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.CreatedOn))
                        this.CreatedOn = new Date(original.CreatedOn);
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.InitialStockLevel !== undefined)
                        this.InitialStockLevel = original.InitialStockLevel;
                    if (original.ItemCoverageDays !== undefined)
                        this.ItemCoverageDays = original.ItemCoverageDays;
                    if (original.OrderInventoryDays !== undefined)
                        this.OrderInventoryDays = original.OrderInventoryDays;
                    if (original.Quantity !== undefined)
                        this.Quantity = original.Quantity;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.RecommendedOrderDate))
                        this.RecommendedOrderDate = new Date(original.RecommendedOrderDate);
                    if (original.ReplenishmentCycle !== undefined)
                        this.ReplenishmentCycle = original.ReplenishmentCycle;
                    if (original.RoundQuantity !== undefined)
                        this.RoundQuantity = original.RoundQuantity;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.SalesForecastDate))
                        this.SalesForecastDate = new Date(original.SalesForecastDate);
                    if (original.Status !== undefined)
                        this.Status = original.Status;
                    if (original.SupplierAvailableQuantity !== undefined)
                        this.SupplierAvailableQuantity = original.SupplierAvailableQuantity;
                    if (original.SupplierCanDeliver !== undefined)
                        this.SupplierCanDeliver = original.SupplierCanDeliver;
                    if (original.SupplierCoverageDays !== undefined)
                        this.SupplierCoverageDays = original.SupplierCoverageDays;
                    if (original.SupplierMaxQuantity !== undefined)
                        this.SupplierMaxQuantity = original.SupplierMaxQuantity;
                    if (original.SupplierSharesStock !== undefined)
                        this.SupplierSharesStock = original.SupplierSharesStock;
                    if (original.Warehouse !== undefined)
                        this.Warehouse = SelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel._initializeFrom(original.Warehouse, ignoreReadOnlyProperties, context);
                    if (original.Item !== undefined)
                        this.Item = SelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel._initializeFrom(original.Item, ignoreReadOnlyProperties, context);
                    if (original.OrderForecast !== undefined)
                        this.OrderForecast = SelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel._initializeFrom(original.OrderForecast, ignoreReadOnlyProperties, context);
                    if (original.Notification !== undefined)
                        this.Notification = SelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel._initializeFrom(original.Notification, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SelectedOrderFDetails_OrderForecastDetailsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SelectedOrderFDetails_OrderForecastDetailsViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SelectedOrderFDetails_OrderForecastDetailsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SelectedOrderFDetails_OrderForecastDetailsViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SelectedOrderFDetails_OrderForecastDetailsViewModel;
            }(BaseClass.ViewModel));
            SupplierView.SelectedOrderFDetails_OrderForecastDetailsViewModel = SelectedOrderFDetails_OrderForecastDetailsViewModel;
            var SelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel = /** @class */ (function (_super) {
                __extends(SelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel, _super);
                function SelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Code: true, Description: true, FlowType: true, Id: true
                        };
                    }
                    else {
                        _this._members["Code"] = true;
                        _this._members["Description"] = true;
                        _this._members["FlowType"] = true;
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                SelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                SelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel.prototype._hydrateSelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Code !== undefined)
                        this.Code = original.Code;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.FlowType !== undefined)
                        this.FlowType = original.FlowType;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel;
            }(BaseClass.ViewModel));
            SupplierView.SelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel = SelectedOrderFDetails_OrderForecastDetails_Warehouse_WarehouseViewModel;
            var SelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel = /** @class */ (function (_super) {
                __extends(SelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel, _super);
                function SelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AvgDailyDemand: true, CoverageDays: true, Description: true, InnerPackSize: true, PalHI: true, PalletSize: true, PalletType: true, PalTI: true, SKU: true, SupplierPackSize: true, UOM: true, UPC: true
                        };
                    }
                    else {
                        _this._members["AvgDailyDemand"] = true;
                        _this._members["CoverageDays"] = true;
                        _this._members["Description"] = true;
                        _this._members["InnerPackSize"] = true;
                        _this._members["PalHI"] = true;
                        _this._members["PalletSize"] = true;
                        _this._members["PalletType"] = true;
                        _this._members["PalTI"] = true;
                        _this._members["SKU"] = true;
                        _this._members["SupplierPackSize"] = true;
                        _this._members["UOM"] = true;
                        _this._members["UPC"] = true;
                    }
                    return _this;
                }
                SelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                SelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel.prototype._hydrateSelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.AvgDailyDemand !== undefined)
                        this.AvgDailyDemand = original.AvgDailyDemand;
                    if (original.CoverageDays !== undefined)
                        this.CoverageDays = original.CoverageDays;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.InnerPackSize !== undefined)
                        this.InnerPackSize = original.InnerPackSize;
                    if (original.PalHI !== undefined)
                        this.PalHI = original.PalHI;
                    if (original.PalletSize !== undefined)
                        this.PalletSize = original.PalletSize;
                    if (original.PalletType !== undefined)
                        this.PalletType = original.PalletType;
                    if (original.PalTI !== undefined)
                        this.PalTI = original.PalTI;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.SupplierPackSize !== undefined)
                        this.SupplierPackSize = original.SupplierPackSize;
                    if (original.UOM !== undefined)
                        this.UOM = original.UOM;
                    if (original.UPC !== undefined)
                        this.UPC = original.UPC;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel;
            }(BaseClass.ViewModel));
            SupplierView.SelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel = SelectedOrderFDetails_OrderForecastDetails_Item_ItemViewModel;
            var SelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel = /** @class */ (function (_super) {
                __extends(SelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel, _super);
                function SelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            CreatedBy: true, CreatedOn: true, EndDate: true, Id: true, ImportId: true, StartDate: true, State: true, Status: true
                        };
                    }
                    else {
                        _this._members["CreatedBy"] = true;
                        _this._members["CreatedOn"] = true;
                        _this._members["EndDate"] = true;
                        _this._members["Id"] = true;
                        _this._members["ImportId"] = true;
                        _this._members["StartDate"] = true;
                        _this._members["State"] = true;
                        _this._members["Status"] = true;
                    }
                    return _this;
                }
                SelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.CreatedOn != null)
                        instance.CreatedOn = new Date(instance.CreatedOn);
                    if (instance.EndDate != null)
                        instance.EndDate = new Date(instance.EndDate);
                    if (instance.StartDate != null)
                        instance.StartDate = new Date(instance.StartDate);
                    return instance;
                };
                SelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel.prototype._hydrateSelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.CreatedBy !== undefined)
                        this.CreatedBy = original.CreatedBy;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.CreatedOn))
                        this.CreatedOn = new Date(original.CreatedOn);
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.EndDate))
                        this.EndDate = new Date(original.EndDate);
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.ImportId !== undefined)
                        this.ImportId = original.ImportId;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.StartDate))
                        this.StartDate = new Date(original.StartDate);
                    if (original.State !== undefined)
                        this.State = original.State;
                    if (original.Status !== undefined)
                        this.Status = original.Status;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel;
            }(BaseClass.ViewModel));
            SupplierView.SelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel = SelectedOrderFDetails_OrderForecastDetails_OrderForecast_OrderForecastViewModel;
            var SelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel = /** @class */ (function (_super) {
                __extends(SelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel, _super);
                function SelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            CreatedBy: true, Diff: true, Id: true, Message: true, OrderForecastQuantity: true, SalesForecastDate: true, TotalSupplierStock: true
                        };
                    }
                    else {
                        _this._members["CreatedBy"] = true;
                        _this._members["Diff"] = true;
                        _this._members["Id"] = true;
                        _this._members["Message"] = true;
                        _this._members["OrderForecastQuantity"] = true;
                        _this._members["SalesForecastDate"] = true;
                        _this._members["TotalSupplierStock"] = true;
                    }
                    return _this;
                }
                SelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.SalesForecastDate != null)
                        instance.SalesForecastDate = new Date(instance.SalesForecastDate);
                    return instance;
                };
                SelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel.prototype._hydrateSelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.CreatedBy !== undefined)
                        this.CreatedBy = original.CreatedBy;
                    if (original.Diff !== undefined)
                        this.Diff = original.Diff;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Message !== undefined)
                        this.Message = original.Message;
                    if (original.OrderForecastQuantity !== undefined)
                        this.OrderForecastQuantity = original.OrderForecastQuantity;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.SalesForecastDate))
                        this.SalesForecastDate = new Date(original.SalesForecastDate);
                    if (original.TotalSupplierStock !== undefined)
                        this.TotalSupplierStock = original.TotalSupplierStock;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel;
            }(BaseClass.ViewModel));
            SupplierView.SelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel = SelectedOrderFDetails_OrderForecastDetails_Notification_NotificationViewModel;
            var Recommendations_NotificationViewModel = /** @class */ (function (_super) {
                __extends(Recommendations_NotificationViewModel, _super);
                function Recommendations_NotificationViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            CreatedBy: true, Diff: true, Id: true, Message: true, OrderForecastQuantity: true, SalesForecastDate: true, TotalSupplierStock: true, OrderForecastDetails: true, Item: true, Warehouse: true
                        };
                    }
                    else {
                        _this._members["CreatedBy"] = true;
                        _this._members["Diff"] = true;
                        _this._members["Id"] = true;
                        _this._members["Message"] = true;
                        _this._members["OrderForecastQuantity"] = true;
                        _this._members["SalesForecastDate"] = true;
                        _this._members["TotalSupplierStock"] = true;
                        _this._members["OrderForecastDetails"] = true;
                        _this._members["Item"] = true;
                        _this._members["Warehouse"] = true;
                    }
                    return _this;
                }
                Recommendations_NotificationViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.SalesForecastDate != null)
                        instance.SalesForecastDate = new Date(instance.SalesForecastDate);
                    if (instance.OrderForecastDetails != null)
                        instance.OrderForecastDetails = Recommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel._lightCast(instance.OrderForecastDetails);
                    if (instance.Item != null)
                        instance.Item = Recommendations_Notification_Item_ItemViewModel._lightCast(instance.Item);
                    if (instance.Warehouse != null)
                        instance.Warehouse = Recommendations_Notification_Warehouse_WarehouseViewModel._lightCast(instance.Warehouse);
                    return instance;
                };
                Recommendations_NotificationViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Recommendations_NotificationViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateRecommendations_NotificationViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Recommendations_NotificationViewModel.prototype._hydrateRecommendations_NotificationViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.CreatedBy !== undefined)
                        this.CreatedBy = original.CreatedBy;
                    if (original.Diff !== undefined)
                        this.Diff = original.Diff;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Message !== undefined)
                        this.Message = original.Message;
                    if (original.OrderForecastQuantity !== undefined)
                        this.OrderForecastQuantity = original.OrderForecastQuantity;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.SalesForecastDate))
                        this.SalesForecastDate = new Date(original.SalesForecastDate);
                    if (original.TotalSupplierStock !== undefined)
                        this.TotalSupplierStock = original.TotalSupplierStock;
                    if (original.OrderForecastDetails !== undefined)
                        this.OrderForecastDetails = Recommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel._initializeFrom(original.OrderForecastDetails, ignoreReadOnlyProperties, context);
                    if (original.Item !== undefined)
                        this.Item = Recommendations_Notification_Item_ItemViewModel._initializeFrom(original.Item, ignoreReadOnlyProperties, context);
                    if (original.Warehouse !== undefined)
                        this.Warehouse = Recommendations_Notification_Warehouse_WarehouseViewModel._initializeFrom(original.Warehouse, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Recommendations_NotificationViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Recommendations_NotificationViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Recommendations_NotificationViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Recommendations_NotificationViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Recommendations_NotificationViewModel;
            }(BaseClass.ViewModel));
            SupplierView.Recommendations_NotificationViewModel = Recommendations_NotificationViewModel;
            var Recommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel = /** @class */ (function (_super) {
                __extends(Recommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel, _super);
                function Recommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AutomatedForecast: true, CreatedOn: true, Id: true, InitialStockLevel: true, ItemCoverageDays: true, OrderInventoryDays: true, Quantity: true, RecommendedOrderDate: true, ReplenishmentCycle: true, RoundQuantity: true, SalesForecastDate: true, Status: true, SupplierAvailableQuantity: true, SupplierCanDeliver: true, SupplierCoverageDays: true, SupplierMaxQuantity: true, SupplierSharesStock: true
                        };
                    }
                    else {
                        _this._members["AutomatedForecast"] = true;
                        _this._members["CreatedOn"] = true;
                        _this._members["Id"] = true;
                        _this._members["InitialStockLevel"] = true;
                        _this._members["ItemCoverageDays"] = true;
                        _this._members["OrderInventoryDays"] = true;
                        _this._members["Quantity"] = true;
                        _this._members["RecommendedOrderDate"] = true;
                        _this._members["ReplenishmentCycle"] = true;
                        _this._members["RoundQuantity"] = true;
                        _this._members["SalesForecastDate"] = true;
                        _this._members["Status"] = true;
                        _this._members["SupplierAvailableQuantity"] = true;
                        _this._members["SupplierCanDeliver"] = true;
                        _this._members["SupplierCoverageDays"] = true;
                        _this._members["SupplierMaxQuantity"] = true;
                        _this._members["SupplierSharesStock"] = true;
                    }
                    return _this;
                }
                Recommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.CreatedOn != null)
                        instance.CreatedOn = new Date(instance.CreatedOn);
                    if (instance.RecommendedOrderDate != null)
                        instance.RecommendedOrderDate = new Date(instance.RecommendedOrderDate);
                    if (instance.SalesForecastDate != null)
                        instance.SalesForecastDate = new Date(instance.SalesForecastDate);
                    return instance;
                };
                Recommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Recommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateRecommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Recommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel.prototype._hydrateRecommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.AutomatedForecast !== undefined)
                        this.AutomatedForecast = original.AutomatedForecast;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.CreatedOn))
                        this.CreatedOn = new Date(original.CreatedOn);
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.InitialStockLevel !== undefined)
                        this.InitialStockLevel = original.InitialStockLevel;
                    if (original.ItemCoverageDays !== undefined)
                        this.ItemCoverageDays = original.ItemCoverageDays;
                    if (original.OrderInventoryDays !== undefined)
                        this.OrderInventoryDays = original.OrderInventoryDays;
                    if (original.Quantity !== undefined)
                        this.Quantity = original.Quantity;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.RecommendedOrderDate))
                        this.RecommendedOrderDate = new Date(original.RecommendedOrderDate);
                    if (original.ReplenishmentCycle !== undefined)
                        this.ReplenishmentCycle = original.ReplenishmentCycle;
                    if (original.RoundQuantity !== undefined)
                        this.RoundQuantity = original.RoundQuantity;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.SalesForecastDate))
                        this.SalesForecastDate = new Date(original.SalesForecastDate);
                    if (original.Status !== undefined)
                        this.Status = original.Status;
                    if (original.SupplierAvailableQuantity !== undefined)
                        this.SupplierAvailableQuantity = original.SupplierAvailableQuantity;
                    if (original.SupplierCanDeliver !== undefined)
                        this.SupplierCanDeliver = original.SupplierCanDeliver;
                    if (original.SupplierCoverageDays !== undefined)
                        this.SupplierCoverageDays = original.SupplierCoverageDays;
                    if (original.SupplierMaxQuantity !== undefined)
                        this.SupplierMaxQuantity = original.SupplierMaxQuantity;
                    if (original.SupplierSharesStock !== undefined)
                        this.SupplierSharesStock = original.SupplierSharesStock;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Recommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Recommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Recommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Recommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Recommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel;
            }(BaseClass.ViewModel));
            SupplierView.Recommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel = Recommendations_Notification_OrderForecastDetails_OrderForecastDetailsViewModel;
            var Recommendations_Notification_Item_ItemViewModel = /** @class */ (function (_super) {
                __extends(Recommendations_Notification_Item_ItemViewModel, _super);
                function Recommendations_Notification_Item_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AvgDailyDemand: true, CoverageDays: true, Description: true, InnerPackSize: true, PalHI: true, PalletSize: true, PalletType: true, PalTI: true, SKU: true, SupplierPackSize: true, UOM: true, UPC: true
                        };
                    }
                    else {
                        _this._members["AvgDailyDemand"] = true;
                        _this._members["CoverageDays"] = true;
                        _this._members["Description"] = true;
                        _this._members["InnerPackSize"] = true;
                        _this._members["PalHI"] = true;
                        _this._members["PalletSize"] = true;
                        _this._members["PalletType"] = true;
                        _this._members["PalTI"] = true;
                        _this._members["SKU"] = true;
                        _this._members["SupplierPackSize"] = true;
                        _this._members["UOM"] = true;
                        _this._members["UPC"] = true;
                    }
                    return _this;
                }
                Recommendations_Notification_Item_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Recommendations_Notification_Item_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Recommendations_Notification_Item_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateRecommendations_Notification_Item_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Recommendations_Notification_Item_ItemViewModel.prototype._hydrateRecommendations_Notification_Item_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.AvgDailyDemand !== undefined)
                        this.AvgDailyDemand = original.AvgDailyDemand;
                    if (original.CoverageDays !== undefined)
                        this.CoverageDays = original.CoverageDays;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.InnerPackSize !== undefined)
                        this.InnerPackSize = original.InnerPackSize;
                    if (original.PalHI !== undefined)
                        this.PalHI = original.PalHI;
                    if (original.PalletSize !== undefined)
                        this.PalletSize = original.PalletSize;
                    if (original.PalletType !== undefined)
                        this.PalletType = original.PalletType;
                    if (original.PalTI !== undefined)
                        this.PalTI = original.PalTI;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.SupplierPackSize !== undefined)
                        this.SupplierPackSize = original.SupplierPackSize;
                    if (original.UOM !== undefined)
                        this.UOM = original.UOM;
                    if (original.UPC !== undefined)
                        this.UPC = original.UPC;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Recommendations_Notification_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Recommendations_Notification_Item_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Recommendations_Notification_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Recommendations_Notification_Item_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Recommendations_Notification_Item_ItemViewModel;
            }(BaseClass.ViewModel));
            SupplierView.Recommendations_Notification_Item_ItemViewModel = Recommendations_Notification_Item_ItemViewModel;
            var Recommendations_Notification_Warehouse_WarehouseViewModel = /** @class */ (function (_super) {
                __extends(Recommendations_Notification_Warehouse_WarehouseViewModel, _super);
                function Recommendations_Notification_Warehouse_WarehouseViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Code: true, Description: true, FlowType: true, Id: true
                        };
                    }
                    else {
                        _this._members["Code"] = true;
                        _this._members["Description"] = true;
                        _this._members["FlowType"] = true;
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Recommendations_Notification_Warehouse_WarehouseViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Recommendations_Notification_Warehouse_WarehouseViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Recommendations_Notification_Warehouse_WarehouseViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateRecommendations_Notification_Warehouse_WarehouseViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Recommendations_Notification_Warehouse_WarehouseViewModel.prototype._hydrateRecommendations_Notification_Warehouse_WarehouseViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Code !== undefined)
                        this.Code = original.Code;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.FlowType !== undefined)
                        this.FlowType = original.FlowType;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Recommendations_Notification_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Recommendations_Notification_Warehouse_WarehouseViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Recommendations_Notification_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Recommendations_Notification_Warehouse_WarehouseViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Recommendations_Notification_Warehouse_WarehouseViewModel;
            }(BaseClass.ViewModel));
            SupplierView.Recommendations_Notification_Warehouse_WarehouseViewModel = Recommendations_Notification_Warehouse_WarehouseViewModel;
            var Alerts_NotificationViewModel = /** @class */ (function (_super) {
                __extends(Alerts_NotificationViewModel, _super);
                function Alerts_NotificationViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            CreatedBy: true, Diff: true, Id: true, Message: true, OrderForecastQuantity: true, SalesForecastDate: true, TotalSupplierStock: true, OrderForecastDetails: true, Item: true, Warehouse: true
                        };
                    }
                    else {
                        _this._members["CreatedBy"] = true;
                        _this._members["Diff"] = true;
                        _this._members["Id"] = true;
                        _this._members["Message"] = true;
                        _this._members["OrderForecastQuantity"] = true;
                        _this._members["SalesForecastDate"] = true;
                        _this._members["TotalSupplierStock"] = true;
                        _this._members["OrderForecastDetails"] = true;
                        _this._members["Item"] = true;
                        _this._members["Warehouse"] = true;
                    }
                    return _this;
                }
                Alerts_NotificationViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.SalesForecastDate != null)
                        instance.SalesForecastDate = new Date(instance.SalesForecastDate);
                    if (instance.OrderForecastDetails != null)
                        instance.OrderForecastDetails = Alerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel._lightCast(instance.OrderForecastDetails);
                    if (instance.Item != null)
                        instance.Item = Alerts_Notification_Item_ItemViewModel._lightCast(instance.Item);
                    if (instance.Warehouse != null)
                        instance.Warehouse = Alerts_Notification_Warehouse_WarehouseViewModel._lightCast(instance.Warehouse);
                    return instance;
                };
                Alerts_NotificationViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Alerts_NotificationViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAlerts_NotificationViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Alerts_NotificationViewModel.prototype._hydrateAlerts_NotificationViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.CreatedBy !== undefined)
                        this.CreatedBy = original.CreatedBy;
                    if (original.Diff !== undefined)
                        this.Diff = original.Diff;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Message !== undefined)
                        this.Message = original.Message;
                    if (original.OrderForecastQuantity !== undefined)
                        this.OrderForecastQuantity = original.OrderForecastQuantity;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.SalesForecastDate))
                        this.SalesForecastDate = new Date(original.SalesForecastDate);
                    if (original.TotalSupplierStock !== undefined)
                        this.TotalSupplierStock = original.TotalSupplierStock;
                    if (original.OrderForecastDetails !== undefined)
                        this.OrderForecastDetails = Alerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel._initializeFrom(original.OrderForecastDetails, ignoreReadOnlyProperties, context);
                    if (original.Item !== undefined)
                        this.Item = Alerts_Notification_Item_ItemViewModel._initializeFrom(original.Item, ignoreReadOnlyProperties, context);
                    if (original.Warehouse !== undefined)
                        this.Warehouse = Alerts_Notification_Warehouse_WarehouseViewModel._initializeFrom(original.Warehouse, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Alerts_NotificationViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Alerts_NotificationViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Alerts_NotificationViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Alerts_NotificationViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Alerts_NotificationViewModel;
            }(BaseClass.ViewModel));
            SupplierView.Alerts_NotificationViewModel = Alerts_NotificationViewModel;
            var Alerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel = /** @class */ (function (_super) {
                __extends(Alerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel, _super);
                function Alerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AutomatedForecast: true, CreatedOn: true, Id: true, InitialStockLevel: true, ItemCoverageDays: true, OrderInventoryDays: true, Quantity: true, RecommendedOrderDate: true, ReplenishmentCycle: true, RoundQuantity: true, SalesForecastDate: true, Status: true, SupplierAvailableQuantity: true, SupplierCanDeliver: true, SupplierCoverageDays: true, SupplierMaxQuantity: true, SupplierSharesStock: true
                        };
                    }
                    else {
                        _this._members["AutomatedForecast"] = true;
                        _this._members["CreatedOn"] = true;
                        _this._members["Id"] = true;
                        _this._members["InitialStockLevel"] = true;
                        _this._members["ItemCoverageDays"] = true;
                        _this._members["OrderInventoryDays"] = true;
                        _this._members["Quantity"] = true;
                        _this._members["RecommendedOrderDate"] = true;
                        _this._members["ReplenishmentCycle"] = true;
                        _this._members["RoundQuantity"] = true;
                        _this._members["SalesForecastDate"] = true;
                        _this._members["Status"] = true;
                        _this._members["SupplierAvailableQuantity"] = true;
                        _this._members["SupplierCanDeliver"] = true;
                        _this._members["SupplierCoverageDays"] = true;
                        _this._members["SupplierMaxQuantity"] = true;
                        _this._members["SupplierSharesStock"] = true;
                    }
                    return _this;
                }
                Alerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.CreatedOn != null)
                        instance.CreatedOn = new Date(instance.CreatedOn);
                    if (instance.RecommendedOrderDate != null)
                        instance.RecommendedOrderDate = new Date(instance.RecommendedOrderDate);
                    if (instance.SalesForecastDate != null)
                        instance.SalesForecastDate = new Date(instance.SalesForecastDate);
                    return instance;
                };
                Alerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Alerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAlerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Alerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel.prototype._hydrateAlerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.AutomatedForecast !== undefined)
                        this.AutomatedForecast = original.AutomatedForecast;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.CreatedOn))
                        this.CreatedOn = new Date(original.CreatedOn);
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.InitialStockLevel !== undefined)
                        this.InitialStockLevel = original.InitialStockLevel;
                    if (original.ItemCoverageDays !== undefined)
                        this.ItemCoverageDays = original.ItemCoverageDays;
                    if (original.OrderInventoryDays !== undefined)
                        this.OrderInventoryDays = original.OrderInventoryDays;
                    if (original.Quantity !== undefined)
                        this.Quantity = original.Quantity;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.RecommendedOrderDate))
                        this.RecommendedOrderDate = new Date(original.RecommendedOrderDate);
                    if (original.ReplenishmentCycle !== undefined)
                        this.ReplenishmentCycle = original.ReplenishmentCycle;
                    if (original.RoundQuantity !== undefined)
                        this.RoundQuantity = original.RoundQuantity;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.SalesForecastDate))
                        this.SalesForecastDate = new Date(original.SalesForecastDate);
                    if (original.Status !== undefined)
                        this.Status = original.Status;
                    if (original.SupplierAvailableQuantity !== undefined)
                        this.SupplierAvailableQuantity = original.SupplierAvailableQuantity;
                    if (original.SupplierCanDeliver !== undefined)
                        this.SupplierCanDeliver = original.SupplierCanDeliver;
                    if (original.SupplierCoverageDays !== undefined)
                        this.SupplierCoverageDays = original.SupplierCoverageDays;
                    if (original.SupplierMaxQuantity !== undefined)
                        this.SupplierMaxQuantity = original.SupplierMaxQuantity;
                    if (original.SupplierSharesStock !== undefined)
                        this.SupplierSharesStock = original.SupplierSharesStock;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Alerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Alerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Alerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Alerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Alerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel;
            }(BaseClass.ViewModel));
            SupplierView.Alerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel = Alerts_Notification_OrderForecastDetails_OrderForecastDetailsViewModel;
            var Alerts_Notification_Item_ItemViewModel = /** @class */ (function (_super) {
                __extends(Alerts_Notification_Item_ItemViewModel, _super);
                function Alerts_Notification_Item_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AvgDailyDemand: true, CoverageDays: true, Description: true, InnerPackSize: true, PalHI: true, PalletSize: true, PalletType: true, PalTI: true, SKU: true, SupplierPackSize: true, UOM: true, UPC: true
                        };
                    }
                    else {
                        _this._members["AvgDailyDemand"] = true;
                        _this._members["CoverageDays"] = true;
                        _this._members["Description"] = true;
                        _this._members["InnerPackSize"] = true;
                        _this._members["PalHI"] = true;
                        _this._members["PalletSize"] = true;
                        _this._members["PalletType"] = true;
                        _this._members["PalTI"] = true;
                        _this._members["SKU"] = true;
                        _this._members["SupplierPackSize"] = true;
                        _this._members["UOM"] = true;
                        _this._members["UPC"] = true;
                    }
                    return _this;
                }
                Alerts_Notification_Item_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Alerts_Notification_Item_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Alerts_Notification_Item_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAlerts_Notification_Item_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Alerts_Notification_Item_ItemViewModel.prototype._hydrateAlerts_Notification_Item_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.AvgDailyDemand !== undefined)
                        this.AvgDailyDemand = original.AvgDailyDemand;
                    if (original.CoverageDays !== undefined)
                        this.CoverageDays = original.CoverageDays;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.InnerPackSize !== undefined)
                        this.InnerPackSize = original.InnerPackSize;
                    if (original.PalHI !== undefined)
                        this.PalHI = original.PalHI;
                    if (original.PalletSize !== undefined)
                        this.PalletSize = original.PalletSize;
                    if (original.PalletType !== undefined)
                        this.PalletType = original.PalletType;
                    if (original.PalTI !== undefined)
                        this.PalTI = original.PalTI;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.SupplierPackSize !== undefined)
                        this.SupplierPackSize = original.SupplierPackSize;
                    if (original.UOM !== undefined)
                        this.UOM = original.UOM;
                    if (original.UPC !== undefined)
                        this.UPC = original.UPC;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Alerts_Notification_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Alerts_Notification_Item_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Alerts_Notification_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Alerts_Notification_Item_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Alerts_Notification_Item_ItemViewModel;
            }(BaseClass.ViewModel));
            SupplierView.Alerts_Notification_Item_ItemViewModel = Alerts_Notification_Item_ItemViewModel;
            var Alerts_Notification_Warehouse_WarehouseViewModel = /** @class */ (function (_super) {
                __extends(Alerts_Notification_Warehouse_WarehouseViewModel, _super);
                function Alerts_Notification_Warehouse_WarehouseViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Code: true, Description: true, FlowType: true, Id: true
                        };
                    }
                    else {
                        _this._members["Code"] = true;
                        _this._members["Description"] = true;
                        _this._members["FlowType"] = true;
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Alerts_Notification_Warehouse_WarehouseViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Alerts_Notification_Warehouse_WarehouseViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Alerts_Notification_Warehouse_WarehouseViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAlerts_Notification_Warehouse_WarehouseViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Alerts_Notification_Warehouse_WarehouseViewModel.prototype._hydrateAlerts_Notification_Warehouse_WarehouseViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Code !== undefined)
                        this.Code = original.Code;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.FlowType !== undefined)
                        this.FlowType = original.FlowType;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Alerts_Notification_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Alerts_Notification_Warehouse_WarehouseViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Alerts_Notification_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Alerts_Notification_Warehouse_WarehouseViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Alerts_Notification_Warehouse_WarehouseViewModel;
            }(BaseClass.ViewModel));
            SupplierView.Alerts_Notification_Warehouse_WarehouseViewModel = Alerts_Notification_Warehouse_WarehouseViewModel;
            var SupplierParameters_SupplierParameterViewModel = /** @class */ (function (_super) {
                __extends(SupplierParameters_SupplierParameterViewModel, _super);
                function SupplierParameters_SupplierParameterViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            CoverageDays: true, HasReplied: true, Id: true, SharesExcessStock: true, SupplierCanDeliverWholeForecast: true, SupplierComments: true, Agreement: true
                        };
                    }
                    else {
                        _this._members["CoverageDays"] = true;
                        _this._members["HasReplied"] = true;
                        _this._members["Id"] = true;
                        _this._members["SharesExcessStock"] = true;
                        _this._members["SupplierCanDeliverWholeForecast"] = true;
                        _this._members["SupplierComments"] = true;
                        _this._members["Agreement"] = true;
                    }
                    return _this;
                }
                SupplierParameters_SupplierParameterViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Agreement != null)
                        instance.Agreement = SupplierParameters_SupplierParameter_Agreement_AgreementViewModel._lightCast(instance.Agreement);
                    return instance;
                };
                SupplierParameters_SupplierParameterViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SupplierParameters_SupplierParameterViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSupplierParameters_SupplierParameterViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SupplierParameters_SupplierParameterViewModel.prototype._hydrateSupplierParameters_SupplierParameterViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.CoverageDays !== undefined)
                        this.CoverageDays = original.CoverageDays;
                    if (original.HasReplied !== undefined)
                        this.HasReplied = original.HasReplied;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.SharesExcessStock !== undefined)
                        this.SharesExcessStock = original.SharesExcessStock;
                    if (original.SupplierCanDeliverWholeForecast !== undefined)
                        this.SupplierCanDeliverWholeForecast = original.SupplierCanDeliverWholeForecast;
                    if (original.SupplierComments !== undefined)
                        this.SupplierComments = original.SupplierComments;
                    if (original.Agreement !== undefined)
                        this.Agreement = SupplierParameters_SupplierParameter_Agreement_AgreementViewModel._initializeFrom(original.Agreement, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SupplierParameters_SupplierParameterViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SupplierParameters_SupplierParameterViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SupplierParameters_SupplierParameterViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SupplierParameters_SupplierParameterViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SupplierParameters_SupplierParameterViewModel;
            }(BaseClass.ViewModel));
            SupplierView.SupplierParameters_SupplierParameterViewModel = SupplierParameters_SupplierParameterViewModel;
            var SupplierParameters_SupplierParameter_Agreement_AgreementViewModel = /** @class */ (function (_super) {
                __extends(SupplierParameters_SupplierParameter_Agreement_AgreementViewModel, _super);
                function SupplierParameters_SupplierParameter_Agreement_AgreementViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            AgreementDocument: true, DateCreated: true, FullTruckLoad: true, Id: true, LeadTime: true, Profile: true, TargetInventoryDays: true, WDDeliveries: true
                        };
                    }
                    else {
                        _this._members["AgreementDocument"] = true;
                        _this._members["DateCreated"] = true;
                        _this._members["FullTruckLoad"] = true;
                        _this._members["Id"] = true;
                        _this._members["LeadTime"] = true;
                        _this._members["Profile"] = true;
                        _this._members["TargetInventoryDays"] = true;
                        _this._members["WDDeliveries"] = true;
                    }
                    return _this;
                }
                SupplierParameters_SupplierParameter_Agreement_AgreementViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DateCreated != null)
                        instance.DateCreated = new Date(instance.DateCreated);
                    return instance;
                };
                SupplierParameters_SupplierParameter_Agreement_AgreementViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SupplierParameters_SupplierParameter_Agreement_AgreementViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSupplierParameters_SupplierParameter_Agreement_AgreementViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SupplierParameters_SupplierParameter_Agreement_AgreementViewModel.prototype._hydrateSupplierParameters_SupplierParameter_Agreement_AgreementViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.AgreementDocument !== undefined)
                        this.AgreementDocument = original.AgreementDocument;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.DateCreated))
                        this.DateCreated = new Date(original.DateCreated);
                    if (original.FullTruckLoad !== undefined)
                        this.FullTruckLoad = original.FullTruckLoad;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.LeadTime !== undefined)
                        this.LeadTime = original.LeadTime;
                    if (original.Profile !== undefined)
                        this.Profile = original.Profile;
                    if (original.TargetInventoryDays !== undefined)
                        this.TargetInventoryDays = original.TargetInventoryDays;
                    if (original.WDDeliveries !== undefined)
                        this.WDDeliveries = original.WDDeliveries;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SupplierParameters_SupplierParameter_Agreement_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SupplierParameters_SupplierParameter_Agreement_AgreementViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SupplierParameters_SupplierParameter_Agreement_AgreementViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SupplierParameters_SupplierParameter_Agreement_AgreementViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SupplierParameters_SupplierParameter_Agreement_AgreementViewModel;
            }(BaseClass.ViewModel));
            SupplierView.SupplierParameters_SupplierParameter_Agreement_AgreementViewModel = SupplierParameters_SupplierParameter_Agreement_AgreementViewModel;
            var listOrderForecastDetails_Root_DatasetDto = /** @class */ (function () {
                function listOrderForecastDetails_Root_DatasetDto(original) {
                    if (original == null)
                        return null;
                    this.Id = original.Id;
                    this.Item = new listOrderForecastDetails_Root_Item_DatasetDto(original.Item);
                    this.Warehouse = new listOrderForecastDetails_Root_Warehouse_DatasetDto(original.Warehouse);
                    this.RecommendedOrderDate = original.RecommendedOrderDate;
                    this.ItemCoverageDays = original.ItemCoverageDays;
                    this.Quantity = original.Quantity;
                    this.Notification = new listOrderForecastDetails_Root_Notification_DatasetDto(original.Notification);
                    this.SupplierAvailableQuantity = original.SupplierAvailableQuantity;
                    this.SupplierCanDeliver = original.SupplierCanDeliver;
                    this.Status = original.Status;
                }
                return listOrderForecastDetails_Root_DatasetDto;
            }());
            SupplierView.listOrderForecastDetails_Root_DatasetDto = listOrderForecastDetails_Root_DatasetDto;
            var listOrderForecastDetails_Root_Item_DatasetDto = /** @class */ (function () {
                function listOrderForecastDetails_Root_Item_DatasetDto(original) {
                    if (original == null)
                        return null;
                    this.SKU = original.SKU;
                    this.Description = original.Description;
                }
                return listOrderForecastDetails_Root_Item_DatasetDto;
            }());
            SupplierView.listOrderForecastDetails_Root_Item_DatasetDto = listOrderForecastDetails_Root_Item_DatasetDto;
            var listOrderForecastDetails_Root_Warehouse_DatasetDto = /** @class */ (function () {
                function listOrderForecastDetails_Root_Warehouse_DatasetDto(original) {
                    if (original == null)
                        return null;
                    this.Id = original.Id;
                    this.Description = original.Description;
                }
                return listOrderForecastDetails_Root_Warehouse_DatasetDto;
            }());
            SupplierView.listOrderForecastDetails_Root_Warehouse_DatasetDto = listOrderForecastDetails_Root_Warehouse_DatasetDto;
            var listOrderForecastDetails_Root_Notification_DatasetDto = /** @class */ (function () {
                function listOrderForecastDetails_Root_Notification_DatasetDto(original) {
                    if (original == null)
                        return null;
                    this.Id = original.Id;
                    this.Diff = original.Diff;
                }
                return listOrderForecastDetails_Root_Notification_DatasetDto;
            }());
            SupplierView.listOrderForecastDetails_Root_Notification_DatasetDto = listOrderForecastDetails_Root_Notification_DatasetDto;
        })(SupplierView = ViewModels.SupplierView || (ViewModels.SupplierView = {}));
    })(ViewModels = DSS1_RetailerDriverStockOptimisation.ViewModels || (DSS1_RetailerDriverStockOptimisation.ViewModels = {}));
})(DSS1_RetailerDriverStockOptimisation || (DSS1_RetailerDriverStockOptimisation = {}));
