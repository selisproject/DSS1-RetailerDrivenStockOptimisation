var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
var DSS1_RetailerDriverStockOptimisation;
(function (DSS1_RetailerDriverStockOptimisation) {
    var ViewModels;
    (function (ViewModels) {
        var Analytics;
        (function (Analytics) {
            var AnalyticsViewModel = /** @class */ (function (_super) {
                __extends(AnalyticsViewModel, _super);
                function AnalyticsViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            TotalRequest: true, Logs: true, MaxElapseMsecs: true, MinElapseMsecs: true, AvgElapseMsecs: true, Top5Service: true, Top5Operation: true, Top5Consumer: true, ErrorRequest: true, RequestOverTime: true, TimeRange: true, RequestLatency: true
                        };
                    }
                    else {
                        _this._members["TotalRequest"] = true;
                        _this._members["Logs"] = true;
                        _this._members["MaxElapseMsecs"] = true;
                        _this._members["MinElapseMsecs"] = true;
                        _this._members["AvgElapseMsecs"] = true;
                        _this._members["Top5Service"] = true;
                        _this._members["Top5Operation"] = true;
                        _this._members["Top5Consumer"] = true;
                        _this._members["ErrorRequest"] = true;
                        _this._members["RequestOverTime"] = true;
                        _this._members["TimeRange"] = true;
                        _this._members["RequestLatency"] = true;
                    }
                    _this.Logs = new Array();
                    _this.Top5Service = new Array();
                    _this.Top5Operation = new Array();
                    _this.Top5Consumer = new Array();
                    _this.ErrorRequest = new Array();
                    _this.RequestOverTime = new Array();
                    _this.RequestLatency = new Array();
                    return _this;
                }
                AnalyticsViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Logs != null) {
                        for (var i = 0; i < instance.Logs.length; i++) {
                            instance.Logs[i] = Logs_RequestLogViewModel._lightCast(instance.Logs[i]);
                        }
                    }
                    if (instance.Top5Service != null) {
                        for (var i = 0; i < instance.Top5Service.length; i++) {
                            instance.Top5Service[i] = Top5Service_BucketsViewModel._lightCast(instance.Top5Service[i]);
                        }
                    }
                    if (instance.Top5Operation != null) {
                        for (var i = 0; i < instance.Top5Operation.length; i++) {
                            instance.Top5Operation[i] = Top5Operation_BucketsViewModel._lightCast(instance.Top5Operation[i]);
                        }
                    }
                    if (instance.Top5Consumer != null) {
                        for (var i = 0; i < instance.Top5Consumer.length; i++) {
                            instance.Top5Consumer[i] = Top5Consumer_BucketsViewModel._lightCast(instance.Top5Consumer[i]);
                        }
                    }
                    if (instance.ErrorRequest != null) {
                        for (var i = 0; i < instance.ErrorRequest.length; i++) {
                            instance.ErrorRequest[i] = ErrorRequest_BucketsViewModel._lightCast(instance.ErrorRequest[i]);
                        }
                    }
                    if (instance.RequestOverTime != null) {
                        for (var i = 0; i < instance.RequestOverTime.length; i++) {
                            instance.RequestOverTime[i] = RequestOverTime_HIstogramBucketViewModel._lightCast(instance.RequestOverTime[i]);
                        }
                    }
                    if (instance.RequestLatency != null) {
                        for (var i = 0; i < instance.RequestLatency.length; i++) {
                            instance.RequestLatency[i] = RequestLatency_HIstogramBucketViewModel._lightCast(instance.RequestLatency[i]);
                        }
                    }
                    return instance;
                };
                AnalyticsViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new AnalyticsViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateAnalyticsViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                AnalyticsViewModel.prototype._hydrateAnalyticsViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.TotalRequest !== undefined)
                        this.TotalRequest = original.TotalRequest;
                    if (original.Logs != null) {
                        for (var i = 0; i < original.Logs.length; i++) {
                            this.Logs.push(Logs_RequestLogViewModel._initializeFrom(original.Logs[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.MaxElapseMsecs !== undefined)
                        this.MaxElapseMsecs = original.MaxElapseMsecs;
                    if (original.MinElapseMsecs !== undefined)
                        this.MinElapseMsecs = original.MinElapseMsecs;
                    if (original.AvgElapseMsecs !== undefined)
                        this.AvgElapseMsecs = original.AvgElapseMsecs;
                    if (original.Top5Service != null) {
                        for (var i = 0; i < original.Top5Service.length; i++) {
                            this.Top5Service.push(Top5Service_BucketsViewModel._initializeFrom(original.Top5Service[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.Top5Operation != null) {
                        for (var i = 0; i < original.Top5Operation.length; i++) {
                            this.Top5Operation.push(Top5Operation_BucketsViewModel._initializeFrom(original.Top5Operation[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.Top5Consumer != null) {
                        for (var i = 0; i < original.Top5Consumer.length; i++) {
                            this.Top5Consumer.push(Top5Consumer_BucketsViewModel._initializeFrom(original.Top5Consumer[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.ErrorRequest != null) {
                        for (var i = 0; i < original.ErrorRequest.length; i++) {
                            this.ErrorRequest.push(ErrorRequest_BucketsViewModel._initializeFrom(original.ErrorRequest[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.RequestOverTime != null) {
                        for (var i = 0; i < original.RequestOverTime.length; i++) {
                            this.RequestOverTime.push(RequestOverTime_HIstogramBucketViewModel._initializeFrom(original.RequestOverTime[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.TimeRange !== undefined)
                        this.TimeRange = original.TimeRange;
                    if (original.RequestLatency != null) {
                        for (var i = 0; i < original.RequestLatency.length; i++) {
                            this.RequestLatency.push(RequestLatency_HIstogramBucketViewModel._initializeFrom(original.RequestLatency[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this.Chart13SelectedItemKeys = original.Chart13SelectedItemKeys;
                    this.Chart131SelectedItemKeys = original.Chart131SelectedItemKeys;
                    this.Chart1SelectedItemKeys = original.Chart1SelectedItemKeys;
                    this.Chart11SelectedItemKeys = original.Chart11SelectedItemKeys;
                    this.Chart12SelectedItemKeys = original.Chart12SelectedItemKeys;
                    this.Chart121SelectedItemKeys = original.Chart121SelectedItemKeys;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = AnalyticsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        AnalyticsViewModel._deleteDropDownInitialValues(reduced);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                AnalyticsViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = AnalyticsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    AnalyticsViewModel._deleteDropDownInitialValues(reduced);
                    return reduced;
                };
                AnalyticsViewModel._deleteDropDownInitialValues = function (reduced) {
                    if (reduced == null)
                        return;
                    DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
                };
                AnalyticsViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return AnalyticsViewModel;
            }(DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel));
            Analytics.AnalyticsViewModel = AnalyticsViewModel;
            var Logs_RequestLogViewModel = /** @class */ (function (_super) {
                __extends(Logs_RequestLogViewModel, _super);
                function Logs_RequestLogViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            ClientId: true, ClientName: true, ElapsedMsecs: true, IP: true, Message: true, Operation: true, ProductName: true, RequestId: true, RequestMethod: true, RequestPath: true, RequestUri: true, Service: true, StatusCode: true, Timestamp: true, Username: true
                        };
                    }
                    else {
                        _this._members["ClientId"] = true;
                        _this._members["ClientName"] = true;
                        _this._members["ElapsedMsecs"] = true;
                        _this._members["IP"] = true;
                        _this._members["Message"] = true;
                        _this._members["Operation"] = true;
                        _this._members["ProductName"] = true;
                        _this._members["RequestId"] = true;
                        _this._members["RequestMethod"] = true;
                        _this._members["RequestPath"] = true;
                        _this._members["RequestUri"] = true;
                        _this._members["Service"] = true;
                        _this._members["StatusCode"] = true;
                        _this._members["Timestamp"] = true;
                        _this._members["Username"] = true;
                    }
                    return _this;
                }
                Logs_RequestLogViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Logs_RequestLogViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Logs_RequestLogViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateLogs_RequestLogViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Logs_RequestLogViewModel.prototype._hydrateLogs_RequestLogViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.ClientId !== undefined)
                        this.ClientId = original.ClientId;
                    if (original.ClientName !== undefined)
                        this.ClientName = original.ClientName;
                    if (original.ElapsedMsecs !== undefined)
                        this.ElapsedMsecs = original.ElapsedMsecs;
                    if (original.IP !== undefined)
                        this.IP = original.IP;
                    if (original.Message !== undefined)
                        this.Message = original.Message;
                    if (original.Operation !== undefined)
                        this.Operation = original.Operation;
                    if (original.ProductName !== undefined)
                        this.ProductName = original.ProductName;
                    if (original.RequestId !== undefined)
                        this.RequestId = original.RequestId;
                    if (original.RequestMethod !== undefined)
                        this.RequestMethod = original.RequestMethod;
                    if (original.RequestPath !== undefined)
                        this.RequestPath = original.RequestPath;
                    if (original.RequestUri !== undefined)
                        this.RequestUri = original.RequestUri;
                    if (original.Service !== undefined)
                        this.Service = original.Service;
                    if (original.StatusCode !== undefined)
                        this.StatusCode = original.StatusCode;
                    if (original.Timestamp !== undefined)
                        this.Timestamp = original.Timestamp;
                    if (original.Username !== undefined)
                        this.Username = original.Username;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Logs_RequestLogViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Logs_RequestLogViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Logs_RequestLogViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Logs_RequestLogViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Logs_RequestLogViewModel;
            }(BaseClass.ViewModel));
            Analytics.Logs_RequestLogViewModel = Logs_RequestLogViewModel;
            var Top5Service_BucketsViewModel = /** @class */ (function (_super) {
                __extends(Top5Service_BucketsViewModel, _super);
                function Top5Service_BucketsViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            doc_count: true, key: true
                        };
                    }
                    else {
                        _this._members["doc_count"] = true;
                        _this._members["key"] = true;
                    }
                    return _this;
                }
                Top5Service_BucketsViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Top5Service_BucketsViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Top5Service_BucketsViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTop5Service_BucketsViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Top5Service_BucketsViewModel.prototype._hydrateTop5Service_BucketsViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.doc_count !== undefined)
                        this.doc_count = original.doc_count;
                    if (original.key !== undefined)
                        this.key = original.key;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Top5Service_BucketsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Top5Service_BucketsViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Top5Service_BucketsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Top5Service_BucketsViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Top5Service_BucketsViewModel;
            }(BaseClass.ViewModel));
            Analytics.Top5Service_BucketsViewModel = Top5Service_BucketsViewModel;
            var Top5Operation_BucketsViewModel = /** @class */ (function (_super) {
                __extends(Top5Operation_BucketsViewModel, _super);
                function Top5Operation_BucketsViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            doc_count: true, key: true
                        };
                    }
                    else {
                        _this._members["doc_count"] = true;
                        _this._members["key"] = true;
                    }
                    return _this;
                }
                Top5Operation_BucketsViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Top5Operation_BucketsViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Top5Operation_BucketsViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTop5Operation_BucketsViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Top5Operation_BucketsViewModel.prototype._hydrateTop5Operation_BucketsViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.doc_count !== undefined)
                        this.doc_count = original.doc_count;
                    if (original.key !== undefined)
                        this.key = original.key;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Top5Operation_BucketsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Top5Operation_BucketsViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Top5Operation_BucketsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Top5Operation_BucketsViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Top5Operation_BucketsViewModel;
            }(BaseClass.ViewModel));
            Analytics.Top5Operation_BucketsViewModel = Top5Operation_BucketsViewModel;
            var Top5Consumer_BucketsViewModel = /** @class */ (function (_super) {
                __extends(Top5Consumer_BucketsViewModel, _super);
                function Top5Consumer_BucketsViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            doc_count: true, key: true
                        };
                    }
                    else {
                        _this._members["doc_count"] = true;
                        _this._members["key"] = true;
                    }
                    return _this;
                }
                Top5Consumer_BucketsViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Top5Consumer_BucketsViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Top5Consumer_BucketsViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateTop5Consumer_BucketsViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Top5Consumer_BucketsViewModel.prototype._hydrateTop5Consumer_BucketsViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.doc_count !== undefined)
                        this.doc_count = original.doc_count;
                    if (original.key !== undefined)
                        this.key = original.key;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Top5Consumer_BucketsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Top5Consumer_BucketsViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Top5Consumer_BucketsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Top5Consumer_BucketsViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Top5Consumer_BucketsViewModel;
            }(BaseClass.ViewModel));
            Analytics.Top5Consumer_BucketsViewModel = Top5Consumer_BucketsViewModel;
            var ErrorRequest_BucketsViewModel = /** @class */ (function (_super) {
                __extends(ErrorRequest_BucketsViewModel, _super);
                function ErrorRequest_BucketsViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            doc_count: true, key: true
                        };
                    }
                    else {
                        _this._members["doc_count"] = true;
                        _this._members["key"] = true;
                    }
                    return _this;
                }
                ErrorRequest_BucketsViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                ErrorRequest_BucketsViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ErrorRequest_BucketsViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateErrorRequest_BucketsViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ErrorRequest_BucketsViewModel.prototype._hydrateErrorRequest_BucketsViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.doc_count !== undefined)
                        this.doc_count = original.doc_count;
                    if (original.key !== undefined)
                        this.key = original.key;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ErrorRequest_BucketsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ErrorRequest_BucketsViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ErrorRequest_BucketsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                ErrorRequest_BucketsViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return ErrorRequest_BucketsViewModel;
            }(BaseClass.ViewModel));
            Analytics.ErrorRequest_BucketsViewModel = ErrorRequest_BucketsViewModel;
            var RequestOverTime_HIstogramBucketViewModel = /** @class */ (function (_super) {
                __extends(RequestOverTime_HIstogramBucketViewModel, _super);
                function RequestOverTime_HIstogramBucketViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            avg: true, doc_count: true, error_rate: true, failure: true, key: true, keyAsString: true, max: true, min: true, success: true, sum: true
                        };
                    }
                    else {
                        _this._members["avg"] = true;
                        _this._members["doc_count"] = true;
                        _this._members["error_rate"] = true;
                        _this._members["failure"] = true;
                        _this._members["key"] = true;
                        _this._members["keyAsString"] = true;
                        _this._members["max"] = true;
                        _this._members["min"] = true;
                        _this._members["success"] = true;
                        _this._members["sum"] = true;
                    }
                    return _this;
                }
                RequestOverTime_HIstogramBucketViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                RequestOverTime_HIstogramBucketViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new RequestOverTime_HIstogramBucketViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateRequestOverTime_HIstogramBucketViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                RequestOverTime_HIstogramBucketViewModel.prototype._hydrateRequestOverTime_HIstogramBucketViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.avg !== undefined)
                        this.avg = original.avg;
                    if (original.doc_count !== undefined)
                        this.doc_count = original.doc_count;
                    if (original.error_rate !== undefined)
                        this.error_rate = original.error_rate;
                    if (original.failure !== undefined)
                        this.failure = original.failure;
                    if (original.key !== undefined)
                        this.key = original.key;
                    if (original.keyAsString !== undefined)
                        this.keyAsString = original.keyAsString;
                    if (original.max !== undefined)
                        this.max = original.max;
                    if (original.min !== undefined)
                        this.min = original.min;
                    if (original.success !== undefined)
                        this.success = original.success;
                    if (original.sum !== undefined)
                        this.sum = original.sum;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = RequestOverTime_HIstogramBucketViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                RequestOverTime_HIstogramBucketViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = RequestOverTime_HIstogramBucketViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                RequestOverTime_HIstogramBucketViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return RequestOverTime_HIstogramBucketViewModel;
            }(BaseClass.ViewModel));
            Analytics.RequestOverTime_HIstogramBucketViewModel = RequestOverTime_HIstogramBucketViewModel;
            var RequestLatency_HIstogramBucketViewModel = /** @class */ (function (_super) {
                __extends(RequestLatency_HIstogramBucketViewModel, _super);
                function RequestLatency_HIstogramBucketViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            avg: true, doc_count: true, error_rate: true, failure: true, key: true, keyAsString: true, max: true, min: true, success: true, sum: true
                        };
                    }
                    else {
                        _this._members["avg"] = true;
                        _this._members["doc_count"] = true;
                        _this._members["error_rate"] = true;
                        _this._members["failure"] = true;
                        _this._members["key"] = true;
                        _this._members["keyAsString"] = true;
                        _this._members["max"] = true;
                        _this._members["min"] = true;
                        _this._members["success"] = true;
                        _this._members["sum"] = true;
                    }
                    return _this;
                }
                RequestLatency_HIstogramBucketViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                RequestLatency_HIstogramBucketViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new RequestLatency_HIstogramBucketViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateRequestLatency_HIstogramBucketViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                RequestLatency_HIstogramBucketViewModel.prototype._hydrateRequestLatency_HIstogramBucketViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.avg !== undefined)
                        this.avg = original.avg;
                    if (original.doc_count !== undefined)
                        this.doc_count = original.doc_count;
                    if (original.error_rate !== undefined)
                        this.error_rate = original.error_rate;
                    if (original.failure !== undefined)
                        this.failure = original.failure;
                    if (original.key !== undefined)
                        this.key = original.key;
                    if (original.keyAsString !== undefined)
                        this.keyAsString = original.keyAsString;
                    if (original.max !== undefined)
                        this.max = original.max;
                    if (original.min !== undefined)
                        this.min = original.min;
                    if (original.success !== undefined)
                        this.success = original.success;
                    if (original.sum !== undefined)
                        this.sum = original.sum;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = RequestLatency_HIstogramBucketViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                RequestLatency_HIstogramBucketViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = RequestLatency_HIstogramBucketViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                RequestLatency_HIstogramBucketViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return RequestLatency_HIstogramBucketViewModel;
            }(BaseClass.ViewModel));
            Analytics.RequestLatency_HIstogramBucketViewModel = RequestLatency_HIstogramBucketViewModel;
        })(Analytics = ViewModels.Analytics || (ViewModels.Analytics = {}));
    })(ViewModels = DSS1_RetailerDriverStockOptimisation.ViewModels || (DSS1_RetailerDriverStockOptimisation.ViewModels = {}));
})(DSS1_RetailerDriverStockOptimisation || (DSS1_RetailerDriverStockOptimisation = {}));
