var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
var DSS1_RetailerDriverStockOptimisation;
(function (DSS1_RetailerDriverStockOptimisation) {
    var ViewModels;
    (function (ViewModels) {
        var NewDashboard;
        (function (NewDashboard) {
            var NewDashboardViewModel = /** @class */ (function (_super) {
                __extends(NewDashboardViewModel, _super);
                function NewDashboardViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Warehouse: true, SKU: true, LocId: true, ItemDesc: true, warehouseid: true, Notifications: true, FromDate: true, ToDate: true, Category: true, SubCategory: true, BaseUnit: true, BusinessUnit: true, Item: true, Supplier: true
                        };
                    }
                    else {
                        _this._members["Warehouse"] = true;
                        _this._members["SKU"] = true;
                        _this._members["LocId"] = true;
                        _this._members["ItemDesc"] = true;
                        _this._members["warehouseid"] = true;
                        _this._members["Notifications"] = true;
                        _this._members["FromDate"] = true;
                        _this._members["ToDate"] = true;
                        _this._members["Category"] = true;
                        _this._members["SubCategory"] = true;
                        _this._members["BaseUnit"] = true;
                        _this._members["BusinessUnit"] = true;
                        _this._members["Item"] = true;
                        _this._members["Supplier"] = true;
                    }
                    _this.Notifications = new Array();
                    return _this;
                }
                NewDashboardViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Warehouse != null)
                        instance.Warehouse = Warehouse_WarehouseViewModel._lightCast(instance.Warehouse);
                    if (instance.Notifications != null) {
                        for (var i = 0; i < instance.Notifications.length; i++) {
                            instance.Notifications[i] = Notifications_NotificationViewModel._lightCast(instance.Notifications[i]);
                        }
                    }
                    if (instance.FromDate != null)
                        instance.FromDate = new Date(instance.FromDate);
                    if (instance.ToDate != null)
                        instance.ToDate = new Date(instance.ToDate);
                    if (instance.Category != null)
                        instance.Category = Category_CategoryViewModel._lightCast(instance.Category);
                    if (instance.SubCategory != null)
                        instance.SubCategory = SubCategory_SubCategoryViewModel._lightCast(instance.SubCategory);
                    if (instance.BaseUnit != null)
                        instance.BaseUnit = BaseUnit_BaseUnitViewModel._lightCast(instance.BaseUnit);
                    if (instance.BusinessUnit != null)
                        instance.BusinessUnit = BusinessUnit_BusinessUnitViewModel._lightCast(instance.BusinessUnit);
                    if (instance.Item != null)
                        instance.Item = Item_ItemViewModel._lightCast(instance.Item);
                    if (instance.Supplier != null)
                        instance.Supplier = Supplier_SupplierViewModel._lightCast(instance.Supplier);
                    return instance;
                };
                NewDashboardViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new NewDashboardViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateNewDashboardViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                NewDashboardViewModel.prototype._hydrateNewDashboardViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Warehouse !== undefined)
                        this.Warehouse = Warehouse_WarehouseViewModel._initializeFrom(original.Warehouse, ignoreReadOnlyProperties, context);
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.LocId !== undefined)
                        this.LocId = original.LocId;
                    if (original.ItemDesc !== undefined)
                        this.ItemDesc = original.ItemDesc;
                    if (original.warehouseid !== undefined)
                        this.warehouseid = original.warehouseid;
                    if (original.Notifications != null) {
                        for (var i = 0; i < original.Notifications.length; i++) {
                            this.Notifications.push(Notifications_NotificationViewModel._initializeFrom(original.Notifications[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.FromDate))
                        this.FromDate = new Date(original.FromDate);
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.ToDate))
                        this.ToDate = new Date(original.ToDate);
                    if (original.Category !== undefined)
                        this.Category = Category_CategoryViewModel._initializeFrom(original.Category, ignoreReadOnlyProperties, context);
                    if (original.SubCategory !== undefined)
                        this.SubCategory = SubCategory_SubCategoryViewModel._initializeFrom(original.SubCategory, ignoreReadOnlyProperties, context);
                    if (original.BaseUnit !== undefined)
                        this.BaseUnit = BaseUnit_BaseUnitViewModel._initializeFrom(original.BaseUnit, ignoreReadOnlyProperties, context);
                    if (original.BusinessUnit !== undefined)
                        this.BusinessUnit = BusinessUnit_BusinessUnitViewModel._initializeFrom(original.BusinessUnit, ignoreReadOnlyProperties, context);
                    if (original.Item !== undefined)
                        this.Item = Item_ItemViewModel._initializeFrom(original.Item, ignoreReadOnlyProperties, context);
                    if (original.Supplier !== undefined)
                        this.Supplier = Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);
                    if (original.ddlBusinessUnit__InitialSelection !== undefined)
                        this.ddlBusinessUnit__InitialSelection = original.ddlBusinessUnit__InitialSelection;
                    if (original.ddlCategory__InitialSelection !== undefined)
                        this.ddlCategory__InitialSelection = original.ddlCategory__InitialSelection;
                    if (original.ddlSubcategory__InitialSelection !== undefined)
                        this.ddlSubcategory__InitialSelection = original.ddlSubcategory__InitialSelection;
                    if (original.ddlBaseunit__InitialSelection !== undefined)
                        this.ddlBaseunit__InitialSelection = original.ddlBaseunit__InitialSelection;
                    if (original.ddlSKU__InitialSelection !== undefined)
                        this.ddlSKU__InitialSelection = original.ddlSKU__InitialSelection;
                    if (original.ddlSupplier__InitialSelection !== undefined)
                        this.ddlSupplier__InitialSelection = original.ddlSupplier__InitialSelection;
                    this.ddlBusinessUnitSelectedItemKeys = original.ddlBusinessUnitSelectedItemKeys;
                    this.ddlCategorySelectedItemKeys = original.ddlCategorySelectedItemKeys;
                    this.ddlSubcategorySelectedItemKeys = original.ddlSubcategorySelectedItemKeys;
                    this.ddlBaseunitSelectedItemKeys = original.ddlBaseunitSelectedItemKeys;
                    this.ddlSKUSelectedItemKeys = original.ddlSKUSelectedItemKeys;
                    this.ddlSupplierSelectedItemKeys = original.ddlSupplierSelectedItemKeys;
                    this.ddlWarehouseSelectedItemKeys = original.ddlWarehouseSelectedItemKeys;
                    this.Chart1SelectedItemKeys = original.Chart1SelectedItemKeys;
                    this.Chart3SelectedItemKeys = original.Chart3SelectedItemKeys;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = NewDashboardViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        NewDashboardViewModel._deleteDropDownInitialValues(reduced);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                NewDashboardViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = NewDashboardViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    NewDashboardViewModel._deleteDropDownInitialValues(reduced);
                    return reduced;
                };
                NewDashboardViewModel._deleteDropDownInitialValues = function (reduced) {
                    if (reduced == null)
                        return;
                    delete reduced.ddlBusinessUnit__InitialSelection;
                    delete reduced.ddlCategory__InitialSelection;
                    delete reduced.ddlSubcategory__InitialSelection;
                    delete reduced.ddlBaseunit__InitialSelection;
                    delete reduced.ddlSKU__InitialSelection;
                    delete reduced.ddlSupplier__InitialSelection;
                    DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
                };
                NewDashboardViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return NewDashboardViewModel;
            }(DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel));
            NewDashboard.NewDashboardViewModel = NewDashboardViewModel;
            var Warehouse_WarehouseViewModel = /** @class */ (function (_super) {
                __extends(Warehouse_WarehouseViewModel, _super);
                function Warehouse_WarehouseViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, Id: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Warehouse_WarehouseViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Warehouse_WarehouseViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Warehouse_WarehouseViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateWarehouse_WarehouseViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Warehouse_WarehouseViewModel.prototype._hydrateWarehouse_WarehouseViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Warehouse_WarehouseViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Warehouse_WarehouseViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Warehouse_WarehouseViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.Warehouse_WarehouseViewModel = Warehouse_WarehouseViewModel;
            var Notifications_NotificationViewModel = /** @class */ (function (_super) {
                __extends(Notifications_NotificationViewModel, _super);
                function Notifications_NotificationViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Diff: true, Id: true, OrderForecastQuantity: true, SalesForecastDate: true, TotalSupplierStock: true, Item: true, Warehouse: true
                        };
                    }
                    else {
                        _this._members["Diff"] = true;
                        _this._members["Id"] = true;
                        _this._members["OrderForecastQuantity"] = true;
                        _this._members["SalesForecastDate"] = true;
                        _this._members["TotalSupplierStock"] = true;
                        _this._members["Item"] = true;
                        _this._members["Warehouse"] = true;
                    }
                    return _this;
                }
                Notifications_NotificationViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.SalesForecastDate != null)
                        instance.SalesForecastDate = new Date(instance.SalesForecastDate);
                    if (instance.Item != null)
                        instance.Item = Notifications_Notification_Item_ItemViewModel._lightCast(instance.Item);
                    if (instance.Warehouse != null)
                        instance.Warehouse = Notifications_Notification_Warehouse_WarehouseViewModel._lightCast(instance.Warehouse);
                    return instance;
                };
                Notifications_NotificationViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Notifications_NotificationViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateNotifications_NotificationViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Notifications_NotificationViewModel.prototype._hydrateNotifications_NotificationViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Diff !== undefined)
                        this.Diff = original.Diff;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.OrderForecastQuantity !== undefined)
                        this.OrderForecastQuantity = original.OrderForecastQuantity;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.SalesForecastDate))
                        this.SalesForecastDate = new Date(original.SalesForecastDate);
                    if (original.TotalSupplierStock !== undefined)
                        this.TotalSupplierStock = original.TotalSupplierStock;
                    if (original.Item !== undefined)
                        this.Item = Notifications_Notification_Item_ItemViewModel._initializeFrom(original.Item, ignoreReadOnlyProperties, context);
                    if (original.Warehouse !== undefined)
                        this.Warehouse = Notifications_Notification_Warehouse_WarehouseViewModel._initializeFrom(original.Warehouse, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Notifications_NotificationViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Notifications_NotificationViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Notifications_NotificationViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Notifications_NotificationViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Notifications_NotificationViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.Notifications_NotificationViewModel = Notifications_NotificationViewModel;
            var Notifications_Notification_Item_ItemViewModel = /** @class */ (function (_super) {
                __extends(Notifications_Notification_Item_ItemViewModel, _super);
                function Notifications_Notification_Item_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, InnerPackSize: true, PalHI: true, PalletSize: true, PalletType: true, PalTI: true, SKU: true, SupplierPackSize: true, UOM: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["InnerPackSize"] = true;
                        _this._members["PalHI"] = true;
                        _this._members["PalletSize"] = true;
                        _this._members["PalletType"] = true;
                        _this._members["PalTI"] = true;
                        _this._members["SKU"] = true;
                        _this._members["SupplierPackSize"] = true;
                        _this._members["UOM"] = true;
                    }
                    return _this;
                }
                Notifications_Notification_Item_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Notifications_Notification_Item_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Notifications_Notification_Item_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateNotifications_Notification_Item_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Notifications_Notification_Item_ItemViewModel.prototype._hydrateNotifications_Notification_Item_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.InnerPackSize !== undefined)
                        this.InnerPackSize = original.InnerPackSize;
                    if (original.PalHI !== undefined)
                        this.PalHI = original.PalHI;
                    if (original.PalletSize !== undefined)
                        this.PalletSize = original.PalletSize;
                    if (original.PalletType !== undefined)
                        this.PalletType = original.PalletType;
                    if (original.PalTI !== undefined)
                        this.PalTI = original.PalTI;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.SupplierPackSize !== undefined)
                        this.SupplierPackSize = original.SupplierPackSize;
                    if (original.UOM !== undefined)
                        this.UOM = original.UOM;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Notifications_Notification_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Notifications_Notification_Item_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Notifications_Notification_Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Notifications_Notification_Item_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Notifications_Notification_Item_ItemViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.Notifications_Notification_Item_ItemViewModel = Notifications_Notification_Item_ItemViewModel;
            var Notifications_Notification_Warehouse_WarehouseViewModel = /** @class */ (function (_super) {
                __extends(Notifications_Notification_Warehouse_WarehouseViewModel, _super);
                function Notifications_Notification_Warehouse_WarehouseViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, Id: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Notifications_Notification_Warehouse_WarehouseViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Notifications_Notification_Warehouse_WarehouseViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Notifications_Notification_Warehouse_WarehouseViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateNotifications_Notification_Warehouse_WarehouseViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Notifications_Notification_Warehouse_WarehouseViewModel.prototype._hydrateNotifications_Notification_Warehouse_WarehouseViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Notifications_Notification_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Notifications_Notification_Warehouse_WarehouseViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Notifications_Notification_Warehouse_WarehouseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Notifications_Notification_Warehouse_WarehouseViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Notifications_Notification_Warehouse_WarehouseViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.Notifications_Notification_Warehouse_WarehouseViewModel = Notifications_Notification_Warehouse_WarehouseViewModel;
            var Category_CategoryViewModel = /** @class */ (function (_super) {
                __extends(Category_CategoryViewModel, _super);
                function Category_CategoryViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, SubCategory: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["SubCategory"] = true;
                    }
                    _this.SubCategory = new Array();
                    return _this;
                }
                Category_CategoryViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.SubCategory != null) {
                        for (var i = 0; i < instance.SubCategory.length; i++) {
                            instance.SubCategory[i] = Category_Category_SubCategory_SubCategoryViewModel._lightCast(instance.SubCategory[i]);
                        }
                    }
                    return instance;
                };
                Category_CategoryViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Category_CategoryViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateCategory_CategoryViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Category_CategoryViewModel.prototype._hydrateCategory_CategoryViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.SubCategory != null) {
                        for (var i = 0; i < original.SubCategory.length; i++) {
                            this.SubCategory.push(Category_Category_SubCategory_SubCategoryViewModel._initializeFrom(original.SubCategory[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Category_CategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Category_CategoryViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Category_CategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Category_CategoryViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Category_CategoryViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.Category_CategoryViewModel = Category_CategoryViewModel;
            var Category_Category_SubCategory_SubCategoryViewModel = /** @class */ (function (_super) {
                __extends(Category_Category_SubCategory_SubCategoryViewModel, _super);
                function Category_Category_SubCategory_SubCategoryViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Category_Category_SubCategory_SubCategoryViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Category_Category_SubCategory_SubCategoryViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Category_Category_SubCategory_SubCategoryViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateCategory_Category_SubCategory_SubCategoryViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Category_Category_SubCategory_SubCategoryViewModel.prototype._hydrateCategory_Category_SubCategory_SubCategoryViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Category_Category_SubCategory_SubCategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Category_Category_SubCategory_SubCategoryViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Category_Category_SubCategory_SubCategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Category_Category_SubCategory_SubCategoryViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Category_Category_SubCategory_SubCategoryViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.Category_Category_SubCategory_SubCategoryViewModel = Category_Category_SubCategory_SubCategoryViewModel;
            var SubCategory_SubCategoryViewModel = /** @class */ (function (_super) {
                __extends(SubCategory_SubCategoryViewModel, _super);
                function SubCategory_SubCategoryViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, BaseUnits: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["BaseUnits"] = true;
                    }
                    _this.BaseUnits = new Array();
                    return _this;
                }
                SubCategory_SubCategoryViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.BaseUnits != null) {
                        for (var i = 0; i < instance.BaseUnits.length; i++) {
                            instance.BaseUnits[i] = SubCategory_SubCategory_BaseUnits_BaseUnitViewModel._lightCast(instance.BaseUnits[i]);
                        }
                    }
                    return instance;
                };
                SubCategory_SubCategoryViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SubCategory_SubCategoryViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSubCategory_SubCategoryViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SubCategory_SubCategoryViewModel.prototype._hydrateSubCategory_SubCategoryViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.BaseUnits != null) {
                        for (var i = 0; i < original.BaseUnits.length; i++) {
                            this.BaseUnits.push(SubCategory_SubCategory_BaseUnits_BaseUnitViewModel._initializeFrom(original.BaseUnits[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SubCategory_SubCategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SubCategory_SubCategoryViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SubCategory_SubCategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SubCategory_SubCategoryViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SubCategory_SubCategoryViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.SubCategory_SubCategoryViewModel = SubCategory_SubCategoryViewModel;
            var SubCategory_SubCategory_BaseUnits_BaseUnitViewModel = /** @class */ (function (_super) {
                __extends(SubCategory_SubCategory_BaseUnits_BaseUnitViewModel, _super);
                function SubCategory_SubCategory_BaseUnits_BaseUnitViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                SubCategory_SubCategory_BaseUnits_BaseUnitViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                SubCategory_SubCategory_BaseUnits_BaseUnitViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SubCategory_SubCategory_BaseUnits_BaseUnitViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSubCategory_SubCategory_BaseUnits_BaseUnitViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SubCategory_SubCategory_BaseUnits_BaseUnitViewModel.prototype._hydrateSubCategory_SubCategory_BaseUnits_BaseUnitViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SubCategory_SubCategory_BaseUnits_BaseUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SubCategory_SubCategory_BaseUnits_BaseUnitViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SubCategory_SubCategory_BaseUnits_BaseUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                SubCategory_SubCategory_BaseUnits_BaseUnitViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return SubCategory_SubCategory_BaseUnits_BaseUnitViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.SubCategory_SubCategory_BaseUnits_BaseUnitViewModel = SubCategory_SubCategory_BaseUnits_BaseUnitViewModel;
            var BaseUnit_BaseUnitViewModel = /** @class */ (function (_super) {
                __extends(BaseUnit_BaseUnitViewModel, _super);
                function BaseUnit_BaseUnitViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                BaseUnit_BaseUnitViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                BaseUnit_BaseUnitViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new BaseUnit_BaseUnitViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateBaseUnit_BaseUnitViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                BaseUnit_BaseUnitViewModel.prototype._hydrateBaseUnit_BaseUnitViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = BaseUnit_BaseUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                BaseUnit_BaseUnitViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = BaseUnit_BaseUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                BaseUnit_BaseUnitViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return BaseUnit_BaseUnitViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.BaseUnit_BaseUnitViewModel = BaseUnit_BaseUnitViewModel;
            var BusinessUnit_BusinessUnitViewModel = /** @class */ (function (_super) {
                __extends(BusinessUnit_BusinessUnitViewModel, _super);
                function BusinessUnit_BusinessUnitViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true, Categories: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                        _this._members["Categories"] = true;
                    }
                    _this.Categories = new Array();
                    return _this;
                }
                BusinessUnit_BusinessUnitViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Categories != null) {
                        for (var i = 0; i < instance.Categories.length; i++) {
                            instance.Categories[i] = BusinessUnit_BusinessUnit_Categories_CategoryViewModel._lightCast(instance.Categories[i]);
                        }
                    }
                    return instance;
                };
                BusinessUnit_BusinessUnitViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new BusinessUnit_BusinessUnitViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateBusinessUnit_BusinessUnitViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                BusinessUnit_BusinessUnitViewModel.prototype._hydrateBusinessUnit_BusinessUnitViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Categories != null) {
                        for (var i = 0; i < original.Categories.length; i++) {
                            this.Categories.push(BusinessUnit_BusinessUnit_Categories_CategoryViewModel._initializeFrom(original.Categories[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = BusinessUnit_BusinessUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                BusinessUnit_BusinessUnitViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = BusinessUnit_BusinessUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                BusinessUnit_BusinessUnitViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return BusinessUnit_BusinessUnitViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.BusinessUnit_BusinessUnitViewModel = BusinessUnit_BusinessUnitViewModel;
            var BusinessUnit_BusinessUnit_Categories_CategoryViewModel = /** @class */ (function (_super) {
                __extends(BusinessUnit_BusinessUnit_Categories_CategoryViewModel, _super);
                function BusinessUnit_BusinessUnit_Categories_CategoryViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Id: true
                        };
                    }
                    else {
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                BusinessUnit_BusinessUnit_Categories_CategoryViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                BusinessUnit_BusinessUnit_Categories_CategoryViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new BusinessUnit_BusinessUnit_Categories_CategoryViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateBusinessUnit_BusinessUnit_Categories_CategoryViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                BusinessUnit_BusinessUnit_Categories_CategoryViewModel.prototype._hydrateBusinessUnit_BusinessUnit_Categories_CategoryViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = BusinessUnit_BusinessUnit_Categories_CategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                BusinessUnit_BusinessUnit_Categories_CategoryViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = BusinessUnit_BusinessUnit_Categories_CategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                BusinessUnit_BusinessUnit_Categories_CategoryViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return BusinessUnit_BusinessUnit_Categories_CategoryViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.BusinessUnit_BusinessUnit_Categories_CategoryViewModel = BusinessUnit_BusinessUnit_Categories_CategoryViewModel;
            var Item_ItemViewModel = /** @class */ (function (_super) {
                __extends(Item_ItemViewModel, _super);
                function Item_ItemViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, InnerPackSize: true, PalHI: true, PalletSize: true, PalletType: true, PalTI: true, SKU: true, SupplierPackSize: true, UOM: true, Supplier: true, BusinessUnit: true, Category: true, SubCategory: true, BaseUnit: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["InnerPackSize"] = true;
                        _this._members["PalHI"] = true;
                        _this._members["PalletSize"] = true;
                        _this._members["PalletType"] = true;
                        _this._members["PalTI"] = true;
                        _this._members["SKU"] = true;
                        _this._members["SupplierPackSize"] = true;
                        _this._members["UOM"] = true;
                        _this._members["Supplier"] = true;
                        _this._members["BusinessUnit"] = true;
                        _this._members["Category"] = true;
                        _this._members["SubCategory"] = true;
                        _this._members["BaseUnit"] = true;
                    }
                    return _this;
                }
                Item_ItemViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Supplier != null)
                        instance.Supplier = Item_Item_Supplier_SupplierViewModel._lightCast(instance.Supplier);
                    if (instance.BusinessUnit != null)
                        instance.BusinessUnit = Item_Item_BusinessUnit_BusinessUnitViewModel._lightCast(instance.BusinessUnit);
                    if (instance.Category != null)
                        instance.Category = Item_Item_Category_CategoryViewModel._lightCast(instance.Category);
                    if (instance.SubCategory != null)
                        instance.SubCategory = Item_Item_SubCategory_SubCategoryViewModel._lightCast(instance.SubCategory);
                    if (instance.BaseUnit != null)
                        instance.BaseUnit = Item_Item_BaseUnit_BaseUnitViewModel._lightCast(instance.BaseUnit);
                    return instance;
                };
                Item_ItemViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Item_ItemViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItem_ItemViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Item_ItemViewModel.prototype._hydrateItem_ItemViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.InnerPackSize !== undefined)
                        this.InnerPackSize = original.InnerPackSize;
                    if (original.PalHI !== undefined)
                        this.PalHI = original.PalHI;
                    if (original.PalletSize !== undefined)
                        this.PalletSize = original.PalletSize;
                    if (original.PalletType !== undefined)
                        this.PalletType = original.PalletType;
                    if (original.PalTI !== undefined)
                        this.PalTI = original.PalTI;
                    if (original.SKU !== undefined)
                        this.SKU = original.SKU;
                    if (original.SupplierPackSize !== undefined)
                        this.SupplierPackSize = original.SupplierPackSize;
                    if (original.UOM !== undefined)
                        this.UOM = original.UOM;
                    if (original.Supplier !== undefined)
                        this.Supplier = Item_Item_Supplier_SupplierViewModel._initializeFrom(original.Supplier, ignoreReadOnlyProperties, context);
                    if (original.BusinessUnit !== undefined)
                        this.BusinessUnit = Item_Item_BusinessUnit_BusinessUnitViewModel._initializeFrom(original.BusinessUnit, ignoreReadOnlyProperties, context);
                    if (original.Category !== undefined)
                        this.Category = Item_Item_Category_CategoryViewModel._initializeFrom(original.Category, ignoreReadOnlyProperties, context);
                    if (original.SubCategory !== undefined)
                        this.SubCategory = Item_Item_SubCategory_SubCategoryViewModel._initializeFrom(original.SubCategory, ignoreReadOnlyProperties, context);
                    if (original.BaseUnit !== undefined)
                        this.BaseUnit = Item_Item_BaseUnit_BaseUnitViewModel._initializeFrom(original.BaseUnit, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Item_ItemViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Item_ItemViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Item_ItemViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Item_ItemViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.Item_ItemViewModel = Item_ItemViewModel;
            var Item_Item_Supplier_SupplierViewModel = /** @class */ (function (_super) {
                __extends(Item_Item_Supplier_SupplierViewModel, _super);
                function Item_Item_Supplier_SupplierViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Code: true, Id: true, Name: true
                        };
                    }
                    else {
                        _this._members["Code"] = true;
                        _this._members["Id"] = true;
                        _this._members["Name"] = true;
                    }
                    return _this;
                }
                Item_Item_Supplier_SupplierViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Item_Item_Supplier_SupplierViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Item_Item_Supplier_SupplierViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItem_Item_Supplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Item_Item_Supplier_SupplierViewModel.prototype._hydrateItem_Item_Supplier_SupplierViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Code !== undefined)
                        this.Code = original.Code;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Item_Item_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Item_Item_Supplier_SupplierViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Item_Item_Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Item_Item_Supplier_SupplierViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Item_Item_Supplier_SupplierViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.Item_Item_Supplier_SupplierViewModel = Item_Item_Supplier_SupplierViewModel;
            var Item_Item_BusinessUnit_BusinessUnitViewModel = /** @class */ (function (_super) {
                __extends(Item_Item_BusinessUnit_BusinessUnitViewModel, _super);
                function Item_Item_BusinessUnit_BusinessUnitViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, Id: true, Number: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["Id"] = true;
                        _this._members["Number"] = true;
                    }
                    return _this;
                }
                Item_Item_BusinessUnit_BusinessUnitViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Item_Item_BusinessUnit_BusinessUnitViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Item_Item_BusinessUnit_BusinessUnitViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItem_Item_BusinessUnit_BusinessUnitViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Item_Item_BusinessUnit_BusinessUnitViewModel.prototype._hydrateItem_Item_BusinessUnit_BusinessUnitViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Number !== undefined)
                        this.Number = original.Number;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Item_Item_BusinessUnit_BusinessUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Item_Item_BusinessUnit_BusinessUnitViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Item_Item_BusinessUnit_BusinessUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Item_Item_BusinessUnit_BusinessUnitViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Item_Item_BusinessUnit_BusinessUnitViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.Item_Item_BusinessUnit_BusinessUnitViewModel = Item_Item_BusinessUnit_BusinessUnitViewModel;
            var Item_Item_Category_CategoryViewModel = /** @class */ (function (_super) {
                __extends(Item_Item_Category_CategoryViewModel, _super);
                function Item_Item_Category_CategoryViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, Id: true, Number: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["Id"] = true;
                        _this._members["Number"] = true;
                    }
                    return _this;
                }
                Item_Item_Category_CategoryViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Item_Item_Category_CategoryViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Item_Item_Category_CategoryViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItem_Item_Category_CategoryViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Item_Item_Category_CategoryViewModel.prototype._hydrateItem_Item_Category_CategoryViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Number !== undefined)
                        this.Number = original.Number;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Item_Item_Category_CategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Item_Item_Category_CategoryViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Item_Item_Category_CategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Item_Item_Category_CategoryViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Item_Item_Category_CategoryViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.Item_Item_Category_CategoryViewModel = Item_Item_Category_CategoryViewModel;
            var Item_Item_SubCategory_SubCategoryViewModel = /** @class */ (function (_super) {
                __extends(Item_Item_SubCategory_SubCategoryViewModel, _super);
                function Item_Item_SubCategory_SubCategoryViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, Id: true, Number: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["Id"] = true;
                        _this._members["Number"] = true;
                    }
                    return _this;
                }
                Item_Item_SubCategory_SubCategoryViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Item_Item_SubCategory_SubCategoryViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Item_Item_SubCategory_SubCategoryViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItem_Item_SubCategory_SubCategoryViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Item_Item_SubCategory_SubCategoryViewModel.prototype._hydrateItem_Item_SubCategory_SubCategoryViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Number !== undefined)
                        this.Number = original.Number;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Item_Item_SubCategory_SubCategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Item_Item_SubCategory_SubCategoryViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Item_Item_SubCategory_SubCategoryViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Item_Item_SubCategory_SubCategoryViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Item_Item_SubCategory_SubCategoryViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.Item_Item_SubCategory_SubCategoryViewModel = Item_Item_SubCategory_SubCategoryViewModel;
            var Item_Item_BaseUnit_BaseUnitViewModel = /** @class */ (function (_super) {
                __extends(Item_Item_BaseUnit_BaseUnitViewModel, _super);
                function Item_Item_BaseUnit_BaseUnitViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Description: true, Id: true, Number: true
                        };
                    }
                    else {
                        _this._members["Description"] = true;
                        _this._members["Id"] = true;
                        _this._members["Number"] = true;
                    }
                    return _this;
                }
                Item_Item_BaseUnit_BaseUnitViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Item_Item_BaseUnit_BaseUnitViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Item_Item_BaseUnit_BaseUnitViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateItem_Item_BaseUnit_BaseUnitViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Item_Item_BaseUnit_BaseUnitViewModel.prototype._hydrateItem_Item_BaseUnit_BaseUnitViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Number !== undefined)
                        this.Number = original.Number;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Item_Item_BaseUnit_BaseUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Item_Item_BaseUnit_BaseUnitViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Item_Item_BaseUnit_BaseUnitViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Item_Item_BaseUnit_BaseUnitViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Item_Item_BaseUnit_BaseUnitViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.Item_Item_BaseUnit_BaseUnitViewModel = Item_Item_BaseUnit_BaseUnitViewModel;
            var Supplier_SupplierViewModel = /** @class */ (function (_super) {
                __extends(Supplier_SupplierViewModel, _super);
                function Supplier_SupplierViewModel() {
                    var _this = _super.call(this) || this;
                    _this._clientPostedProps = null;
                    if (_this._members == null) {
                        _this._members = {
                            Code: true, Id: true
                        };
                    }
                    else {
                        _this._members["Code"] = true;
                        _this._members["Id"] = true;
                    }
                    return _this;
                }
                Supplier_SupplierViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Supplier_SupplierViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Supplier_SupplierViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSupplier_SupplierViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Supplier_SupplierViewModel.prototype._hydrateSupplier_SupplierViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Code !== undefined)
                        this.Code = original.Code;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Supplier_SupplierViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Supplier_SupplierViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                Supplier_SupplierViewModel.prototype.hasMember = function (propertyName) {
                    var result = this._members[propertyName];
                    if (result == null) {
                        return false;
                    }
                    return this._members[propertyName];
                };
                return Supplier_SupplierViewModel;
            }(BaseClass.ViewModel));
            NewDashboard.Supplier_SupplierViewModel = Supplier_SupplierViewModel;
        })(NewDashboard = ViewModels.NewDashboard || (ViewModels.NewDashboard = {}));
    })(ViewModels = DSS1_RetailerDriverStockOptimisation.ViewModels || (DSS1_RetailerDriverStockOptimisation.ViewModels = {}));
})(DSS1_RetailerDriverStockOptimisation || (DSS1_RetailerDriverStockOptimisation = {}));
