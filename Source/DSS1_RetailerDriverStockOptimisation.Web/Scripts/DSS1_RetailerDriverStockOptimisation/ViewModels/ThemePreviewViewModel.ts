// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
namespace DSS1_RetailerDriverStockOptimisation.ViewModels.ThemePreview {
export class ThemePreviewViewModel extends DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Ops:
true,JustDate:
true,JustString:
true,AnImageUrl:
true,JustAnInt:
true,Users:
                true
            }
        } else {
            this._members["Ops"] = true;
            this._members["JustDate"] = true;
            this._members["JustString"] = true;
            this._members["AnImageUrl"] = true;
            this._members["JustAnInt"] = true;
            this._members["Users"] = true;
        }

        this.Ops = new Array<any>();
        this.Users = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;


        if(instance.Ops != null) {
            for(let i = 0; i < instance.Ops.length; i++) {
                instance.Ops[i] = Ops_ApplicationOperationViewModel._lightCast(instance.Ops[i]);

            }
        }
        if(instance.JustDate != null) instance.JustDate = new Date(instance.JustDate);

        if(instance.Users != null) {
            for(let i = 0; i < instance.Users.length; i++) {
                instance.Users[i] = Users_ApplicationUserViewModel._lightCast(instance.Users[i]);

            }
        }
        return instance;
    }

    public static _initializeFrom(original: ThemePreviewViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): ThemePreviewViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        ThemePreviewViewModel = new ThemePreviewViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateThemePreviewViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateThemePreviewViewModel(original: ThemePreviewViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;


        if(original.Ops != null) {
            for(let i = 0; i < original.Ops.length; i++) {
                this.Ops.push(Ops_ApplicationOperationViewModel._initializeFrom(original.Ops[i], ignoreReadOnlyProperties, context));
            }
        }
        if(!CLMS.Framework.String.IsNullOrEmpty(original.JustDate)) this.JustDate = new Date(original.JustDate);
        if(original.JustString !== undefined) this.JustString = original.JustString;
        if(original.AnImageUrl !== undefined) this.AnImageUrl = original.AnImageUrl;
        if(original.JustAnInt !== undefined) this.JustAnInt = original.JustAnInt;

        if(original.Users != null) {
            for(let i = 0; i < original.Users.length; i++) {
                this.Users.push(Users_ApplicationUserViewModel._initializeFrom(original.Users[i], ignoreReadOnlyProperties, context));
            }
        }
        this.DropdownBoxSelectedItemKeys = original.DropdownBoxSelectedItemKeys;
        this.DropdownBox1SelectedItemKeys = original.DropdownBox1SelectedItemKeys;
        this.OptionButtonSelectedItemKeys = original.OptionButtonSelectedItemKeys;
        this.ChartSelectedItemKeys = original.ChartSelectedItemKeys;
        this.NewMapSelectedItemKeys = original.NewMapSelectedItemKeys;
        this.Table2SelectedItemKeys = original.Table2SelectedItemKeys;
        this.ListSelectedItemKeys = original.ListSelectedItemKeys;
        this.PickListSelectedItemKeys = original.PickListSelectedItemKeys;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = ThemePreviewViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            ThemePreviewViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): ThemePreviewViewModel {
        var reduced = ThemePreviewViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        ThemePreviewViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: ThemePreviewViewModel) {
        if (reduced == null) return;


        DSS1_RetailerDriverStockOptimisation.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Ops:
    Array<any>;
public JustDate:
    any;
public JustString:
    any;
public AnImageUrl:
    any;
public JustAnInt:
    any;
public Users:
    Array<any>;
public DropdownBoxSelectedItemKeys:
    any[];
public DropdownBox1SelectedItemKeys:
    any[];
public OptionButtonSelectedItemKeys:
    any[];
public ChartSelectedItemKeys:
    any[];
public NewMapSelectedItemKeys:
    any[];
public Table2SelectedItemKeys:
    any[];
public ListSelectedItemKeys:
    any[];
public PickListSelectedItemKeys:
    any[];
}

export class Ops_ApplicationOperationViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
Id:
true,IsAvailableToAnonymous:
true,Name:
true,ParentControllerName:
                true
            }
        } else {
            this._members["Id"] = true;
            this._members["IsAvailableToAnonymous"] = true;
            this._members["Name"] = true;
            this._members["ParentControllerName"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Ops_ApplicationOperationViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Ops_ApplicationOperationViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Ops_ApplicationOperationViewModel = new Ops_ApplicationOperationViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateOps_ApplicationOperationViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateOps_ApplicationOperationViewModel(original: Ops_ApplicationOperationViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.IsAvailableToAnonymous !== undefined) this.IsAvailableToAnonymous = original.IsAvailableToAnonymous;
        if(original.Name !== undefined) this.Name = original.Name;
        if(original.ParentControllerName !== undefined) this.ParentControllerName = original.ParentControllerName;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Ops_ApplicationOperationViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Ops_ApplicationOperationViewModel {
        var reduced = Ops_ApplicationOperationViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public Id:
    any;
public IsAvailableToAnonymous:
    any;
public Name:
    any;
public ParentControllerName:
    any;
    public _versionTimestamp?: string;
}

export class Users_ApplicationUserViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this._clientPostedProps = null;
        if (this._members == null) {
            this._members = {
UserName:
                true
            }
        } else {
            this._members["UserName"] = true;
        }

    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Users_ApplicationUserViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Users_ApplicationUserViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Users_ApplicationUserViewModel = new Users_ApplicationUserViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateUsers_ApplicationUserViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateUsers_ApplicationUserViewModel(original: Users_ApplicationUserViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.UserName !== undefined) this.UserName = original.UserName;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Users_ApplicationUserViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Users_ApplicationUserViewModel {
        var reduced = Users_ApplicationUserViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }

protected _members:
    any;
protected _clientPostedProps:
    any;

    public hasMember(propertyName: string): boolean {
        const result = this._members[propertyName];
        if (result == null) {
            return false;
        }
        return this._members[propertyName];
    }

public UserName:
    any;
    public _versionTimestamp?: string;
}

}
