// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.Text;
using System.ServiceModel.Channels;
using System.Security.Permissions;
using System.Security.Principal;
using NHibernate;
using System.ServiceModel.Activation;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Data.Domain;
using DSS1_RetailerDriverStockOptimisation.Services.OrderForecastService.DataContracts;
using DSS1_RetailerDriverStockOptimisation.BO;
using AutoMapper;

namespace DSS1_RetailerDriverStockOptimisation.Services
{
    [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Required)]
    public class OrderForecastServiceService : IOrderForecastServiceService
    {
        public System.Collections.Generic.List<OrderForecastDetailsDTO> CalculateForSKU(string _sku, string _RequestSourceIp, string _UserName)
        {
            InitializeMappers();
            try
            {
                var inputsku = _sku;
                var _calculateForSKU = CalculateForSKUImplementation(inputsku);
                var result = Mapper.Map<System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.OrderForecastDetails>, System.Collections.Generic.List<OrderForecastDetailsDTO>>(_calculateForSKU);
                return result;
            }
            catch (Exception @exception)
            {
                log4net.LogManager.GetLogger("OrderForecastService Service").Error(@exception);
                throw;
            }
        }


        private void InitializeMappers()
        {
            Mapper.CreateMap<OrderForecastDetailsDTO, DSS1_RetailerDriverStockOptimisation.BO.OrderForecastDetails>();
            Mapper.CreateMap<DSS1_RetailerDriverStockOptimisation.BO.OrderForecastDetails, OrderForecastDetailsDTO>();
            Mapper.CreateMap<WarehouseDTO, DSS1_RetailerDriverStockOptimisation.BO.Warehouse>();
            Mapper.CreateMap<DSS1_RetailerDriverStockOptimisation.BO.Warehouse, WarehouseDTO>();
            Mapper.CreateMap<ItemDTO, DSS1_RetailerDriverStockOptimisation.BO.Item>();
            Mapper.CreateMap<DSS1_RetailerDriverStockOptimisation.BO.Item, ItemDTO>();
            Mapper.CreateMap<SupplierDTO, DSS1_RetailerDriverStockOptimisation.BO.Supplier>();
            Mapper.CreateMap<DSS1_RetailerDriverStockOptimisation.BO.Supplier, SupplierDTO>();
            Mapper.CreateMap<BusinessUnitDTO, DSS1_RetailerDriverStockOptimisation.BO.BusinessUnit>();
            Mapper.CreateMap<DSS1_RetailerDriverStockOptimisation.BO.BusinessUnit, BusinessUnitDTO>();
            Mapper.CreateMap<CategoryDTO, DSS1_RetailerDriverStockOptimisation.BO.Category>();
            Mapper.CreateMap<DSS1_RetailerDriverStockOptimisation.BO.Category, CategoryDTO>();
            Mapper.CreateMap<SubCategoryDTO, DSS1_RetailerDriverStockOptimisation.BO.SubCategory>();
            Mapper.CreateMap<DSS1_RetailerDriverStockOptimisation.BO.SubCategory, SubCategoryDTO>();
            Mapper.CreateMap<BaseUnitDTO, DSS1_RetailerDriverStockOptimisation.BO.BaseUnit>();
            Mapper.CreateMap<DSS1_RetailerDriverStockOptimisation.BO.BaseUnit, BaseUnitDTO>();
        }

        public static System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.OrderForecastDetails> CalculateForSKUImplementation(string sku)
        {
            return new DSS1_RetailerDriverStockOptimisation.DAL.Repository().Get<DSS1_RetailerDriverStockOptimisation.BO.OrderForecastDetails>((a) => a.Item.SKU == sku);
        }


    }
}