
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).

using System;
using System.Runtime.Serialization;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Reflection;
using System.Collections;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Configuration;
using zAppDev.DotNet.Framework.Data.Domain;

using DSS1_RetailerDriverStockOptimisation.DAL;

namespace DSS1_RetailerDriverStockOptimisation.BO
{
	/// <summary>
	/// The Stats extensions
	/// </summary>
	public static class StatsExtensions
	{
        public static System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Stats> ItemSLADeiveryWithCriteria(string sku){using (new zAppDev.DotNet.Framework.Profiling.Profiler("Stats", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "ItemSLADeiveryWithCriteria")) {
decimal? result = new decimal?();
System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Stats> stats = new System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Stats>();
System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Item> items = new System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Item>();
DSS1_RetailerDriverStockOptimisation.BO.Item foundItem = new DSS1_RetailerDriverStockOptimisation.BO.Item();
if ((sku == null || sku == "")) {
}
else {
try {
foundItem =  new DSS1_RetailerDriverStockOptimisation.DAL.Repository().GetById<DSS1_RetailerDriverStockOptimisation.BO.Item>(sku);}
catch (System.Exception x) {
}
if (foundItem != null) {
}
}
foreach (var slaDelivery in foundItem?.SLADeliveries ?? Enumerable.Empty<DSS1_RetailerDriverStockOptimisation.BO.SLADelivery>()) {
DSS1_RetailerDriverStockOptimisation.BO.Stats stat = new DSS1_RetailerDriverStockOptimisation.BO.Stats();
stat.Item = foundItem;stat.Percentage = (slaDelivery?.Percentage ?? 0);stat.DateFormatted = (slaDelivery?.SLADate?.ToString("yyyy/MM/dd") ?? "");stat.Threshold = (slaDelivery?.Threshold ?? 0);stat.Date = (slaDelivery?.SLADate ?? System.Data.SqlTypes.SqlDateTime.MinValue.Value);stats?.Add(stat);
}
stats = stats?.OrderBy((a) => a.Date).ToList().ToList();return stats;
}
}


public static System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Stats> ItemSLADeivery(string sku){using (new zAppDev.DotNet.Framework.Profiling.Profiler("Stats", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "ItemSLADeivery")) {
decimal? result = new decimal?();
System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Stats> stats = new System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Stats>();
System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Item> items = new System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Item>();
DSS1_RetailerDriverStockOptimisation.BO.Item foundItem = new DSS1_RetailerDriverStockOptimisation.BO.Item();
if ((sku == null || sku == "")) {
}
else {
try {
foundItem =  new DSS1_RetailerDriverStockOptimisation.DAL.Repository().GetById<DSS1_RetailerDriverStockOptimisation.BO.Item>(sku);}
catch (System.Exception x) {
}
if (foundItem != null) {
}
}
foreach (var slaDelivery in foundItem?.SLADeliveries ?? Enumerable.Empty<DSS1_RetailerDriverStockOptimisation.BO.SLADelivery>()) {
DSS1_RetailerDriverStockOptimisation.BO.Stats stat = new DSS1_RetailerDriverStockOptimisation.BO.Stats();
stat.Item = foundItem;stat.Percentage = (slaDelivery?.Percentage ?? 0);stat.DateFormatted = (slaDelivery?.SLADate?.ToString("yyyy/MM/dd") ?? "");stat.Threshold = (slaDelivery?.Threshold ?? 0);stat.Date = (slaDelivery?.SLADate ?? System.Data.SqlTypes.SqlDateTime.MinValue.Value);stats?.Add(stat);
}
stats = stats?.OrderBy((a) => a.Date).ToList().ToList();return stats;
}
}


public static System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Stats> itemSLALeadTime(string sku){using (new zAppDev.DotNet.Framework.Profiling.Profiler("Stats", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "itemSLALeadTime")) {
decimal? result = new decimal?();
System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Stats> stats = new System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Stats>();
System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Item> items = new System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Item>();
DSS1_RetailerDriverStockOptimisation.BO.Item foundItem = new DSS1_RetailerDriverStockOptimisation.BO.Item();
if ((sku == null || sku == "")) {
}
else {
try {
foundItem =  new DSS1_RetailerDriverStockOptimisation.DAL.Repository().GetById<DSS1_RetailerDriverStockOptimisation.BO.Item>(sku);}
catch (System.Exception x) {
}
if (foundItem != null) {
}
}
foreach (var slaLead in foundItem?.SLALeadTimes?.Take(10).ToList() ?? Enumerable.Empty<DSS1_RetailerDriverStockOptimisation.BO.SLALeadTime>()) {
DSS1_RetailerDriverStockOptimisation.BO.Stats stat = new DSS1_RetailerDriverStockOptimisation.BO.Stats();
stat.Item = foundItem;stat.Percentage = (slaLead?.Percentage ?? 0);stat.DateFormatted = (slaLead?.SLALeadDate?.ToString("MMMM dd, yyyy") ?? "");stat.Threshold = (slaLead?.Threshold ?? 0);stat.Date = (slaLead?.SLALeadDate ?? System.Data.SqlTypes.SqlDateTime.MinValue.Value);stats?.Add(stat);
}
stats = stats?.OrderBy((a) => a.Date).ToList().ToList();return stats;
}
}


public static System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Stats> ItemWaste(string sku){using (new zAppDev.DotNet.Framework.Profiling.Profiler("Stats", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "ItemWaste")) {
System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Stats> stats = new System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Stats>();
decimal? result = new decimal?();
System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Item> items = new System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Item>();
DSS1_RetailerDriverStockOptimisation.BO.Item foundItem = new DSS1_RetailerDriverStockOptimisation.BO.Item();
if ((sku == null || sku == "")) {
}
else {
try {
foundItem =  new DSS1_RetailerDriverStockOptimisation.DAL.Repository().GetById<DSS1_RetailerDriverStockOptimisation.BO.Item>(sku);}
catch (System.Exception x) {
}
if (foundItem != null) {
}
}
System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.WasteOld> wastes = new DSS1_RetailerDriverStockOptimisation.DAL.Repository().Get<DSS1_RetailerDriverStockOptimisation.BO.WasteOld>((a) => a.Item.SKU == foundItem.SKU);
foreach (var waste in wastes ?? Enumerable.Empty<DSS1_RetailerDriverStockOptimisation.BO.WasteOld>()) {
DSS1_RetailerDriverStockOptimisation.BO.Stats stat = new DSS1_RetailerDriverStockOptimisation.BO.Stats();
stat.Item = foundItem;stat.Percentage = (waste?.WastePercentage ?? 0);stat.DateFormatted = (waste?.DateFormatted ?? "");stats?.Add(stat);
}
stats = stats?.OrderBy((a) => a.Date).ToList().ToList();return stats;
}
}



        
	}
}
