
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).

using System;
using System.Runtime.Serialization;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Reflection;
using System.Collections;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Configuration;
using zAppDev.DotNet.Framework.Data.Domain;

using DSS1_RetailerDriverStockOptimisation.DAL;

namespace DSS1_RetailerDriverStockOptimisation.BO
{
	/// <summary>
	/// The Item extensions
	/// </summary>
	public static class ItemExtensions
	{
        public static bool Exists(this BO.Item @this){using (new zAppDev.DotNet.Framework.Profiling.Profiler("Item", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "Exists")) {
var _var0 = @this?.SKU;if (new DSS1_RetailerDriverStockOptimisation.DAL.Repository().GetCount<DSS1_RetailerDriverStockOptimisation.BO.Item>((a) => a.SKU == _var0) > 0) {
return true;
}
return false;
}
}


public static int? GetUnitsOfStock(DSS1_RetailerDriverStockOptimisation.BO.StockOnHand stock){using (new zAppDev.DotNet.Framework.Profiling.Profiler("Item", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "GetUnitsOfStock")) {
var _var1 = (stock?.StockOnHandDate?.Date ?? System.Data.SqlTypes.SqlDateTime.MinValue.Value);DSS1_RetailerDriverStockOptimisation.BO.StockOnHand lastStock = new DSS1_RetailerDriverStockOptimisation.DAL.Repository().GetAsQueryable<DSS1_RetailerDriverStockOptimisation.BO.StockOnHand>((a) => a.StockOnHandDate.GetValueOrDefault(System.Data.SqlTypes.SqlDateTime.MinValue.Value).Date < _var1)?.OrderByDescending((b) => b.StockOnHandDate.GetValueOrDefault(System.Data.SqlTypes.SqlDateTime.MinValue.Value).Date).FirstOrDefault();
if ((lastStock == null)) {
return 0;
}
int? LastPastStock = (lastStock?.Units ?? 0);
var _var2 = stock?.StockOnHandDate?.Date;var _var3 = stock?.Warehouse?.Id;var _var4 = stock?.Item?.SKU;DSS1_RetailerDriverStockOptimisation.BO.SalesForecastDetails salesforecast = new DSS1_RetailerDriverStockOptimisation.DAL.Repository().GetAsQueryable<DSS1_RetailerDriverStockOptimisation.BO.SalesForecastDetails>((s) => s.ForecastDate.GetValueOrDefault(System.Data.SqlTypes.SqlDateTime.MinValue.Value).Date == _var2 && _var3 == s.Warehouse.Id && s.Item.SKU == _var4)?.FirstOrDefault();
if ((salesforecast == null)) {
return 0;
}
int? salesForecastUnits = (salesforecast?.Units ?? 0);
return (LastPastStock.GetValueOrDefault(0) - salesForecastUnits.GetValueOrDefault(0));
}
}


public static System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Item> ItemsInSelectedForecast(DSS1_RetailerDriverStockOptimisation.BO.OrderForecast selectedOrderForecast){using (new zAppDev.DotNet.Framework.Profiling.Profiler("Item", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "ItemsInSelectedForecast")) {
System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Item> items = new System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.Item>();
if ((selectedOrderForecast == null)) {
return items;
}
zAppDev.DotNet.Framework.Data.MiniSessionManager.Instance.Session.Refresh(selectedOrderForecast);
System.Collections.Generic.List<DSS1_RetailerDriverStockOptimisation.BO.ItemParameter> itemParams = selectedOrderForecast?.ItemParameters;
foreach (var i in itemParams ?? Enumerable.Empty<DSS1_RetailerDriverStockOptimisation.BO.ItemParameter>()) {
items?.Add(i?.Item);
}
return items;
}
}



        
	}
}
