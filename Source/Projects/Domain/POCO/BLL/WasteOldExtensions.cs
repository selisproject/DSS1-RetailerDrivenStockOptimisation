
// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).

using System;
using System.Runtime.Serialization;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Reflection;
using System.Collections;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Configuration;
using zAppDev.DotNet.Framework.Data.Domain;

using DSS1_RetailerDriverStockOptimisation.DAL;

namespace DSS1_RetailerDriverStockOptimisation.BO
{
	/// <summary>
	/// The WasteOld extensions
	/// </summary>
	public static class WasteOldExtensions
	{
        public static void CreateWastePerSKU(){using (new zAppDev.DotNet.Framework.Profiling.Profiler("WasteOld", zAppDev.DotNet.Framework.Profiling.AppDevSymbolType.ClassOperation, "CreateWastePerSKU")) {
foreach (var item in new DSS1_RetailerDriverStockOptimisation.DAL.Repository().GetAll<DSS1_RetailerDriverStockOptimisation.BO.Item>() ?? Enumerable.Empty<DSS1_RetailerDriverStockOptimisation.BO.Item>()) {
foreach (var pastOrder in item?.PastOrders?.Take(10).ToList() ?? Enumerable.Empty<DSS1_RetailerDriverStockOptimisation.BO.PastOrder>()) {
DSS1_RetailerDriverStockOptimisation.BO.WasteOld newWaste = new DSS1_RetailerDriverStockOptimisation.BO.WasteOld();
decimal? a = (pastOrder?.QuantityReceived ?? 0) / 500;
newWaste.SKU = (item?.SKU ?? "");newWaste.Item = item;newWaste.ItemDescription = (item?.Description?.Substring(0, 15) ?? "");newWaste.WastePercentage = a;newWaste.DateFormatted = (pastOrder?.ReceiveDate?.ToString("MMMM dd, yyyy") ?? "");new DSS1_RetailerDriverStockOptimisation.DAL.Repository().Save<DSS1_RetailerDriverStockOptimisation.BO.WasteOld>(newWaste);
}
}
}
}



        
	}
}
