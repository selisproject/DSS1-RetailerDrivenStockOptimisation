// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).

using System;
using System.Collections.Generic;
using System.Linq;
using NUnit.Framework;
using FluentNHibernate.Testing;
using DSS1_RetailerDriverStockOptimisation.BO;
using DSS1_RetailerDriverStockOptimisation.BoTesting.Tests.Common;
using DSS1_RetailerDriverStockOptimisation.DAL;

namespace DSS1_RetailerDriverStockOptimisation.BoTesting.Tests
{
    /// <summary>
    ///This is a test class for AppNotificationTest and is intended
    ///to contain all AppNotificationTest NUnit Tests
    ///</summary>
    [TestFixture]
    [Description("AppNotification Repository Tests")]
    [Category("AppNotification Repository Tests")]
    internal class AppNotificationTests : NHibernateFixture
    {
        /// <summary>
        ///A test for testing the persistence of an object from Db
        ///</summary>
        [Test]
        [Description("This tests the persistence of `AppNotification`")]
        [Order(0)]
        public void AppNotification_persistence_test()
        {
            DateTime now = DateTime.Now;
            // Get datetime without milliseconds
            now = new DateTime(now.Ticks - (now.Ticks % TimeSpan.TicksPerSecond), now.Kind);
            var _appnotification_appnotificationactions_appnotification = new DSS1_RetailerDriverStockOptimisation.BO.AppNotificationAction
            {
                Link = "AppNotificationAction_Link",
                Type = "AppNotificationAction_Type",
            };
            var _appnotification_appnotificationactions_appnotification2 = new DSS1_RetailerDriverStockOptimisation.BO.AppNotificationAction
            {
                Link = "AppNotificationAction_Link",
                Type = "AppNotificationAction_Type",
            };
            var _appnotification_recipient_appnotifications = new DSS1_RetailerDriverStockOptimisation.BO.Contact
            {
                Id = 9771,
                UserName = "02f1c205-6284-43f3-a23e-0752844300beContact_UserName",
                PasswordHash = "Contact_PasswordHash",
                SecurityStamp = "Contact_SecurityStamp",
                EmailConfirmed = true,
                LockoutEnabled = true,
                PhoneNumberConfirmed = true,
                TwoFactorEnabled = true,
                AccessFailedCount = 5914,
                Name = "Contact_Name",
                Email = "Contact_Email",
                PhoneNumber = "Contact_PhoneNumber",
                LockoutEndDate = now,
            };
            new PersistenceSpecification<DSS1_RetailerDriverStockOptimisation.BO.AppNotification>(Session)
            .CheckProperty(p => p.Type, "AppNotification_Type")
            .CheckProperty(p => p.Reason, "AppNotification_Reason")
            .CheckProperty(p => p.DateCreated, now)
            .CheckProperty(p => p.IsRead, true)
            .CheckProperty(p => p.Item, "AppNotification_Item")
            .CheckProperty(p => p.Delta, 1582)
            .CheckBag(p => p.AppNotificationActions, (new List<DSS1_RetailerDriverStockOptimisation.BO.AppNotificationAction>
            {
                _appnotification_appnotificationactions_appnotification,
                _appnotification_appnotificationactions_appnotification2
            }))
            .CheckReference(p => p.Recipient, _appnotification_recipient_appnotifications)
            .VerifyTheMappings();
        }

        /// <summary>
        ///A test for testing the filtering of an object from Db
        ///</summary>
        [Test]
        [Description("This tests the filtering of `AppNotification`")]
        [Order(1)]
        public void AppNotification_filtering_test()
        {
            DateTime now = DateTime.Now;
            // Get datetime without milliseconds
            now = new DateTime(now.Ticks - (now.Ticks % TimeSpan.TicksPerSecond), now.Kind);
            var repo = new Repository(Session);
            List<DSS1_RetailerDriverStockOptimisation.BO.AppNotification> results = null;
            Assert.DoesNotThrow(() =>
            {
                results = repo.GetAsQueryable<DSS1_RetailerDriverStockOptimisation.BO.AppNotification>(
                              a => true
                              && (a.Type != string.Empty && a.Type != null)
                              && (a.Reason != string.Empty && a.Reason != null)
                              && a.DateCreated.GetValueOrDefault().Date <= DateTime.UtcNow.Date
                              && !a.IsRead
                              && (a.Item != string.Empty && a.Item != null)
                              && (a.Delta + 123 > 0)
                              && a.AppNotificationActions.Any()
                              && a.Recipient != null
                              ,
                              cacheQuery: true)
                          .OrderBy(a => a)
                          .Skip(0)
                          .Take(3)
                          .ToList();
            });
            Assert.AreNotEqual(null, results);
        }
    }
}